<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"><channel><title>Haskell Weekly</title><link>https://haskellweekly.news/podcast.html</link><description>Haskell Weekly covers the Haskell progamming language. Listen to professional software developers discuss using functional programming to solve real-world business problems. Each episode uses a conversational two-host format and runs for about 15 minutes.</description><language>en-US</language><copyright>© 2022 Taylor Fausak</copyright><image><url>https://haskellweekly.news/logo.png</url><title>Haskell Weekly</title><link>https://haskellweekly.news/podcast.html</link></image><atom:link href="https://haskellweekly.news/podcast.rss" rel="self" type="application/rss+xml"/><itunes:author>Taylor Fausak</itunes:author><itunes:category text="Technology"/><itunes:explicit>clean</itunes:explicit><itunes:owner><itunes:email>taylor@fausak.me</itunes:email><itunes:name>Taylor Fausak</itunes:name></itunes:owner><itunes:image href="https://haskellweekly.news/logo.png"/><item><title>2021 Survey Results</title><link>https://haskellweekly.news/episode/57.html</link><description>&lt;p&gt;Thanks to everyone who filled out the 2021 State of Haskell Survey! This week Cameron and Taylor review the results.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://taylor.fausak.me/2021/11/16/haskell-survey-results/"&gt;https://taylor.fausak.me/2021/11/16/haskell-survey-results/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="41943294" type="audio/mpeg" url="https://media.haskellweekly.news/2021-12-06-episode-57.mp3"/><guid isPermaLink="false">570d1a46-29e9-490d-9e45-103cedf9b922</guid><pubDate>Mon, 06 Dec 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>34:57</itunes:duration><itunes:episode>57</itunes:episode><itunes:summary>Thanks to everyone who filled out the 2021 State of Haskell Survey! This week Cameron and Taylor review the results.</itunes:summary></item><item><title>Monad Architecture</title><link>https://haskellweekly.news/episode/56.html</link><description>&lt;p&gt;This week Cameron and Taylor answer our first listener question: How should you structure large applications? We compare ReaderT with MTL along with other approaches.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://join.slack.com/t/haskell-foundation/shared_invite/zt-mjh76fw0-CEjg2NbyVE8rVQDvR%7E0F4A"&gt;https://join.slack.com/t/haskell-foundation/shared_invite/zt-mjh76fw0-CEjg2NbyVE8rVQDvR~0F4A&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="22683648" type="audio/mpeg" url="https://media.haskellweekly.news/2021-11-15-episode-56.mp3"/><guid isPermaLink="false">610fce3c-eb75-43a5-803f-90f20c027c09</guid><pubDate>Mon, 15 Nov 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>23:35</itunes:duration><itunes:episode>56</itunes:episode><itunes:summary>This week Cameron and Taylor answer our first listener question: How should you structure large applications? We compare ReaderT with MTL along with other approaches.</itunes:summary></item><item><title>GHC 9.2.1</title><link>https://haskellweekly.news/episode/55.html</link><description>&lt;p&gt;We’re back! After a month off, Cameron and Taylor get together to talk about what’s new in the Haskell world.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.haskell.org/ghc/blog/20211029-ghc-9.2.1-released.html"&gt;https://www.haskell.org/ghc/blog/20211029-ghc-9.2.1-released.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://haskellweekly.news/survey/2021.html"&gt;https://haskellweekly.news/survey/2021.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="33043376" type="audio/mpeg" url="https://media.haskellweekly.news/2021-11-08-episode-55.mp3"/><guid isPermaLink="false">5eca8eef-e273-4b87-aafa-ed67d1e654cb</guid><pubDate>Mon, 08 Nov 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>27:32</itunes:duration><itunes:episode>55</itunes:episode><itunes:summary>We're back! After a month off, Cameron and Taylor get together to talk about what's new in the Haskell world.</itunes:summary></item><item><title>Loop Breaker</title><link>https://haskellweekly.news/episode/54.html</link><description>&lt;p&gt;Cameron Gera and Taylor Fausak discuss Drew Olson’s adventures in looping. What should you do if you want to loop forever, but break out of the loop early sometimes?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.drewolson.org/adventures-in-looping"&gt;https://blog.drewolson.org/adventures-in-looping&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="25418233" type="audio/mpeg" url="https://media.haskellweekly.news/2021-10-04-episode-54.mp3"/><guid isPermaLink="false">485c164a-f0a2-4afb-81a9-13c269aa723b</guid><pubDate>Mon, 04 Oct 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>21:11</itunes:duration><itunes:episode>54</itunes:episode><itunes:summary>Cameron Gera and Taylor Fausak discuss Drew Olson's adventures in looping. What should you do if you want to loop forever, but break out of the loop early sometimes?</itunes:summary></item><item><title>Hash Flooding Aeson</title><link>https://haskellweekly.news/episode/53.html</link><description>&lt;p&gt;Special guest Tom Sydney Kerckhove talks with Taylor Fausak about a denial of service vulnerability in Aeson, a Haskell library for JSON.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cs-syd.eu/posts/2021-09-11-json-vulnerability"&gt;https://cs-syd.eu/posts/2021-09-11-json-vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackage.haskell.org/package/sydtest-0.4.0.0"&gt;https://hackage.haskell.org/package/sydtest-0.4.0.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackage.haskell.org/package/genvalidity-0.11.0.2"&gt;https://hackage.haskell.org/package/genvalidity-0.11.0.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackage.haskell.org/package/yamlparse-applicative-0.2.0.0"&gt;https://hackage.haskell.org/package/yamlparse-applicative-0.2.0.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="31453184" type="audio/mpeg" url="https://media.haskellweekly.news/2021-09-27-episode-53.mp3"/><guid isPermaLink="false">fd6830e9-b1e9-4c7d-b3db-54a7576bbcab</guid><pubDate>Mon, 27 Sep 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>26:13</itunes:duration><itunes:episode>53</itunes:episode><itunes:summary>Special guest Tom Sydney Kerckhove talks with Taylor Fausak about a denial of service vulnerability in Aeson, a Haskell library for JSON.</itunes:summary></item><item><title>Evoking Instances</title><link>https://haskellweekly.news/episode/52.html</link><description>&lt;p&gt;Taylor Fausak talks with Cameron Gera about Evoke, Taylor’s latest GHC plugin for deriving instances without generics or Template Haskell.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://taylor.fausak.me/2021/09/10/evoke/"&gt;https://taylor.fausak.me/2021/09/10/evoke/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="43593188" type="audio/mpeg" url="https://media.haskellweekly.news/2021-09-13-episode-52.mp3"/><guid isPermaLink="false">e0be1a71-42d2-450c-b7e6-f654072ecca6</guid><pubDate>Mon, 13 Sep 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>36:20</itunes:duration><itunes:episode>52</itunes:episode><itunes:summary>Taylor Fausak talks with Cameron Gera about Evoke, Taylor's latest GHC plugin for deriving instances without generics or Template Haskell.</itunes:summary></item><item><title>Dependent Haskell with Vladislav Zavialov</title><link>https://haskellweekly.news/episode/51.html</link><description>&lt;p&gt;Curious about dependent types? Special guest Vladislav Zavialov from Serokell breaks it down for us. We discuss comparisons to refinement types, sigma and pi types, interactions with linear types, and much more!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://serokell.io/blog/developing-ghc-for-a-living"&gt;https://serokell.io/blog/developing-ghc-for-a-living&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/int_index"&gt;https://twitter.com/int_index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="67501498" type="audio/mpeg" url="https://media.haskellweekly.news/2021-08-23-episode-51.mp3"/><guid isPermaLink="false">db5b3dce-b223-47a4-b209-9ba7cc17432e</guid><pubDate>Mon, 23 Aug 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>56:15</itunes:duration><itunes:episode>51</itunes:episode><itunes:summary>Curious about dependent types? Special guest Vladislav Zavialov from Serokell breaks it down for us. We discuss comparisons to refinement types, sigma and pi types, interactions with linear types, and much more!</itunes:summary></item><item><title>Our Tech Stack</title><link>https://haskellweekly.news/episode/50.html</link><description>&lt;p&gt;Stack, HLint, and Brittany, oh my! Cameron Gera and Taylor Fausak go on a deep dive into the ACI Learning tech stack.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.acilearning.com"&gt;https://www.acilearning.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="46865808" type="audio/mpeg" url="https://media.haskellweekly.news/2021-08-16-episode-50.mp3"/><guid isPermaLink="false">c0095feb-cfb0-4367-861a-c9c13ba048f6</guid><pubDate>Mon, 16 Aug 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>39:03</itunes:duration><itunes:episode>50</itunes:episode><itunes:summary>Stack, HLint, and Brittany, oh my! Cameron Gera and Taylor Fausak go on a deep dive into the ACI Learning tech stack.</itunes:summary></item><item><title>Cast Values with Witch</title><link>https://haskellweekly.news/episode/49.html</link><description>&lt;p&gt;Back from summer break, Cameron Gera discusses the Witch library with it’s author, Taylor Fausak. Learn about the many motivations behind this simple library for converting values between various types.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://taylor.fausak.me/2021/07/13/witch/"&gt;https://taylor.fausak.me/2021/07/13/witch/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackage.haskell.org/package/say-my-name-0.1.0.0"&gt;https://hackage.haskell.org/package/say-my-name-0.1.0.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="48402853" type="audio/mpeg" url="https://media.haskellweekly.news/2021-08-09-episode-49.mp3"/><guid isPermaLink="false">b2879572-ac84-454c-9f31-feb518e8145b</guid><pubDate>Mon, 09 Aug 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>33:37</itunes:duration><itunes:episode>49</itunes:episode><itunes:summary>Back from summer break, Cameron Gera discusses the Witch library with it's author, Taylor Fausak. Learn about the many motivations behind this simple library for converting values between various types.</itunes:summary></item><item><title>The Voids of Haskell</title><link>https://haskellweekly.news/episode/48.html</link><description>&lt;p&gt;There’s a lot to like about Haskell, but what is it missing? We explore Alexander Granin’s post where he suggests some topics for books that could benefit the Haskell community.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/graninas/The-Voids-Of-Haskell/blob/9b401e33af37f991dcb3ab2eedc023661237d845/README.md"&gt;https://github.com/graninas/The-Voids-Of-Haskell/blob/9b401e33af37f991dcb3ab2eedc023661237d845/README.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="28999680" type="audio/mpeg" url="https://media.haskellweekly.news/2021-06-08-episode-48.mp3"/><guid isPermaLink="false">a8e848db-6382-4a6a-b248-b81bc2123bd6</guid><pubDate>Tue, 08 Jun 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>30:12</itunes:duration><itunes:episode>48</itunes:episode><itunes:summary>There's a lot to like about Haskell, but what is it missing? We explore Alexander Granin's post where he suggests some topics for books that could benefit the Haskell community.</itunes:summary></item><item><title>Simple Haskell Handbook with Marco Sampellegrini</title><link>https://haskellweekly.news/episode/47.html</link><description>&lt;p&gt;Special guest Marco Sampellegrini talks with us about his recent book, The Simple Haskell Handbook. The book describes a project driven approach to Haskell development, using a continuous integration server as a motivating example.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/simple-haskell-book"&gt;https://leanpub.com/simple-haskell-book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="40759296" type="audio/mpeg" url="https://media.haskellweekly.news/2021-06-01-episode-47.mp3"/><guid isPermaLink="false">f0704fa0-c58f-42bc-b1be-d364ab8f6e8f</guid><pubDate>Tue, 01 Jun 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>42:27</itunes:duration><itunes:episode>47</itunes:episode><itunes:summary>Special guest Marco Sampellegrini talks with us about his recent book, The Simple Haskell Handbook. The book describes a project driven approach to Haskell development, using a continuous integration server as a motivating example.</itunes:summary></item><item><title>Module Organization Guidelines</title><link>https://haskellweekly.news/episode/46.html</link><description>&lt;p&gt;Should you organize modules vertically or horizontally? This week we take a look at another article by Gabriella Gonzalez, this time about organizing projects and packages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.haskellforall.com/2021/05/module-organization-guidelines-for.html"&gt;https://www.haskellforall.com/2021/05/module-organization-guidelines-for.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="25174016" type="audio/mpeg" url="https://media.haskellweekly.news/2021-05-24-episode-46.mp3"/><guid isPermaLink="false">e90e98b3-00e1-4468-9ec5-61e42fd8d73f</guid><pubDate>Mon, 24 May 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>26:13</itunes:duration><itunes:episode>46</itunes:episode><itunes:summary>Should you organize modules vertically or horizontally? This week we take a look at another article by Gabriella Gonzalez, this time about organizing projects and packages.</itunes:summary></item><item><title>Avoiding Nested Errors</title><link>https://haskellweekly.news/episode/45.html</link><description>&lt;p&gt;How can you avoid deeply nested error handling code? This week we review Gabriella Gonzalez’s trick for keeping error handling flat.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.haskellforall.com/2021/05/the-trick-to-avoid-deeply-nested-error.html"&gt;https://www.haskellforall.com/2021/05/the-trick-to-avoid-deeply-nested-error.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="18165760" type="audio/mpeg" url="https://media.haskellweekly.news/2021-05-10-episode-45.mp3"/><guid isPermaLink="false">da186d83-70e6-4d44-8048-df4f9c8468d0</guid><pubDate>Mon, 10 May 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>18:55</itunes:duration><itunes:episode>45</itunes:episode><itunes:summary>How can you avoid deeply nested error handling code? This week we review Gabriella Gonzalez's trick for keeping error handling flat.</itunes:summary></item><item><title>Haskell Foundation with Andrew Boardman</title><link>https://haskellweekly.news/episode/44.html</link><description>&lt;p&gt;Curious about the Haskell Foundation? This week we interview Andrew Boardman, its Executive Director. He explains the Foundation’s purpose and how you can help.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://haskell.foundation"&gt;https://haskell.foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fpchat-invite.herokuapp.com"&gt;https://fpchat-invite.herokuapp.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://funprog.zulipchat.com/login/"&gt;https://funprog.zulipchat.com/login/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.haskell.org/IRC_channel"&gt;https://wiki.haskell.org/IRC_channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discourse.haskell.org"&gt;https://discourse.haskell.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/myShoggoth"&gt;https://twitter.com/myShoggoth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://myshoggoth.com"&gt;https://myshoggoth.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://joyofhaskell.com/posts/2021-02-24-why-stm.html"&gt;https://joyofhaskell.com/posts/2021-02-24-why-stm.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="51607137" type="audio/mpeg" url="https://media.haskellweekly.news/2021-05-04-episode-44.mp3"/><guid isPermaLink="false">c875e76f-0cfc-42c1-8f9f-b817c45e64bd</guid><pubDate>Tue, 04 May 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>53:45</itunes:duration><itunes:episode>44</itunes:episode><itunes:summary>Curious about the Haskell Foundation? This week we interview Andrew Boardman, its Executive Director. He explains the Foundation's purpose and how you can help.</itunes:summary></item><item><title>Default Exception Handlers</title><link>https://haskellweekly.news/episode/43.html</link><description>&lt;p&gt;What happens to exceptions when you don’t explicitly handle them? This week we review Taylor’s blog post about default exception handlers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://taylor.fausak.me/2021/04/03/default-exception-handler-in-haskell/"&gt;https://taylor.fausak.me/2021/04/03/default-exception-handler-in-haskell/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="13054582" type="audio/mpeg" url="https://media.haskellweekly.news/2021-04-19-episode-43.mp3"/><guid isPermaLink="false">b6b7b486-9153-48ee-a9d9-36eb601e50e0</guid><pubDate>Mon, 19 Apr 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>13:35</itunes:duration><itunes:episode>43</itunes:episode><itunes:summary>What happens to exceptions when you don't explicitly handle them? This week we review Taylor's blog post about default exception handlers.</itunes:summary></item><item><title>Async Exceptions</title><link>https://haskellweekly.news/episode/42.html</link><description>&lt;p&gt;Special guest Cody Goodman walks us through an interesting PostgreSQL bug. Handling async exceptions properly is trickier than you might expect!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parsonsmatt.org/2021/03/17/async_control_flow.html"&gt;https://www.parsonsmatt.org/2021/03/17/async_control_flow.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codygman/tech-roam/blob/master/20210326113249-haskell_persistent_issues_postgres_connections_are_returned_to_pool_too_quickly.org"&gt;https://github.com/codygman/tech-roam/blob/master/20210326113249-haskell_persistent_issues_postgres_connections_are_returned_to_pool_too_quickly.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="28081468" type="audio/mpeg" url="https://media.haskellweekly.news/2021-03-29-episode-42.mp3"/><guid isPermaLink="false">afbf4cb6-64a3-47ec-af03-c479acaa1b8c</guid><pubDate>Mon, 29 Mar 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>29:15</itunes:duration><itunes:episode>42</itunes:episode><itunes:summary>Special guest Cody Goodman walks us through an interesting PostgreSQL bug. Handling async exceptions properly is trickier than you might expect!</itunes:summary></item><item><title>Unified Vector</title><link>https://haskellweekly.news/episode/41.html</link><description>&lt;p&gt;Byte string, text, and vector, oh my! This week we review Michael Snoyman’s proposal to unify vector-like types. Learn about boxed versus unboxed values, pinned versus unpinned memory, and more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.snoyman.com/blog/2021/04/haskell-base-proposal/"&gt;https://www.snoyman.com/blog/2021/04/haskell-base-proposal/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="23625187" type="audio/mpeg" url="https://media.haskellweekly.news/2021-03-22-episode-41.mp3"/><guid isPermaLink="false">9b216c63-414c-4830-a09d-083a7230949f</guid><pubDate>Mon, 22 Mar 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>24:36</itunes:duration><itunes:episode>41</itunes:episode><itunes:summary>Byte string, text, and vector, oh my! This week we review Michael Snoyman's proposal to unify vector-like types. Learn about boxed versus unboxed values, pinned versus unpinned memory, and more.</itunes:summary></item><item><title>Chat Wisely</title><link>https://haskellweekly.news/episode/40.html</link><description>&lt;p&gt;Special guests Michael Litchard and Brian Hurt talk with us about their new social networking site Chat Wisely. We hear about their experience using Haskell not only on the backend but also on the frontend through GHCJS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.chatwisely.com"&gt;https://www.chatwisely.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.patreon.com/chatwisely"&gt;https://www.patreon.com/chatwisely&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="46498026" type="audio/mpeg" url="https://media.haskellweekly.news/2021-03-17-episode-40.mp3"/><guid isPermaLink="false">8411df65-0665-4649-8279-b1abe405e040</guid><pubDate>Wed, 17 Mar 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>46:39</itunes:duration><itunes:episode>40</itunes:episode><itunes:summary>Special guests Michael Litchard and Brian Hurt talk with us about their new social networking site Chat Wisely. We hear about their experience using Haskell not only on the backend but also on the frontend through GHCJS.</itunes:summary></item><item><title>Haskell Wingman with Sandy Maguire</title><link>https://haskellweekly.news/episode/39.html</link><description>&lt;p&gt;Special guest Sandy Maguire talks with us about using Haskell Wingman for program synthesis, designing bulletproof abstractions with algebra, wrangling type level programming in Haskell, and managing effects with his Polysemy library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.patreon.com/wingman_for_haskell"&gt;https://www.patreon.com/wingman_for_haskell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/algebra-driven-design"&gt;https://leanpub.com/algebra-driven-design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/thinking-with-types"&gt;https://leanpub.com/thinking-with-types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/polysemy-research/polysemy"&gt;https://github.com/polysemy-research/polysemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reasonablypolymorphic.com"&gt;https://reasonablypolymorphic.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sandymaguire.me"&gt;https://sandymaguire.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="48042902" type="audio/mpeg" url="https://media.haskellweekly.news/2021-03-08-episode-39.mp3"/><guid isPermaLink="false">706ebc1e-307a-40d4-8fa3-2f4ec3541bc9</guid><pubDate>Mon, 08 Mar 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>47:01</itunes:duration><itunes:episode>39</itunes:episode><itunes:summary>Special guest Sandy Maguire talks with us about using Haskell Wingman for program synthesis, designing bulletproof abstractions with algebra, wrangling type level programming in Haskell, and managing effects with his Polysemy library.</itunes:summary></item><item><title>GHC 9.0.1</title><link>https://haskellweekly.news/episode/38.html</link><description>&lt;p&gt;Linear types finally landed in GHC 9.0.1! We talk through what that means along with other news from the Haskell Foundation and Tweag.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discourse.haskell.org/t/haskell-foundation-executive-director-and-chief-technology-officer/1861"&gt;https://discourse.haskell.org/t/haskell-foundation-executive-director-and-chief-technology-officer/1861&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discourse.haskell.org/t/ghc-8-10-4-released/1847"&gt;https://discourse.haskell.org/t/ghc-8-10-4-released/1847&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discourse.haskell.org/t/ghc-9-0-1-released/1840"&gt;https://discourse.haskell.org/t/ghc-9-0-1-released/1840&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tweag.io/blog/2021-02-10-linear-base/"&gt;https://www.tweag.io/blog/2021-02-10-linear-base/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="28770384" type="audio/mpeg" url="https://media.haskellweekly.news/2021-02-22-episode-38.mp3"/><guid isPermaLink="false">67d13fea-1cd1-4e9c-b27e-6b5e897280b6</guid><pubDate>Mon, 22 Feb 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>27:18</itunes:duration><itunes:episode>38</itunes:episode><itunes:summary>Linear types finally landed in GHC 9.0.1! We talk through what that means along with other news from the Haskell Foundation and Tweag.</itunes:summary></item><item><title>Type Applications</title><link>https://haskellweekly.news/episode/37.html</link><description>&lt;p&gt;Come &lt;code&gt;@&lt;/code&gt; me bro! In this episode we review Zac Wood’s post about the type applications language extension.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zacwood.me/posts/haskell-type-application/"&gt;https://zacwood.me/posts/haskell-type-application/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="20353812" type="audio/mpeg" url="https://media.haskellweekly.news/2021-02-08-episode-37.mp3"/><guid isPermaLink="false">59638cbd-3b43-4c5b-b0db-e46b0d0675bd</guid><pubDate>Mon, 08 Feb 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>18:33</itunes:duration><itunes:episode>37</itunes:episode><itunes:summary>Come `@` me bro! In this episode we review Zac Wood's post about the type applications language extension.</itunes:summary></item><item><title>Production Haskell with Matt Parsons</title><link>https://haskellweekly.news/episode/36.html</link><description>&lt;p&gt;Special guest Matt Parsons talks to us about his upcoming book, Production Haskell.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/production-haskell"&gt;https://leanpub.com/production-haskell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/prodhaskell"&gt;https://twitter.com/prodhaskell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="32881421" type="audio/mpeg" url="https://media.haskellweekly.news/2021-02-01-episode-36.mp3"/><guid isPermaLink="false">4170635b-c65b-40ef-b34a-0111dfc9ccd3</guid><pubDate>Mon, 01 Feb 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>32:53</itunes:duration><itunes:episode>36</itunes:episode><itunes:summary>Special guest Matt Parsons talks to us about his upcoming book, Production Haskell.</itunes:summary></item><item><title>Maybe Either</title><link>https://haskellweekly.news/episode/35.html</link><description>&lt;p&gt;Is Maybe problematic? Well, maybe. Robert Peszek thinks that Maybe is overused. Cameron Gera and Taylor Fausak break it down and consider alternatives.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://rpeszek.github.io/posts/2021-01-17-maybe-overuse.html"&gt;https://rpeszek.github.io/posts/2021-01-17-maybe-overuse.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="29352917" type="audio/mpeg" url="https://media.haskellweekly.news/2021-01-26-episode-35.mp3"/><guid isPermaLink="false">3c79db09-71af-403d-90ef-abb839df5138</guid><pubDate>Tue, 26 Jan 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>28:12</itunes:duration><itunes:episode>35</itunes:episode><itunes:summary>Is Maybe problematic? Well, maybe. Robert Peszek thinks that Maybe is overused. Cameron Gera and Taylor Fausak break it down and consider alternatives.</itunes:summary></item><item><title>Production Haskell</title><link>https://haskellweekly.news/episode/34.html</link><description>&lt;p&gt;Christian Charukiewicz at Foxhound Systems wrote a list of reasons to prefer Haskell for building production systems. Cameron Gera and Taylor Fausak review the list and share their experience at ITProTV.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.foxhound.systems/blog/why-haskell-for-production/"&gt;https://www.foxhound.systems/blog/why-haskell-for-production/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="27275545" type="audio/mpeg" url="https://media.haskellweekly.news/2021-01-22-episode-34.mp3"/><guid isPermaLink="false">21471901-5115-479d-85dd-cc1a31deb997</guid><pubDate>Fri, 22 Jan 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>26:04</itunes:duration><itunes:episode>34</itunes:episode><itunes:summary>Christian Charukiewicz at Foxhound Systems wrote a list of reasons to prefer Haskell for building production systems. Cameron Gera and Taylor Fausak review the list and share their experience at ITProTV.</itunes:summary></item><item><title>2020 Retrospective</title><link>https://haskellweekly.news/episode/33.html</link><description>&lt;p&gt;Using Adam Wespiser’s blog post as a jumping off point, Cameron Gera and Taylor Fausak look back on a year of Haskell.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wespiser.com/posts/2021-01-03-Lessons-Learned-From-A-Year-Of-Haskell.html"&gt;https://wespiser.com/posts/2021-01-03-Lessons-Learned-From-A-Year-Of-Haskell.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="29472217" type="audio/mpeg" url="https://media.haskellweekly.news/2021-01-11-episode-33.mp3"/><guid isPermaLink="false">1fb365b8-7624-470b-a2d4-d1d40df7f3ce</guid><pubDate>Mon, 11 Jan 2021 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>27:32</itunes:duration><itunes:episode>33</itunes:episode><itunes:summary>Using Adam Wespiser's blog post as a jumping off point, Cameron Gera and Taylor Fausak look back on a year of Haskell.</itunes:summary></item><item><title>Parser Combinators</title><link>https://haskellweekly.news/episode/32.html</link><description>&lt;p&gt;Are you curious about how Parsec is implemented behind the scenes? Cameron Gera and Taylor Fausak follow Antoine Leblanc’s walkthrough.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hasura.io/blog/parser-combinators-walkthrough/"&gt;https://hasura.io/blog/parser-combinators-walkthrough/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dev.stephendiehl.com/fun/002_parsers.html"&gt;http://dev.stephendiehl.com/fun/002_parsers.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="37124835" type="audio/mpeg" url="https://media.haskellweekly.news/2020-12-14-episode-32.mp3"/><guid isPermaLink="false">0f32c9ec-22a4-4a6a-8c14-b449b525d63f</guid><pubDate>Mon, 14 Dec 2020 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>33:56</itunes:duration><itunes:episode>32</itunes:episode><itunes:summary>Are you curious about how Parsec is implemented behind the scenes? Cameron Gera and Taylor Fausak follow Antoine Leblanc's walkthrough.</itunes:summary></item><item><title>Simplify Deriving</title><link>https://haskellweekly.news/episode/31.html</link><description>&lt;p&gt;Can Haskell’s deriving mechanism be simplified? Cody Goodman, Cameron Gera, and Taylor Fausak walk through the changes that Matt Parsons suggested.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parsonsmatt.org/2020/11/10/simplifying_deriving.html"&gt;https://www.parsonsmatt.org/2020/11/10/simplifying_deriving.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="28823143" type="audio/mpeg" url="https://media.haskellweekly.news/2020-11-16-episode-31.mp3"/><guid isPermaLink="false">9b8aafdf-1b14-4261-8906-6976cd68797f</guid><pubDate>Mon, 16 Nov 2020 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>27:32</itunes:duration><itunes:episode>31</itunes:episode><itunes:summary>Can Haskell's deriving mechanism be simplified? Cody Goodman, Cameron Gera, and Taylor Fausak walk through the changes that Matt Parsons suggested.</itunes:summary></item><item><title>Type Safety</title><link>https://haskellweekly.news/episode/30.html</link><description>&lt;p&gt;Newtypes let you give things names, but is that type safety? Andres Schmois, Cameron Gera, and Taylor Fausak explore a blog post by Alexis King.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lexi-lambda.github.io/blog/2020/11/01/names-are-not-type-safety/"&gt;https://lexi-lambda.github.io/blog/2020/11/01/names-are-not-type-safety/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MEmRarBL9kw"&gt;https://www.youtube.com/watch?v=MEmRarBL9kw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://np.reddit.com/r/haskell/comments/jnwg7i/haskell_foundation_ama/"&gt;https://np.reddit.com/r/haskell/comments/jnwg7i/haskell_foundation_ama/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="27119105" type="audio/mpeg" url="https://media.haskellweekly.news/2020-11-09-episode-30.mp3"/><guid isPermaLink="false">8377e7cf-969a-4dd5-b607-b141e6303e63</guid><pubDate>Mon, 09 Nov 2020 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>24:25</itunes:duration><itunes:episode>30</itunes:episode><itunes:summary>Newtypes let you give things names, but is that type safety? Andres Schmois, Cameron Gera, and Taylor Fausak explore a blog post by Alexis King.</itunes:summary></item><item><title>Bad Parts</title><link>https://haskellweekly.news/episode/29.html</link><description>&lt;p&gt;Even well-designed languages have rough edges. Cameron Gera and Taylor Fausak review some of the bad parts of Haskell.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.snoyman.com/blog/2020/10/haskell-bad-parts-1"&gt;https://www.snoyman.com/blog/2020/10/haskell-bad-parts-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://haskellweekly.news/survey/2020.html"&gt;https://haskellweekly.news/survey/2020.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="22874388" type="audio/mpeg" url="https://media.haskellweekly.news/2020-11-02-episode-29.mp3"/><guid isPermaLink="false">71b4ee91-64a1-4afa-9950-40516b58f3ea</guid><pubDate>Mon, 02 Nov 2020 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>21:12</itunes:duration><itunes:episode>29</itunes:episode><itunes:summary>Even well-designed languages have rough edges. Cameron Gera and Taylor Fausak review some of the bad parts of Haskell.</itunes:summary></item><item><title>GHC 2021</title><link>https://haskellweekly.news/episode/28.html</link><description>&lt;p&gt;Does the idea of -XGHC2021 excite you? Cameron Gera and Taylor Fausak work through this proposed set of language extensions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://np.reddit.com/r/haskell/comments/je1t82/does_the_idea_of_xghc2021_excite_you/"&gt;https://np.reddit.com/r/haskell/comments/je1t82/does_the_idea_of_xghc2021_excite_you/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ghc-proposals/ghc-proposals/pull/372"&gt;https://github.com/ghc-proposals/ghc-proposals/pull/372&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hacktoberfest.digitalocean.com"&gt;https://hacktoberfest.digitalocean.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kowainik/learn4haskell"&gt;https://github.com/kowainik/learn4haskell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="24194568" type="audio/mpeg" url="https://media.haskellweekly.news/2020-10-26-episode-28.mp3"/><guid isPermaLink="false">603912c0-3793-4396-a558-6cf0c924d9fe</guid><pubDate>Mon, 26 Oct 2020 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>22:16</itunes:duration><itunes:episode>28</itunes:episode><itunes:summary>Does the idea of -XGHC2021 excite you? Cameron Gera and Taylor Fausak work through this proposed set of language extensions.</itunes:summary></item><item><title>Interview Questions</title><link>https://haskellweekly.news/episode/27.html</link><description>&lt;p&gt;Learn how to answer common technical interview questions with Haskell. Cameron Gera and Taylor Fausak discuss Chris Penner’s blog post.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chrispenner.ca/posts/interview"&gt;https://chrispenner.ca/posts/interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hacktoberfest.digitalocean.com"&gt;https://hacktoberfest.digitalocean.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kowainik/learn4haskell"&gt;https://github.com/kowainik/learn4haskell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="35193073" type="audio/mpeg" url="https://media.haskellweekly.news/2020-10-19-episode-27.mp3"/><guid isPermaLink="false">5417c280-694e-4944-b7e9-f34c82b5f481</guid><pubDate>Mon, 19 Oct 2020 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>31:33</itunes:duration><itunes:episode>27</itunes:episode><itunes:summary>Learn how to answer common technical interview questions with Haskell. Cameron Gera and Taylor Fausak discuss Chris Penner's blog post.</itunes:summary></item><item><title>Recursive Monoids</title><link>https://haskellweekly.news/episode/26.html</link><description>&lt;p&gt;Sara Lichtenstein, Cameron Gera, and Taylor Fausak get recursively drunk on semigroups and monoids.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/sshine/getting-recursively-drunk-with-monoids-2jek"&gt;https://dev.to/sshine/getting-recursively-drunk-with-monoids-2jek&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="20277774" type="audio/mpeg" url="https://media.haskellweekly.news/2020-10-13-episode-26.mp3"/><guid isPermaLink="false">4b9f812e-8a9f-45c2-b221-f2b8f8d5270c</guid><pubDate>Tue, 13 Oct 2020 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>18:51</itunes:duration><itunes:episode>26</itunes:episode><itunes:summary>Sara Lichtenstein, Cameron Gera, and Taylor Fausak get recursively drunk on semigroups and monoids.</itunes:summary></item><item><title>Strategic Deriving</title><link>https://haskellweekly.news/episode/25.html</link><description>&lt;p&gt;Cameron Gera and Taylor Fausak discuss the pros and cons of various deriving strategies.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kowainik.github.io/posts/deriving"&gt;https://kowainik.github.io/posts/deriving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hacktoberfest.digitalocean.com"&gt;https://hacktoberfest.digitalocean.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tfausak/how-to-define-json-instances-quickly-5ei7"&gt;https://dev.to/tfausak/how-to-define-json-instances-quickly-5ei7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.parsonsmatt.org/2019/11/27/keeping_compilation_fast.html"&gt;https://www.parsonsmatt.org/2019/11/27/keeping_compilation_fast.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pwnrfREbhWY"&gt;https://www.youtube.com/watch?v=pwnrfREbhWY&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="37134093" type="audio/mpeg" url="https://media.haskellweekly.news/2020-10-08-episode-25.mp3"/><guid isPermaLink="false">474c84d6-4364-408d-91e9-94eaf08945d2</guid><pubDate>Thu, 08 Oct 2020 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>33:05</itunes:duration><itunes:episode>25</itunes:episode><itunes:summary>Cameron Gera and Taylor Fausak discuss the pros and cons of various deriving strategies.</itunes:summary></item><item><title>Haskell Survey</title><link>https://haskellweekly.news/episode/24.html</link><description>&lt;p&gt;Jose Silvestri and Cameron Gera go over the 2019 State of Haskell Survey and encourage you to fill it out.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://haskellweekly.news/survey/2019.html"&gt;https://haskellweekly.news/survey/2019.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://taylor.fausak.me/2018/11/18/2018-state-of-haskell-survey-results/"&gt;https://taylor.fausak.me/2018/11/18/2018-state-of-haskell-survey-results/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://taylor.fausak.me/2017/11/15/2017-state-of-haskell-survey-results/"&gt;https://taylor.fausak.me/2017/11/15/2017-state-of-haskell-survey-results/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="11497472" type="audio/mpeg" url="https://media.haskellweekly.news/2019-11-08-episode-24.mp3"/><guid isPermaLink="false">ec19bb5d-f9e9-4bf6-b4e4-d055a3d747f0</guid><pubDate>Fri, 08 Nov 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>7:57</itunes:duration><itunes:episode>24</itunes:episode><itunes:summary>Jose Silvestri and Cameron Gera go over the 2019 State of Haskell Survey and encourage you to fill it out.</itunes:summary></item><item><title>Functional Reactive Programming</title><link>https://haskellweekly.news/episode/23.html</link><description>&lt;p&gt;Jose Silvestri and Dustin Segers give a whirlwind tour of FRP, exploring what it is and why you might want to use it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://begriffs.com/posts/2015-07-22-essence-of-frp.html"&gt;https://begriffs.com/posts/2015-07-22-essence-of-frp.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.seas.upenn.edu/%7Ecis194/fall16/lectures/11-frp.html"&gt;https://www.seas.upenn.edu/~cis194/fall16/lectures/11-frp.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apfelmus.nfshost.com/blog/2011/05/06-frp-why-functors.html"&gt;https://apfelmus.nfshost.com/blog/2011/05/06-frp-why-functors.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/1028250/what-is-functional-reactive-programming"&gt;https://stackoverflow.com/questions/1028250/what-is-functional-reactive-programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.haskell.org/FRP_explanation_using_reactive-banana"&gt;https://wiki.haskell.org/FRP_explanation_using_reactive-banana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.haskell.org/Reactive-banana/Examples"&gt;https://wiki.haskell.org/Reactive-banana/Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gelisam/frp-zoo"&gt;https://github.com/gelisam/frp-zoo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="29309575" type="audio/mpeg" url="https://media.haskellweekly.news/2019-10-30-episode-23.mp3"/><guid isPermaLink="false">1492e4e4-4897-402f-b953-796870946ebd</guid><pubDate>Wed, 30 Oct 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>20:18</itunes:duration><itunes:episode>23</itunes:episode><itunes:summary>Jose Silvestri and Dustin Segers give a whirlwind tour of FRP, exploring what it is and why you might want to use it.</itunes:summary></item><item><title>Refactoring Yahtzee</title><link>https://haskellweekly.news/episode/22.html</link><description>&lt;p&gt;Cameron Gera and Taylor Fausak discuss using types to guide refactoring toward better design.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://h2.jaguarpaw.co.uk/posts/good-design-and-type-safety-in-yahtzee/"&gt;http://h2.jaguarpaw.co.uk/posts/good-design-and-type-safety-in-yahtzee/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="45579206" type="audio/mpeg" url="https://media.haskellweekly.news/2019-10-14-episode-22.mp3"/><guid isPermaLink="false">e6e8718a-19f5-4a0b-8962-f2fb08cd1432</guid><pubDate>Mon, 14 Oct 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>31:41</itunes:duration><itunes:episode>22</itunes:episode><itunes:summary>Cameron Gera and Taylor Fausak discuss using types to guide refactoring toward better design.</itunes:summary></item><item><title>Event Log</title><link>https://haskellweekly.news/episode/21.html</link><description>&lt;p&gt;Cody Goodman and Taylor Fausak explore the event log that GHC can produce when compiling or running.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.well-typed.com/blog/2019/09/eventful-ghc/"&gt;https://www.well-typed.com/blog/2019/09/eventful-ghc/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="21299200" type="audio/mpeg" url="https://media.haskellweekly.news/2019-10-07-episode-21.mp3"/><guid isPermaLink="false">dc731681-016f-4380-8acc-18877ba41abe</guid><pubDate>Mon, 07 Oct 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>14:46</itunes:duration><itunes:episode>21</itunes:episode><itunes:summary>Cody Goodman and Taylor Fausak explore the event log that GHC can produce when compiling or running.</itunes:summary></item><item><title>Polymorphic Rounding</title><link>https://haskellweekly.news/episode/20.html</link><description>&lt;p&gt;Sara Lichtenstein and Taylor Fausak discuss converting between numeric types with polymorphic functions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://typeclasses.com/featured/rounding"&gt;https://typeclasses.com/featured/rounding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="22811159" type="audio/mpeg" url="https://media.haskellweekly.news/2019-09-13-episode-20.mp3"/><guid isPermaLink="false">d916811b-886b-4da7-a104-ff65bda7124c</guid><pubDate>Fri, 13 Sep 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>15:49</itunes:duration><itunes:episode>20</itunes:episode><itunes:summary>Sara Lichtenstein and Taylor Fausak discuss converting between numeric types with polymorphic functions.</itunes:summary></item><item><title>Profunctor Optics</title><link>https://haskellweekly.news/episode/19.html</link><description>&lt;p&gt;Cameron Gera and Andres Schmois talk about practical uses for profunctor lenses and optics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thomashoneyman.com/articles/practical-profunctor-lenses-optics/"&gt;https://thomashoneyman.com/articles/practical-profunctor-lenses-optics/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="27317566" type="audio/mpeg" url="https://media.haskellweekly.news/2019-08-20-episode-19.mp3"/><guid isPermaLink="false">bbd19a71-7d79-4514-8acb-a5729cdd26c6</guid><pubDate>Tue, 20 Aug 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>18:56</itunes:duration><itunes:episode>19</itunes:episode><itunes:summary>Cameron Gera and Andres Schmois talk about practical uses for profunctor lenses and optics.</itunes:summary></item><item><title>Inventing Monads</title><link>https://haskellweekly.news/episode/18.html</link><description>&lt;p&gt;Cody Goodman and Taylor Fausak walk through inventing monads from scratch in JavaScript.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.kabir.sh/posts/inventing-monads.html"&gt;https://blog.kabir.sh/posts/inventing-monads.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="24062492" type="audio/mpeg" url="https://media.haskellweekly.news/2019-08-13-episode-18.mp3"/><guid isPermaLink="false">153162fd-b6f5-40f7-8b05-fe20b91b702b</guid><pubDate>Tue, 13 Aug 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>16:41</itunes:duration><itunes:episode>18</itunes:episode><itunes:summary>Cody Goodman and Taylor Fausak walk through inventing monads from scratch in JavaScript.</itunes:summary></item><item><title>Haskell Phrasebook</title><link>https://haskellweekly.news/episode/17.html</link><description>&lt;p&gt;Sara Lichtenstein and Andres Schmois discuss quickly learning Haskell by studying annotated examples.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://typeclasses.com/news/2019-07-phrasebook"&gt;https://typeclasses.com/news/2019-07-phrasebook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="20120892" type="audio/mpeg" url="https://media.haskellweekly.news/2019-08-06-episode-17.mp3"/><guid isPermaLink="false">df526ec2-5d4e-4c1a-b4b5-eca8b6918731</guid><pubDate>Tue, 06 Aug 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>13:56</itunes:duration><itunes:episode>17</itunes:episode><itunes:summary>Sara Lichtenstein and Andres Schmois discuss quickly learning Haskell by studying annotated examples.</itunes:summary></item><item><title>Game Development</title><link>https://haskellweekly.news/episode/16.html</link><description>&lt;p&gt;Dustin Segers and Cody Goodman talk about developing video games using Haskell.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linearity.itch.io/peoplemon"&gt;https://linearity.itch.io/peoplemon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jxv.io/blog/2018-02-28-A-Game-in-Haskell.html"&gt;http://jxv.io/blog/2018-02-28-A-Game-in-Haskell.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.indiedb.com/games/nikki-and-the-robots/downloads"&gt;https://www.indiedb.com/games/nikki-and-the-robots/downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FailWhaleBrigade/water-wars"&gt;https://github.com/FailWhaleBrigade/water-wars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.allureofthestars.com/"&gt;https://www.allureofthestars.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://np.reddit.com/r/haskellgamedev"&gt;https://np.reddit.com/r/haskellgamedev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mmhaskell.com/blog/2019/3/25/making-a-glossy-game-part-1"&gt;https://mmhaskell.com/blog/2019/3/25/making-a-glossy-game-part-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ocharles.org.uk/posts/2013-12-10-24-days-of-hackage-gloss.html"&gt;https://ocharles.org.uk/posts/2013-12-10-24-days-of-hackage-gloss.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://andrew.gibiansky.com/blog/haskell/haskell-gloss/"&gt;http://andrew.gibiansky.com/blog/haskell/haskell-gloss/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fumieval.github.io/rhythm-game-tutorial/"&gt;https://fumieval.github.io/rhythm-game-tutorial/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdry.wordpress.com/2016/10/11/tetris-in-haskell-in-a-weekend/"&gt;https://cdry.wordpress.com/2016/10/11/tetris-in-haskell-in-a-weekend/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.aas.sh/posts/2018-09-10-Making-A-Game-With-Haskell-And-Apecs/"&gt;https://blog.aas.sh/posts/2018-09-10-Making-A-Game-With-Haskell-And-Apecs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://keera.co.uk/blog/2013/03/19/creating-board-games-in-haskell/"&gt;http://keera.co.uk/blog/2013/03/19/creating-board-games-in-haskell/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1MNTerD8IuI"&gt;https://www.youtube.com/watch?v=1MNTerD8IuI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jshaskell.blogspot.com"&gt;https://jshaskell.blogspot.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ocharles.org.uk/blog/posts/2013-08-18-asteroids-in-netwire.html"&gt;https://ocharles.org.uk/blog/posts/2013-08-18-asteroids-in-netwire.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prog21.dadgum.com/23.html"&gt;https://prog21.dadgum.com/23.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meteficha/Hipmunk"&gt;https://github.com/meteficha/Hipmunk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="18561769" type="audio/mpeg" url="https://media.haskellweekly.news/2019-07-30-episode-16.mp3"/><guid isPermaLink="false">0bbb483d-d256-4311-b2bc-2a98a0c0eaad</guid><pubDate>Tue, 30 Jul 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>12:54</itunes:duration><itunes:episode>16</itunes:episode><itunes:summary>Dustin Segers and Cody Goodman talk about developing video games using Haskell.</itunes:summary></item><item><title>Lazy Sharing</title><link>https://haskellweekly.news/episode/15.html</link><description>&lt;p&gt;Cameron Gera and Taylor Fausak talk about how function calls are evaluated in Haskell with regards to non-strictness.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://treszkai.github.io/2019/07/13/haskell-eval"&gt;https://treszkai.github.io/2019/07/13/haskell-eval&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="26208359" type="audio/mpeg" url="https://media.haskellweekly.news/2019-07-23-episode-15.mp3"/><guid isPermaLink="false">a76ba20a-49f7-4a5f-a40d-bffb34417b2d</guid><pubDate>Tue, 23 Jul 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>18:13</itunes:duration><itunes:episode>15</itunes:episode><itunes:summary>Cameron Gera and Taylor Fausak talk about how function calls are evaluated in Haskell with regards to non-strictness.</itunes:summary></item><item><title>Refinement Types</title><link>https://haskellweekly.news/episode/14.html</link><description>&lt;p&gt;Andres Schmois and Cody Goodman talk about using the Refined library to turn runtime checks into types.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://danieljharvey.github.io/posts/2019-07-05-refined-types.html"&gt;https://danieljharvey.github.io/posts/2019-07-05-refined-types.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="22040576" type="audio/mpeg" url="https://media.haskellweekly.news/2019-07-16-episode-14.mp3"/><guid isPermaLink="false">5ec19b21-9399-474b-be54-beadd37894f9</guid><pubDate>Tue, 16 Jul 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>15:18</itunes:duration><itunes:episode>14</itunes:episode><itunes:summary>Andres Schmois and Cody Goodman talk about using the Refined library to turn runtime checks into types.</itunes:summary></item><item><title>Why Haskell?</title><link>https://haskellweekly.news/episode/13.html</link><description>&lt;p&gt;Cameron Gera and Taylor Fausak talk about why the Semantic team at GitHub decided to use Haskell.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/github/semantic/blob/eaf13783838861fe5eb6cd46d59354774a8eb88d/docs/why-haskell.md"&gt;https://github.com/github/semantic/blob/eaf13783838861fe5eb6cd46d59354774a8eb88d/docs/why-haskell.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="26111814" type="audio/mpeg" url="https://media.haskellweekly.news/2019-06-10-episode-13.mp3"/><guid isPermaLink="false">fb192c3c-02a5-4413-ab53-1346677940ec</guid><pubDate>Mon, 10 Jun 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>25:08</itunes:duration><itunes:episode>13</itunes:episode><itunes:summary>Cameron Gera and Taylor Fausak talk about why the Semantic team at GitHub decided to use Haskell.</itunes:summary></item><item><title>Formatting Code</title><link>https://haskellweekly.news/episode/12.html</link><description>&lt;p&gt;Dustin Segers and Cody Goodman talk about formatting Haskell source code with automated tools like Ormolu.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.tweag.io/posts/2019-05-27-ormolu.html"&gt;https://www.tweag.io/posts/2019-05-27-ormolu.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="23912963" type="audio/mpeg" url="https://media.haskellweekly.news/2019-06-03-episode-12.mp3"/><guid isPermaLink="false">f166f89f-1a16-49f1-915a-d54505c301a0</guid><pubDate>Mon, 03 Jun 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>16:37</itunes:duration><itunes:episode>12</itunes:episode><itunes:summary>Dustin Segers and Cody Goodman talk about formatting Haskell source code with automated tools like Ormolu.</itunes:summary></item><item><title>Profiling Performance</title><link>https://haskellweekly.news/episode/11.html</link><description>&lt;p&gt;Sara Lichtenstein and Taylor Fausak talk about improving the performance of Haskell programs by profiling them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jez.io/profiling-in-haskell/"&gt;https://blog.jez.io/profiling-in-haskell/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="27690623" type="audio/mpeg" url="https://media.haskellweekly.news/2019-05-27-episode-11.mp3"/><guid isPermaLink="false">3ec1dc79-7a9c-46c3-b919-61471e876708</guid><pubDate>Mon, 27 May 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>19:12</itunes:duration><itunes:episode>11</itunes:episode><itunes:summary>Sara Lichtenstein and Taylor Fausak talk about improving the performance of Haskell programs by profiling them.</itunes:summary></item><item><title>Functional Architecture</title><link>https://haskellweekly.news/episode/10.html</link><description>&lt;p&gt;Cameron Gera and Taylor Fausak talk about how Haskell encourages you to use the ports and adapters architecture.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.ploeh.dk/2016/03/18/functional-architecture-is-ports-and-adapters/"&gt;https://blog.ploeh.dk/2016/03/18/functional-architecture-is-ports-and-adapters/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="23942886" type="audio/mpeg" url="https://media.haskellweekly.news/2019-05-20-episode-10.mp3"/><guid isPermaLink="false">32fd3459-b349-4c99-9150-5073fedab6bf</guid><pubDate>Mon, 20 May 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>16:37</itunes:duration><itunes:episode>10</itunes:episode><itunes:summary>Cameron Gera and Taylor Fausak talk about how Haskell encourages you to use the ports and adapters architecture.</itunes:summary></item><item><title>Improving Haskell</title><link>https://haskellweekly.news/episode/9.html</link><description>&lt;p&gt;Jason Fry and Cameron Gera talk about four small ways to improve Haskell as a language.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/daml-driven/four-tweaks-to-improve-haskell-b1de9c87f816"&gt;https://medium.com/daml-driven/four-tweaks-to-improve-haskell-b1de9c87f816&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="31507647" type="audio/mpeg" url="https://media.haskellweekly.news/2019-05-06-episode-9.mp3"/><guid isPermaLink="false">de704aad-e6a1-41a6-976f-bd3f2ef34ad2</guid><pubDate>Mon, 06 May 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>21:52</itunes:duration><itunes:episode>9</itunes:episode><itunes:summary>Jason Fry and Cameron Gera talk about four small ways to improve Haskell as a language.</itunes:summary></item><item><title>Best Practices</title><link>https://haskellweekly.news/episode/8.html</link><description>&lt;p&gt;Cameron Gera and Cody Goodman talk about enforcing best practices with HLint and refactoring.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/co-star-engineering/continuous-improvement-with-hlint-code-smells-e490886558a1"&gt;https://medium.com/co-star-engineering/continuous-improvement-with-hlint-code-smells-e490886558a1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="20714874" type="audio/mpeg" url="https://media.haskellweekly.news/2019-04-29-episode-8.mp3"/><guid isPermaLink="false">53bbcaeb-6e6f-4e1f-9806-f24032ac7a9f</guid><pubDate>Mon, 29 Apr 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>14:20</itunes:duration><itunes:episode>8</itunes:episode><itunes:summary>Cameron Gera and Cody Goodman talk about enforcing best practices with HLint and refactoring.</itunes:summary></item><item><title>Parser Combinators</title><link>https://haskellweekly.news/episode/7.html</link><description>&lt;p&gt;Cameron Gera and Taylor Fausak talk about how regular expressions compare to parser combinators in Haskell.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://williamyaoh.com/posts/2019-04-11-cheatsheet-to-regexes-in-haskell.html"&gt;https://williamyaoh.com/posts/2019-04-11-cheatsheet-to-regexes-in-haskell.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="25296111" type="audio/mpeg" url="https://media.haskellweekly.news/2019-04-22-episode-7.mp3"/><guid isPermaLink="false">287a197e-e9fd-47b6-9506-2f39be002af7</guid><pubDate>Mon, 22 Apr 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>17:29</itunes:duration><itunes:episode>7</itunes:episode><itunes:summary>Cameron Gera and Taylor Fausak talk about how regular expressions compare to parser combinators in Haskell.</itunes:summary></item><item><title>Fast Feedback</title><link>https://haskellweekly.news/episode/6.html</link><description>&lt;p&gt;Jason Fry and Taylor Fausak talk about getting fast feedback when developing Haskell by using ghcid.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://functor.tokyo/blog/2019-04-07-ghcid-for-web-app-dev"&gt;https://functor.tokyo/blog/2019-04-07-ghcid-for-web-app-dev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="26845627" type="audio/mpeg" url="https://media.haskellweekly.news/2019-04-15-episode-6.mp3"/><guid isPermaLink="false">7ed15199-bcd3-461e-af62-d504ae8a4a01</guid><pubDate>Mon, 15 Apr 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>18:38</itunes:duration><itunes:episode>6</itunes:episode><itunes:summary>Jason Fry and Taylor Fausak talk about getting fast feedback when developing Haskell by using ghcid.</itunes:summary></item><item><title>Build Tools</title><link>https://haskellweekly.news/episode/5.html</link><description>&lt;p&gt;Cameron Gera and Taylor Fausak talk about build tools in Haskell, including Stack and Cabal.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sakshamsharma.com/2018/03/haskell-proj-struct/"&gt;https://sakshamsharma.com/2018/03/haskell-proj-struct/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="21977225" type="audio/mpeg" url="https://media.haskellweekly.news/2019-04-08-episode-5.mp3"/><guid isPermaLink="false">25b43cdb-e278-42da-97dc-3c6d353ec8c8</guid><pubDate>Mon, 08 Apr 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>15:15</itunes:duration><itunes:episode>5</itunes:episode><itunes:summary>Cameron Gera and Taylor Fausak talk about build tools in Haskell, including Stack and Cabal.</itunes:summary></item><item><title>Boolean Blindness</title><link>https://haskellweekly.news/episode/4.html</link><description>&lt;p&gt;Dustin Segers and Taylor Fausak talk about avoiding boolean blindness by using custom types.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://runtimeverification.com/blog/code-smell-boolean-blindness/"&gt;https://runtimeverification.com/blog/code-smell-boolean-blindness/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="23002958" type="audio/mpeg" url="https://media.haskellweekly.news/2019-04-01-episode-4.mp3"/><guid isPermaLink="false">aea8101c-b126-4cb5-be14-00200d3f6c27</guid><pubDate>Mon, 01 Apr 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>15:57</itunes:duration><itunes:episode>4</itunes:episode><itunes:summary>Dustin Segers and Taylor Fausak talk about avoiding boolean blindness by using custom types.</itunes:summary></item><item><title>Frontend Languages</title><link>https://haskellweekly.news/episode/3.html</link><description>&lt;p&gt;Jason Fry and Taylor Fausak compare frontend and backend languages, including PureScript and Elm.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.parsonsmatt.org/2015/10/03/elm_vs_purescript.html"&gt;https://www.parsonsmatt.org/2015/10/03/elm_vs_purescript.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="34265398" type="audio/mpeg" url="https://media.haskellweekly.news/2019-03-25-episode-3.mp3"/><guid isPermaLink="false">069964f7-2457-479f-8bab-9cb4f3abec9c</guid><pubDate>Mon, 25 Mar 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>23:47</itunes:duration><itunes:episode>3</itunes:episode><itunes:summary>Jason Fry and Taylor Fausak compare frontend and backend languages, including PureScript and Elm.</itunes:summary></item><item><title>Upgrading Elm</title><link>https://haskellweekly.news/episode/2.html</link><description>&lt;p&gt;Sara Lichtenstein and Taylor Fausak talk about the good and bad of upgrading from Elm 0.18 to 0.19.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://engineering.itpro.tv/2019/03/01/upgrading-elm-to-v19/"&gt;https://engineering.itpro.tv/2019/03/01/upgrading-elm-to-v19/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="21580339" type="audio/mpeg" url="https://media.haskellweekly.news/2019-03-18-episode-2.mp3"/><guid isPermaLink="false">00900298-5aa6-4301-a207-619d38cdc81a</guid><pubDate>Mon, 18 Mar 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>14:59</itunes:duration><itunes:episode>2</itunes:episode><itunes:summary>Sara Lichtenstein and Taylor Fausak talk about the good and bad of upgrading from Elm 0.18 to 0.19.</itunes:summary></item><item><title>Handling Exceptions</title><link>https://haskellweekly.news/episode/1.html</link><description>&lt;p&gt;Cody Goodman and Taylor Fausak talk about handling errors in Haskell by using exceptions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markkarpov.com/tutorial/exceptions.html"&gt;https://markkarpov.com/tutorial/exceptions.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><enclosure length="13999481" type="audio/mpeg" url="https://media.haskellweekly.news/2019-03-11-episode-1.mp3"/><guid isPermaLink="false">6fe12dba-e0c3-4af5-b9fc-844bc2396ae7</guid><pubDate>Mon, 11 Mar 2019 12:00:00 GMT</pubDate><itunes:author>Taylor Fausak</itunes:author><itunes:duration>9:43</itunes:duration><itunes:episode>1</itunes:episode><itunes:summary>Cody Goodman and Taylor Fausak talk about handling errors in Haskell by using exceptions.</itunes:summary></item></channel></rss>