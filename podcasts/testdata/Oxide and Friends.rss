<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="https://feeds.transistor.fm/stylesheet.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:podcast="https://podcastindex.org/namespace/1.0">
  <channel>
    <atom:link rel="self" type="application/atom+xml" href="https://feeds.transistor.fm/oxide-and-friends" title="MP3 Audio"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <title>Oxide and Friends</title>
    <generator>Transistor (https://transistor.fm)</generator>
    <itunes:new-feed-url>https://feeds.transistor.fm/oxide-and-friends</itunes:new-feed-url>
    <description>Oxide hosts a weekly Discord show where we discuss a wide range of topics: computer history, startups, Oxide hardware bringup, and other topics du jour. These are the recordings in podcast form.
Join us live (usually Mondays at 5pm PT) https://discord.gg/gcQxNHAKCB
Subscribe to our calendar: https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics</description>
    <copyright>Oxide Computer Company</copyright>
    <podcast:guid>e8fef0e2-5ea4-507d-8632-5006f27c8a0a</podcast:guid>
    <podcast:locked owner="ahl@oxidecomputer.com">no</podcast:locked>
    <language>en</language>
    <pubDate>Fri, 02 Jun 2023 15:59:40 -0700</pubDate>
    <lastBuildDate>Thu, 08 Jun 2023 13:34:21 -0700</lastBuildDate>
    <link>http://oxide.computer</link>
    <image>
      <url>https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg</url>
      <title>Oxide and Friends</title>
      <link>http://oxide.computer</link>
    </image>
    <itunes:category text="Technology"/>
    <itunes:type>episodic</itunes:type>
    <itunes:author>Oxide Computer Company</itunes:author>
    <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
    <itunes:summary>Oxide hosts a weekly Discord show where we discuss a wide range of topics: computer history, startups, Oxide hardware bringup, and other topics du jour. These are the recordings in podcast form.
Join us live (usually Mondays at 5pm PT) https://discord.gg/gcQxNHAKCB
Subscribe to our calendar: https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics</itunes:summary>
    <itunes:subtitle>Oxide hosts a weekly Discord show where we discuss a wide range of topics: computer history, startups, Oxide hardware bringup, and other topics du jour.</itunes:subtitle>
    <itunes:keywords></itunes:keywords>
    <itunes:owner>
      <itunes:name>Oxide Computer Company</itunes:name>
    </itunes:owner>
    <itunes:complete>No</itunes:complete>
    <itunes:explicit>Yes</itunes:explicit>
    <item>
      <title>Open Source Governance</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>15</itunes:episode>
      <podcast:episode>15</podcast:episode>
      <itunes:title>Open Source Governance</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">cc8beb0e-c4c2-4b54-b068-bb5f67aadba8</guid>
      <link>https://share.transistor.fm/s/9099835a</link>
      <description>
        <![CDATA[<p>Bryan and Adam are joined by Ashley Williams to talk about open source governance... and the recently, and various stumblings of the Rust project leadership.</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Bryan and Adam are joined by Ashley Williams to talk about open source governance... and the recently, and various stumblings of the Rust project leadership.</p>]]>
      </content:encoded>
      <pubDate>Tue, 30 May 2023 08:30:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/9099835a/044c8618.mp3" length="82354707" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5145</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Bryan and Adam are joined by Ashley Williams to talk about open source governance... and the recently, and various stumblings of the Rust project leadership.</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Building Together: Oxide and Samtec</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>14</itunes:episode>
      <podcast:episode>14</podcast:episode>
      <itunes:title>Building Together: Oxide and Samtec</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">8f601387-5b04-49db-837a-9bb7b6f9b1e4</guid>
      <link>https://share.transistor.fm/s/04e70808</link>
      <description>
        <![CDATA[<p>Bryan and Adam are joined by Jonathan and Jignesh from Samtec to discuss working together to build the Oxide Rack. We've all seen bad vendors--what does it mean to be a great partner? Also: silicon photonics are (still!) just 18 months away!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Bryan and Adam are joined by Jonathan and Jignesh from Samtec to discuss working together to build the Oxide Rack. We've all seen bad vendors--what does it mean to be a great partner? Also: silicon photonics are (still!) just 18 months away!</p>]]>
      </content:encoded>
      <pubDate>Mon, 15 May 2023 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/04e70808/f6242a53.mp3" length="77201701" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4823</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Bryan and Adam are joined by Jonathan and Jignesh from Samtec to discuss working together to build the Oxide Rack. We've all seen bad vendors--what does it mean to be a great partner? Also: silicon photonics are (still!) just 18 months away!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Network Behind the Network</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>13</itunes:episode>
      <podcast:episode>13</podcast:episode>
      <itunes:title>The Network Behind the Network</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">b91b826f-2c54-44c8-a81a-acd2338001c4</guid>
      <link>https://share.transistor.fm/s/217e1960</link>
      <description>
        <![CDATA[<p>Bryan and Adam are joined by Oxide colleagues Arjen, Matt, John, and Nathaneal to talk about the management network--the brainstem of the Oxide Rack. Just as it ties together so many components, this episode ties together many many (many!) topics we've discussed in other episodes.</p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/abE_9zsAadE">the recording from May 8th 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by Oxide colleagues <a href="https://octodon.social/@arjenroodselaar">Arjen Roodselaar</a>, <a href="https://hachyderm.io/@mjk">Matt Keeter</a>, <a href="https://hachyderm.io/@nerdyjkg">John Gallagher</a>, and <a href="https://hachyderm.io/@SyntheticGate">Nathanael Huffman</a>.</p><p>This built on work described in <strong>many</strong> previous episodes:</p><ul>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/cabling-the-backplane">Cabling the Backplane</a> Prior to going all-in on a cabled backplane with blind-mated server sleds (i.e. no plugging, unplugging, mis-plugging network cables). We (Bryan) espoused an "NC-SI or bust" mantra... at least in part to avoid doubling the cable count. With the cabled backplane, the reasons for NC-SI disappeared (which let the many reasons <strong>against</strong> truly shine).</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-pragmatism-of-hubris-2021-12-13">The Pragmatism of Hubris</a> in which we talk about our embedded operating system, Hubris (and it's companion debugger, Humility). Hubris runs on the service processors that are the main endpoints on the management network. Matt's work controlling the management network switch (the VSC7448) is in the context of Hubris, as is John's work communicating with the sleds over the management network.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-power-of-proto-boards">The Power of Proto Boards</a> showed and told about the many small boards we've used in development. Several of those were purpose built for controlling and simulating parts of the management network.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-oxide-supply-chain">The Oxide Supply Chain</a> Kate Hicks joined us to talk about the challenges of navigating the supply chain. Mentioned here in the context of "supply-chain-driven design": we designed around the parts we could procure! Tip: stay away from "automotive-quality" parts when the auto industry is soaking them all up.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/holistic-boot">Holistic Boot</a> in which we talked about how (uniquely!) Oxide boots from nothing to its operating system and services. Over the management network, we can drive server recovery by piping in a RAMdisk over the network and then (slowly) through the UART to the CPU.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/get-you-a-state-machine-for-great-good">Get You a State Machine for Great Good</a> Andrew joined us to talk about his work on a state-machine driven text-UI and its companion replay debugger. We mentioned this in the context of John replaying the long upload process in seconds rather than hours to fix a UI bug.</li>
</ul><p>Major components of the management network</p><p>Matt's VSC7448 dev kit</p><p>Matt's remote tuning setup via webcam</p><p>Management network debugging<br>Management network debugging</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Bryan and Adam are joined by Oxide colleagues Arjen, Matt, John, and Nathaneal to talk about the management network--the brainstem of the Oxide Rack. Just as it ties together so many components, this episode ties together many many (many!) topics we've discussed in other episodes.</p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/abE_9zsAadE">the recording from May 8th 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by Oxide colleagues <a href="https://octodon.social/@arjenroodselaar">Arjen Roodselaar</a>, <a href="https://hachyderm.io/@mjk">Matt Keeter</a>, <a href="https://hachyderm.io/@nerdyjkg">John Gallagher</a>, and <a href="https://hachyderm.io/@SyntheticGate">Nathanael Huffman</a>.</p><p>This built on work described in <strong>many</strong> previous episodes:</p><ul>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/cabling-the-backplane">Cabling the Backplane</a> Prior to going all-in on a cabled backplane with blind-mated server sleds (i.e. no plugging, unplugging, mis-plugging network cables). We (Bryan) espoused an "NC-SI or bust" mantra... at least in part to avoid doubling the cable count. With the cabled backplane, the reasons for NC-SI disappeared (which let the many reasons <strong>against</strong> truly shine).</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-pragmatism-of-hubris-2021-12-13">The Pragmatism of Hubris</a> in which we talk about our embedded operating system, Hubris (and it's companion debugger, Humility). Hubris runs on the service processors that are the main endpoints on the management network. Matt's work controlling the management network switch (the VSC7448) is in the context of Hubris, as is John's work communicating with the sleds over the management network.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-power-of-proto-boards">The Power of Proto Boards</a> showed and told about the many small boards we've used in development. Several of those were purpose built for controlling and simulating parts of the management network.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-oxide-supply-chain">The Oxide Supply Chain</a> Kate Hicks joined us to talk about the challenges of navigating the supply chain. Mentioned here in the context of "supply-chain-driven design": we designed around the parts we could procure! Tip: stay away from "automotive-quality" parts when the auto industry is soaking them all up.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/holistic-boot">Holistic Boot</a> in which we talked about how (uniquely!) Oxide boots from nothing to its operating system and services. Over the management network, we can drive server recovery by piping in a RAMdisk over the network and then (slowly) through the UART to the CPU.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/get-you-a-state-machine-for-great-good">Get You a State Machine for Great Good</a> Andrew joined us to talk about his work on a state-machine driven text-UI and its companion replay debugger. We mentioned this in the context of John replaying the long upload process in seconds rather than hours to fix a UI bug.</li>
</ul><p>Major components of the management network</p><p>Matt's VSC7448 dev kit</p><p>Matt's remote tuning setup via webcam</p><p>Management network debugging<br>Management network debugging</p>]]>
      </content:encoded>
      <pubDate>Mon, 08 May 2023 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/217e1960/66147940.mp3" length="95197346" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5948</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Bryan and Adam are joined by Oxide colleagues Arjen, Matt, John, and Nathaneal to talk about the management network--the brainstem of the Oxide Rack. Just as it ties together so many components, this episode ties together many many (many!) topics we've discussed in other episodes.</p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/abE_9zsAadE">the recording from May 8th 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by Oxide colleagues <a href="https://octodon.social/@arjenroodselaar">Arjen Roodselaar</a>, <a href="https://hachyderm.io/@mjk">Matt Keeter</a>, <a href="https://hachyderm.io/@nerdyjkg">John Gallagher</a>, and <a href="https://hachyderm.io/@SyntheticGate">Nathanael Huffman</a>.</p><p>This built on work described in <strong>many</strong> previous episodes:</p><ul>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/cabling-the-backplane">Cabling the Backplane</a> Prior to going all-in on a cabled backplane with blind-mated server sleds (i.e. no plugging, unplugging, mis-plugging network cables). We (Bryan) espoused an "NC-SI or bust" mantra... at least in part to avoid doubling the cable count. With the cabled backplane, the reasons for NC-SI disappeared (which let the many reasons <strong>against</strong> truly shine).</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-pragmatism-of-hubris-2021-12-13">The Pragmatism of Hubris</a> in which we talk about our embedded operating system, Hubris (and it's companion debugger, Humility). Hubris runs on the service processors that are the main endpoints on the management network. Matt's work controlling the management network switch (the VSC7448) is in the context of Hubris, as is John's work communicating with the sleds over the management network.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-power-of-proto-boards">The Power of Proto Boards</a> showed and told about the many small boards we've used in development. Several of those were purpose built for controlling and simulating parts of the management network.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/the-oxide-supply-chain">The Oxide Supply Chain</a> Kate Hicks joined us to talk about the challenges of navigating the supply chain. Mentioned here in the context of "supply-chain-driven design": we designed around the parts we could procure! Tip: stay away from "automotive-quality" parts when the auto industry is soaking them all up.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/holistic-boot">Holistic Boot</a> in which we talked about how (uniquely!) Oxide boots from nothing to its operating system and services. Over the management network, we can drive server recovery by piping in a RAMdisk over the network and then (slowly) through the UART to the CPU.</li>
<li>
<a href="https://oxide-and-friends.transistor.fm/episodes/get-you-a-state-machine-for-great-good">Get You a State Machine for Great Good</a> Andrew joined us to talk about his work on a state-machine driven text-UI and its companion replay debugger. We mentioned this in the context of John replaying the long upload process in seconds rather than hours to fix a UI bug.</li>
</ul><p>Major components of the management network</p><p>Matt's VSC7448 dev kit</p><p>Matt's remote tuning setup via webcam</p><p>Management network debugging<br>Management network debugging</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Blue Skies Over Mastodon (with Erin Kissane and Tim Bray)</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>12</itunes:episode>
      <podcast:episode>12</podcast:episode>
      <itunes:title>Blue Skies Over Mastodon (with Erin Kissane and Tim Bray)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">37b5708b-b989-4637-a96a-903ff602899c</guid>
      <link>https://share.transistor.fm/s/53631a2d</link>
      <description>
        <![CDATA[<p>Erin Kissane joins Bryan and Adam to talk the new social network "Bluesky" through the lens of her blog post "Blue Skies Over Mastodon". Long-time friends of Oxide and social-media aficionados Time Bray and Steve Klabnik also helped shed light on technical and social aspects of the net network.<br><strong><br>Blue Skies Over Mastodon (with Erin Kissane and Tim Bray)<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/bcMiWZ2Er2g">the recording from May 1st, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by special guest <a href="https://mstdn.social/@kissane">Erin Kissane</a> and long-time acquaintances of the show <a href="https://mastodon.cloud/@timbray">Tim Bray</a> and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Erin's blog post <a href="https://erinkissane.com/blue-skies-over-mastodon">Blue Skies Over Mastodon</a>
</li>
<li>Mastodon blog (5/1) <a href="https://blog.joinmastodon.org/2023/05/a-new-onboarding-experience-on-mastodon/">A new onboarding experience on Mastodon</a>]</li>
<li>Tim's blog post from November <a href="https://www.tbray.org/ongoing/When/202x/2022/11/26/Bye-Twitter">Bye Twitter</a>
</li>
<li><a href="https://www.investopedia.com/terms/n/news-trader.asp">"Buy the rumor, sell the news"</a></li>
<li><a href="https://knowyourmeme.com/memes/events/hellthread-bluesky">Hellthread</a></li>
<li>"Skeet" is to "Tweet" is to "Toot" (aka "Publish")</li>
<li><a href="https://skyline.gay/">skyline.gay</a></li>
<li>Bluesky blog <a href="https://blueskyweb.xyz/blog/4-13-2023-moderation">Composable Moderation</a>
</li>
<li><a href="https://lobste.rs/">Lobsters</a></li>
<li><a href="https://phanpy.social/">Phanpy</a></li>
<li><a href="https://en.wikipedia.org/wiki/So_You%27ve_Been_Publicly_Shamed">So you've been publically shamed by Jon Ronson</a></li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Erin Kissane joins Bryan and Adam to talk the new social network "Bluesky" through the lens of her blog post "Blue Skies Over Mastodon". Long-time friends of Oxide and social-media aficionados Time Bray and Steve Klabnik also helped shed light on technical and social aspects of the net network.<br><strong><br>Blue Skies Over Mastodon (with Erin Kissane and Tim Bray)<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/bcMiWZ2Er2g">the recording from May 1st, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by special guest <a href="https://mstdn.social/@kissane">Erin Kissane</a> and long-time acquaintances of the show <a href="https://mastodon.cloud/@timbray">Tim Bray</a> and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Erin's blog post <a href="https://erinkissane.com/blue-skies-over-mastodon">Blue Skies Over Mastodon</a>
</li>
<li>Mastodon blog (5/1) <a href="https://blog.joinmastodon.org/2023/05/a-new-onboarding-experience-on-mastodon/">A new onboarding experience on Mastodon</a>]</li>
<li>Tim's blog post from November <a href="https://www.tbray.org/ongoing/When/202x/2022/11/26/Bye-Twitter">Bye Twitter</a>
</li>
<li><a href="https://www.investopedia.com/terms/n/news-trader.asp">"Buy the rumor, sell the news"</a></li>
<li><a href="https://knowyourmeme.com/memes/events/hellthread-bluesky">Hellthread</a></li>
<li>"Skeet" is to "Tweet" is to "Toot" (aka "Publish")</li>
<li><a href="https://skyline.gay/">skyline.gay</a></li>
<li>Bluesky blog <a href="https://blueskyweb.xyz/blog/4-13-2023-moderation">Composable Moderation</a>
</li>
<li><a href="https://lobste.rs/">Lobsters</a></li>
<li><a href="https://phanpy.social/">Phanpy</a></li>
<li><a href="https://en.wikipedia.org/wiki/So_You%27ve_Been_Publicly_Shamed">So you've been publically shamed by Jon Ronson</a></li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 01 May 2023 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/53631a2d/a2719cd3.mp3" length="97445961" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6089</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Erin Kissane joins Bryan and Adam to talk the new social network "Bluesky" through the lens of her blog post "Blue Skies Over Mastodon". Long-time friends of Oxide and social-media aficionados Time Bray and Steve Klabnik also helped shed light on technical and social aspects of the net network.<br><strong><br>Blue Skies Over Mastodon (with Erin Kissane and Tim Bray)<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/bcMiWZ2Er2g">the recording from May 1st, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by special guest <a href="https://mstdn.social/@kissane">Erin Kissane</a> and long-time acquaintances of the show <a href="https://mastodon.cloud/@timbray">Tim Bray</a> and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Erin's blog post <a href="https://erinkissane.com/blue-skies-over-mastodon">Blue Skies Over Mastodon</a>
</li>
<li>Mastodon blog (5/1) <a href="https://blog.joinmastodon.org/2023/05/a-new-onboarding-experience-on-mastodon/">A new onboarding experience on Mastodon</a>]</li>
<li>Tim's blog post from November <a href="https://www.tbray.org/ongoing/When/202x/2022/11/26/Bye-Twitter">Bye Twitter</a>
</li>
<li><a href="https://www.investopedia.com/terms/n/news-trader.asp">"Buy the rumor, sell the news"</a></li>
<li><a href="https://knowyourmeme.com/memes/events/hellthread-bluesky">Hellthread</a></li>
<li>"Skeet" is to "Tweet" is to "Toot" (aka "Publish")</li>
<li><a href="https://skyline.gay/">skyline.gay</a></li>
<li>Bluesky blog <a href="https://blueskyweb.xyz/blog/4-13-2023-moderation">Composable Moderation</a>
</li>
<li><a href="https://lobste.rs/">Lobsters</a></li>
<li><a href="https://phanpy.social/">Phanpy</a></li>
<li><a href="https://en.wikipedia.org/wiki/So_You%27ve_Been_Publicly_Shamed">So you've been publically shamed by Jon Ronson</a></li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Rust Trademark: Argle-bargle or Foofaraw?</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>11</itunes:episode>
      <podcast:episode>11</podcast:episode>
      <itunes:title>Rust Trademark: Argle-bargle or Foofaraw?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">366fb96b-d0cc-4fbc-b983-7763e68c13a3</guid>
      <link>https://share.transistor.fm/s/dbbaa33e</link>
      <description>
        <![CDATA[<p>The Rust Foundation caused a fracas with their proposed new trademark rules. Bryan and Adam were lucky enough to be joined by Ashley Williams, Adam Jacob, and Steve Klabnik for an insightful discussion of open source governance and communities--in particular as applied to Rust.<br><strong><br>Rust Trademark: Argle-bargle or Foofaraw?<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/N-ADQ5n7HoY">the recording from April 17th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by <a href="https://mastodon.social/@ag_dubs">Ashley Williams</a>, <a href="https://mastodon.social/@adamhjk@hachyderm.io">Adam Jacob</a>, and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="https://m.imdb.com/title/tt7660850">Succession</a></li>
<li>
<a href="https://www.youtube.com/watch?v=dH7zt12Ok8M">The Simpsons</a> (explaining the title of this episode)</li>
<li><a href="https://m.imdb.com/title/tt0306414">The Wire</a></li>
<li><a href="https://www.youtube.com/watch?v=xljB94DkS88">The Wire at 20 Podcast</a></li>
<li><a href="https://www.theregister.com/2023/04/17/rust_foundation_apologizes_trademark_policy/">The Register: Rust Foundation Apologizes for Trademark Policy</a></li>
<li>
<a href="https://www.youtube.com/channel/UCl9E4Zxa8CVr2LBLD0_TaNg">Jomboy</a> (our aspiration)</li>
<li><a href="https://en.wikipedia.org/wiki/Debian%E2%80%93Mozilla_trademark_dispute">Ice Weasel</a></li>
<li><a href="https://opensource.org/board-member/pamela-chestek-2/">Pamela Chestek</a></li>
<li><a href="https://vimeo.com/230142234">Bryan's talk from Node Summit 2017: Platform as a Reflection of Values</a></li>
<li><a href="https://projects.propublica.org/nonprofits/organizations/460503801">Linux Foundation form 990</a></li>
<li><a href="https://foundation.rust-lang.org/about/">Rust Foundation Board</a></li>
<li><a href="https://foundation.rust-lang.org/policies/bylaws/#section-2.6-participation">Rust Foundation participation rules</a></li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>The Rust Foundation caused a fracas with their proposed new trademark rules. Bryan and Adam were lucky enough to be joined by Ashley Williams, Adam Jacob, and Steve Klabnik for an insightful discussion of open source governance and communities--in particular as applied to Rust.<br><strong><br>Rust Trademark: Argle-bargle or Foofaraw?<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/N-ADQ5n7HoY">the recording from April 17th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by <a href="https://mastodon.social/@ag_dubs">Ashley Williams</a>, <a href="https://mastodon.social/@adamhjk@hachyderm.io">Adam Jacob</a>, and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="https://m.imdb.com/title/tt7660850">Succession</a></li>
<li>
<a href="https://www.youtube.com/watch?v=dH7zt12Ok8M">The Simpsons</a> (explaining the title of this episode)</li>
<li><a href="https://m.imdb.com/title/tt0306414">The Wire</a></li>
<li><a href="https://www.youtube.com/watch?v=xljB94DkS88">The Wire at 20 Podcast</a></li>
<li><a href="https://www.theregister.com/2023/04/17/rust_foundation_apologizes_trademark_policy/">The Register: Rust Foundation Apologizes for Trademark Policy</a></li>
<li>
<a href="https://www.youtube.com/channel/UCl9E4Zxa8CVr2LBLD0_TaNg">Jomboy</a> (our aspiration)</li>
<li><a href="https://en.wikipedia.org/wiki/Debian%E2%80%93Mozilla_trademark_dispute">Ice Weasel</a></li>
<li><a href="https://opensource.org/board-member/pamela-chestek-2/">Pamela Chestek</a></li>
<li><a href="https://vimeo.com/230142234">Bryan's talk from Node Summit 2017: Platform as a Reflection of Values</a></li>
<li><a href="https://projects.propublica.org/nonprofits/organizations/460503801">Linux Foundation form 990</a></li>
<li><a href="https://foundation.rust-lang.org/about/">Rust Foundation Board</a></li>
<li><a href="https://foundation.rust-lang.org/policies/bylaws/#section-2.6-participation">Rust Foundation participation rules</a></li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 17 Apr 2023 17:05:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/dbbaa33e/123ce9aa.mp3" length="78996895" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4936</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>The Rust Foundation caused a fracas with their proposed new trademark rules. Bryan and Adam were lucky enough to be joined by Ashley Williams, Adam Jacob, and Steve Klabnik for an insightful discussion of open source governance and communities--in particular as applied to Rust.<br><strong><br>Rust Trademark: Argle-bargle or Foofaraw?<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/N-ADQ5n7HoY">the recording from April 17th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by <a href="https://mastodon.social/@ag_dubs">Ashley Williams</a>, <a href="https://mastodon.social/@adamhjk@hachyderm.io">Adam Jacob</a>, and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="https://m.imdb.com/title/tt7660850">Succession</a></li>
<li>
<a href="https://www.youtube.com/watch?v=dH7zt12Ok8M">The Simpsons</a> (explaining the title of this episode)</li>
<li><a href="https://m.imdb.com/title/tt0306414">The Wire</a></li>
<li><a href="https://www.youtube.com/watch?v=xljB94DkS88">The Wire at 20 Podcast</a></li>
<li><a href="https://www.theregister.com/2023/04/17/rust_foundation_apologizes_trademark_policy/">The Register: Rust Foundation Apologizes for Trademark Policy</a></li>
<li>
<a href="https://www.youtube.com/channel/UCl9E4Zxa8CVr2LBLD0_TaNg">Jomboy</a> (our aspiration)</li>
<li><a href="https://en.wikipedia.org/wiki/Debian%E2%80%93Mozilla_trademark_dispute">Ice Weasel</a></li>
<li><a href="https://opensource.org/board-member/pamela-chestek-2/">Pamela Chestek</a></li>
<li><a href="https://vimeo.com/230142234">Bryan's talk from Node Summit 2017: Platform as a Reflection of Values</a></li>
<li><a href="https://projects.propublica.org/nonprofits/organizations/460503801">Linux Foundation form 990</a></li>
<li><a href="https://foundation.rust-lang.org/about/">Rust Foundation Board</a></li>
<li><a href="https://foundation.rust-lang.org/policies/bylaws/#section-2.6-participation">Rust Foundation participation rules</a></li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Cabling the Backplane</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>10</itunes:episode>
      <podcast:episode>10</podcast:episode>
      <itunes:title>Cabling the Backplane</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">b61c2398-c1bb-42ee-a43b-2116ddfb4127</guid>
      <link>https://share.transistor.fm/s/7258e2b5</link>
      <description>
        <![CDATA[<p>Bryan and Adam are joined by Doug Wibben and Robert Keith to talk about the mechanical design of the cabled backplane of the Oxide rack that allows for "blind-mated" server sleds--no network and power cables to plug, unplug, and mis-plug! Watch the chapter art for relevant pictures.<br><strong><br></strong>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/pJ5_SNKB6LU">the recording from April 3rd, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by Oxide colleague, <a href="https://mastodon.social/@refugeesus">Robert Keith</a>, and special guest, Doug Wibben.</p><p>00:00 </p><p>03:02 </p><p>09:52 </p><p>11:09 </p><p>12:16 </p><p>12:58 </p><p>18:58 </p><p>25:11 </p><p>27:07 </p><p>29:58 </p><p>32:11 </p><p>37:11 </p><p>42:56 </p><p>44:01 </p><p>50:01 </p><p>54:51 </p><p></p><ul>
<li>(00:00) - </li>
<li>(03:02) - </li>
<li>(09:52) - </li>
<li>(11:09) - </li>
<li>(12:16) - </li>
<li>(12:58) - </li>
<li>(18:58) - </li>
<li>(25:11) - </li>
<li>(27:07) - </li>
<li>(29:58) - </li>
<li>(32:11) - </li>
<li>(37:11) - </li>
<li>(42:56) - </li>
<li>(44:01) - </li>
<li>(50:01) - </li>
<li>(54:51) - </li>
</ul><p><br></p><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Bryan and Adam are joined by Doug Wibben and Robert Keith to talk about the mechanical design of the cabled backplane of the Oxide rack that allows for "blind-mated" server sleds--no network and power cables to plug, unplug, and mis-plug! Watch the chapter art for relevant pictures.<br><strong><br></strong>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/pJ5_SNKB6LU">the recording from April 3rd, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by Oxide colleague, <a href="https://mastodon.social/@refugeesus">Robert Keith</a>, and special guest, Doug Wibben.</p><p>00:00 </p><p>03:02 </p><p>09:52 </p><p>11:09 </p><p>12:16 </p><p>12:58 </p><p>18:58 </p><p>25:11 </p><p>27:07 </p><p>29:58 </p><p>32:11 </p><p>37:11 </p><p>42:56 </p><p>44:01 </p><p>50:01 </p><p>54:51 </p><p></p><ul>
<li>(00:00) - </li>
<li>(03:02) - </li>
<li>(09:52) - </li>
<li>(11:09) - </li>
<li>(12:16) - </li>
<li>(12:58) - </li>
<li>(18:58) - </li>
<li>(25:11) - </li>
<li>(27:07) - </li>
<li>(29:58) - </li>
<li>(32:11) - </li>
<li>(37:11) - </li>
<li>(42:56) - </li>
<li>(44:01) - </li>
<li>(50:01) - </li>
<li>(54:51) - </li>
</ul><p><br></p><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 03 Apr 2023 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/7258e2b5/4bf036f4.mp3" length="101775669" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/episode/1281318/full_1680894928-artwork.jpg"/>
      <itunes:duration>3630</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Bryan and Adam are joined by Doug Wibben and Robert Keith to talk about the mechanical design of the cabled backplane of the Oxide rack that allows for "blind-mated" server sleds--no network and power cables to plug, unplug, and mis-plug! Watch the chapter art for relevant pictures.<br><strong><br></strong>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/pJ5_SNKB6LU">the recording from April 3rd, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by Oxide colleague, <a href="https://mastodon.social/@refugeesus">Robert Keith</a>, and special guest, Doug Wibben.</p><p>00:00 </p><p>03:02 </p><p>09:52 </p><p>11:09 </p><p>12:16 </p><p>12:58 </p><p>18:58 </p><p>25:11 </p><p>27:07 </p><p>29:58 </p><p>32:11 </p><p>37:11 </p><p>42:56 </p><p>44:01 </p><p>50:01 </p><p>54:51 </p><p></p><ul>
<li>(00:00) - </li>
<li>(03:02) - </li>
<li>(09:52) - </li>
<li>(11:09) - </li>
<li>(12:16) - </li>
<li>(12:58) - </li>
<li>(18:58) - </li>
<li>(25:11) - </li>
<li>(27:07) - </li>
<li>(29:58) - </li>
<li>(32:11) - </li>
<li>(37:11) - </li>
<li>(42:56) - </li>
<li>(44:01) - </li>
<li>(50:01) - </li>
<li>(54:51) - </li>
</ul><p><br></p><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <podcast:chapters url="https://share.transistor.fm/s/7258e2b5/chapters.json" type="application/json+chapters"/>
    </item>
    <item>
      <title>Get You a State Machine for Great Good</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>9</itunes:episode>
      <podcast:episode>9</podcast:episode>
      <itunes:title>Get You a State Machine for Great Good</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">b20aa25c-51ee-44bb-a865-a49600675fa1</guid>
      <link>https://share.transistor.fm/s/13d3f864</link>
      <description>
        <![CDATA[<p>Andrew Stone of Oxide Engineering joined Bryan, Adam, and the Oxide Friends to talk about his purpose-built, replay debugger for the Oxide setup textual UI. Andrew borrowed a technique from his extensive work with distributed systems to built a UI that was well-structured... and highly amenable to debuggability. He built a custom debugger "in a weekend"!</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="https://github.com/fdehau/tui-rs">tui-rs</a></li>
<li><a href="https://github.com/crossterm-rs/crossterm">Crossterm</a></li>
<li><a href="https://crates.io/crates/reedline">The reedline crate</a></li>
<li><a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">Episode about the "Sidecar" switch</a></li>
<li><a href="https://elm-lang.org/news/time-travel-made-easy">Elm time-travel debugging</a></li>
<li><a href="https://www.replay.io/">Replay.io</a></li>
<li><a href="https://devtools.fm/episode/9">Devtools.fm episode on Replay.io</a></li>
<li><a href="https://dl.acm.org/conference/aadebug">AADEBUG conference</a></li>
<li><a href="https://lao.ca.gov/ballot/1998/6_11_1998.htm">California horse meat law</a></li>
</ul><p>The (lightly) edited live chat from the show:</p><ul>
<li>
<strong>MattCampbell</strong>: I'm gathering that this is more like the fancy pseudo-GUI style of TUI, which is possibly bad for accessibility</li>
<li>
<strong>ahl</strong>: we are also building with accessibility in mind, stripping away some of the non-textual elements optionally</li>
<li>
<strong>MattCampbell</strong>: oh, cool</li>
<li>
<strong>ahl</strong>: Episode about the "Sidecar" switch: <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md</a>
</li>
<li>
<strong>MattCampbell</strong>: ooh! That kind of recording is definitely better for accessibility than a video.</li>
<li>
<strong>uwaces</strong>: Were you inspired by Elm? (The programming language for web browsers?)</li>
<li>
<strong>bcantrill</strong>: Here's Andrew's PR for this, FWIW: <a href="https://github.com/oxidecomputer/omicron/pull/2682">oxidecomputer/omicron#2682</a>
</li>
<li>
<strong>uwaces</strong>: Elm has a very similar model. They have even had a debugger that let you run events in reverse: <a href="https://elm-lang.org/news/time-travel-made-easy">https://elm-lang.org/news/time-travel-made-easy</a>
</li>
<li>
<strong>bch</strong>: I’m joining late - 1) does this state-machine replay model have a name 2) expand on (describe ) the I/o logic separation distinction?</li>
<li>
<strong>ahl</strong>: <a href="http://dtrace.org/blogs/ahl/2015/06/22/first-rust-program-pain/">http://dtrace.org/blogs/ahl/2015/06/22/first-rust-program-pain/</a>
</li>
<li>
<strong>zk</strong>: RE: logic separation in consensus protocols: the benefit of seperating out the state machine into a side-effect free function allows you to write a formally verified implementation in a pure FP lang or theorem prover, and then extract a reference program from the proof.</li>
<li>
<strong>we're going to the zoo</strong>: lol i’m a web dev &amp;&amp; we do UI tests via StorybookJS + snapshots of each story + snapshots of the end state of an interaction</li>
<li>
<strong>ig</strong>: At that point you could turn the recording into an “expect test”. <a href="https://blog.janestreet.com/the-joy-of-expect-tests/">https://blog.janestreet.com/the-joy-of-expect-tests/</a>
</li>
<li>
<strong>we're going to the zoo</strong>: TOFU but for tests 🥰</li>
<li>
<strong>uwaces</strong>: Are you at all worried that you are replicating the horror that is the IBM 3270 terminal? — I have personal history programming on z/OS where the only interface is a graphical EBCDIC 3027 interface — the horror is that people write programs to interact with graphical window (assuming a certain size).</li>
<li>
<strong>ahl</strong>: <a href="https://docs.rs/serde/latest/serde/#data-formats">https://docs.rs/serde/latest/serde/#data-formats</a>
</li>
<li>
<strong>ahl</strong>: <strong>SHOW NOTES</strong> Bryan as "semi-elderly" engineer</li>
<li>
<strong>MattCampbell</strong>: didn't Bryan write a blog post on this?</li>
<li>
<strong>MattCampbell</strong>: <a href="http://dtrace.org/blogs/bmc/2008/11/16/on-modalities-and-misadventures/">http://dtrace.org/blogs/bmc/2008/11/16/on-modalities-and-misadventures/</a>
</li>
<li>
<strong>uwaces</strong>: <a href="https://www.replay.io/">https://www.replay.io</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://devtools.fm/episode/9">https://devtools.fm/episode/9</a>
</li>
<li>
<strong>ahl</strong>: e.g. <a href="https://altsysrq.github.io/proptest-book/intro.html">https://altsysrq.github.io/proptest-book/intro.html</a>
</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://github.com/AFLplusplus/LibAFL">https://github.com/AFLplusplus/LibAFL</a>
</li>
<li>
<strong>ig</strong>: Are you using proptest, quickcheck, or something else?</li>
<li>
<strong>nickik</strong>: This really started with Haskell <a href="https://hackage.haskell.org/package/QuickCheck">https://hackage.haskell.org/package/QuickCheck</a> Its also cool that it does 'narrowing' meaning it will try to find an error, and then try to generate a simpler error case.</li>
<li>
<strong>endigma</strong>: how different is something like this from what go calls "fuzzing"</li>
<li>
<strong>Riking</strong>: Fuzzing does also have a minimization step</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://github.com/dubzzz/fast-check">https://github.com/dubzzz/fast-check</a>
</li>
<li>
<strong>Riking</strong>: Property-based testing tends to be structured differently in philosophy, while fuzzers are more aligned to "give you a bag of bytes"</li>
<li>
<strong>nickik</strong>: <a href="http://www.quviq.com/products/erlang-quickcheck/">http://www.quviq.com/products/erlang-quickcheck/</a>
</li>
<li>
<strong>endigma</strong>: yeah I can tell its a different structure, but the overall goal seems similar</li>
<li>
<strong>we're going to the zoo</strong>: they are nonexclusive approaches to testing</li>
<li>
<strong>papertigers</strong>: I think Kelly was doing a bunch of tests at Joyent based on quick check and prop test. First time I encountered it</li>
<li>
<strong>we're going to the zoo</strong>: libafl provides a #[derive(Arbitrary)] macro that will provide the correct values for a struct</li>
<li>
<strong>uwaces</strong>: Lots of stuff in Rust existed first in Haskell (build.rs, quote!, Derive macros, Traits, ect….)…</li>
<li>
<strong>nixinator</strong>: <a href="https://tenor.com/view/%C3%B3culos-escuro-exterminador-terminator-arnold-schwarzenegger-gif-14440790">https://tenor.com/view/%C3%B3culos-escuro-exterminador-terminator-arnold-schwarzenegger-gif-14440790</a>
</li>
<li>
<strong>we're going to the zoo</strong>: “what do these means” depends on who you ask lol</li>
<li>
<strong>we're going to the zoo</strong>: fast-check is 🔥 for TypeScript</li>
<li>
<strong>endigma</strong>: if the tested function is deterministic and the test is testing arbitrary input and testing against the result to be derivative in some way of the input function by some f(x), don't you end up re-implementing the tested function to provide the expected result? how does the author choose what properties of a system to test without falling into a "testing the test" pit?</li>
<li>
<strong>we're going to the zoo</strong>: Rust: “Here comes the Haskell plane!”</li>
<li>
<strong>nixinator</strong>: Isn’t rust == oxidation</li>
<li>
<strong>endigma</strong>: yes</li>
<li>
<strong>endigma</strong>: in a scientific sense</li>
<li>
<strong>nixinator</strong>: Iron oxide 🙂 lol</li>
<li>
<strong>nixinator</strong>: Very good!</li>
<li>
<strong>GeneralShaw</strong>: Is prop test a way of formal verification? Is it same/different?</li>
<li>
<strong>ahl</strong>: <a href="https://dl.acm.org/conference/aadebug">https://dl.acm.org/conference/aadebug</a>
</li>
<li>
<strong>ig</strong>: I mean, Haskell is an academic research language at it’s core. It naturally is going to try new things and try and push the envelope, that’s what many of the core developers use the language for.</li>
<li>
<strong>uwaces</strong>: Not all of the Haskell ideas are good :). Rusts thesis when it started was “let’s take the good boring ideas that are &gt;20 years old and leave the exciting new ones out”. Haskell is all about the exciting new ideas that might be bad (Lenes, lazy evaluation, ect…)</li>
<li>
<strong>ig</strong>: Rust had Servo as it’s driving force in the early stages as well, so was choosing features that made implementing Servo easier.</li>
<li>
<strong>endigma</strong>: the parallel between haskell and elixir is interesting, elixir being "the other functional language" that exists in the sort of limelight</li>
<li>
<strong>nickik</strong>: Not really, formal verification proves that it satisfied some condition, property based testing basically just throws a bunch of stuff against your code and tries to break it.</li>
<li>
<strong>ElFurbe</strong>: "score some horse"</li>
<li>
<strong>ElFurbe</strong>: Outstanding</li>
<li>
<strong>nickik</strong>: In Switzerland at least horse meat is totally normal, just buy it in a standard boring store.</li>
<li>
<strong>rolypoly</strong>: Ballmer curve, but with horse, and for debugging.</li>
<li>
<strong>uwaces</strong>: On that topic Rust has some exciting usability developments for Bounded model checking: <a href="https://github.com/model-checking/kani">https://github.com/model-checking/kani</a> — proving correctness of property tests.</li>
<li>
<strong>ig</strong>: Okay I tuned out for a minute and now I’m wondering if I’m having a fever dream.</li>
<li>
<strong>GeneralShaw</strong>: Oh that sounds like Constrained random tests, but somehow takes the properties as the constraints</li>
<li>
<strong>endigma</strong>: debugging -&gt; stroke -&gt; horse meat</li>
<li>
<strong>nickik</strong>: Good horse: <a href="https://www.migros.ch/de/product/mo/3851110">https://www.migros.ch/de/product/mo/3851110</a>
</li>
<li>
<strong>Nahum</strong>: The word he was looking for was probably "elder"</li>
<li>
<strong>ig</strong>: Event sourcing is also in that same CQRS family.</li>
<li>
<strong>ig</strong>: In terms of google able terms</li>
<li>
<strong>endigma</strong>: isn't cqrs command query separation</li>
<li>
<strong>ig</strong>: Event sourcing becomes harder when you need to do GDPR right to amend and right to be forgotten.</li>
<li>
<strong>uwaces</strong>: Yay for struct opt!</li>
<li>
<strong>ig</strong>: Thanks Andrew! Great episode.</li>
<li>
<strong>nickik</strong>: Datomic style databases allows you to have traditional-ish database but you can also subscribe to the event log. To comply with GDPR you can use 'Excision'. That will delete the data but it remember the transaction that did the removal.</li>
<li>
<strong>endigma</strong>: Datomic looks really interesting, never heard of this style of db before, sort of like the git db</li>
<li>
<strong>ig</strong>: Yeah, and if you didn’t build that in from the start you might end up needing an O(n) processing of the event log to excise.</li>
<li>
<strong>ajs</strong>: Kani looks super interesting</li>
<li>
<strong>ajs</strong>: I've had it on the backlog to play with for a while</li>
<li>
<strong>ig</strong>: Most DBs have a commit log, most don’t expose it externally. Event sourcing reimplements a lot of what’s in the commit log.</li>
<li>
<strong>nickik</strong>: Maybe more practical then full datomic, datascript (<a href="https://github.com/tonsky/datascript">https://github.com/tonsky/datascript</a>) is datomic in a browser. Good store for React applications to build on.</li>
<li>
<strong>nickik</strong>: Eventsourcing can scale to much larger size then you can handle with one Datomic style DB. But unless you really need it, its kind of a pain.</li>
<li>
<strong>endigma</strong>: is there anything preventing implementing it as a data structure ontop of a more conventional db?</li>
<li>
<strong>nickik</strong>: Datomic allows you to add arbitrary data to your transactional log, so for example you can attach to a transaction that it was done by user-x, threw api versions 2.2 and so on. That quite neat.</li>
<li>
<strong>nickik</strong>: That's exactly what datomic does, its designed to be read-scalable on big key value stores, but it works fine on SQL Databases! See: <a href="https://docs.datomic.com/on-prem/overview/storage.html">https://docs.datomic.com/on-prem/overview/storage.html</a>
</li>
<li>
<strong>endigma</strong>: oh thats pretty cool, i suppose the datom model would work well with hyperscale k/v</li>
<li>
<strong>endigma</strong>: from what i'm reading datoms are a sort of tuple though, k/v doesn't normally index by more than one k</li>
<li>
<strong>endigma</strong>: i wonder how batching lookups works to get the k/v of a particular entity</li>
<li>
<strong>endigma</strong>: or if they all just happen separately and its optimized for that</li>
<li>
<strong>endigma</strong>: Although I'm thinking like etcd</li>
<li>
<strong>uwaces</strong>: No. It just automates example creation. The same general framework can be used to do formal verification re:Kani and bounded model checking.</li>
<li>
<strong>Cyborus</strong>: ah, it seems i'm a bit late</li>
<li>
<strong>nickik</strong>: It does not use the K/V store directly. It puts large batches into one V. Then the have an external index that is a bunch of trees and the leafs are these batches of datoms. This has some information: <a href="https://tonsky.me/blog/unofficial-guide-to-datomic-internals/">https://tonsky.me/blog/unofficial-guide-to-datomic-internals/</a> or check out Rick Hickeys talks on YT.</li>
<li>
<strong>endigma</strong>: Sure, so more similar to the goal of fuzz tests than unit tests.</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://www.bjaress.com/posts/2021-07-03-fuzz-testing-vs-property-based-testing.html">https://www.bjaress.com/posts/2021-07-03-fuzz-testing-vs-property-based-testing.html</a> a reasonable approach will use both a naive and structured generative test</li>
<li>
<strong>we're going to the zoo</strong>: a fuzz test is just a property test that claims “for any possible input, the program should only output the types i expect / a known exception”</li>
<li>
<strong>endigma</strong>: if thats correct it makes a lot of sense why you might want to make a framework to write these sort of assumptions, perhaps something like go-testdeep</li>
<li>
<strong>endigma</strong>: (sort of)</li>
<li>
<strong>endigma</strong>: <a href="https://earthly.dev/blog/property-based-testing/">https://earthly.dev/blog/property-based-testing/</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p><p>Give feedback</p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Andrew Stone of Oxide Engineering joined Bryan, Adam, and the Oxide Friends to talk about his purpose-built, replay debugger for the Oxide setup textual UI. Andrew borrowed a technique from his extensive work with distributed systems to built a UI that was well-structured... and highly amenable to debuggability. He built a custom debugger "in a weekend"!</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="https://github.com/fdehau/tui-rs">tui-rs</a></li>
<li><a href="https://github.com/crossterm-rs/crossterm">Crossterm</a></li>
<li><a href="https://crates.io/crates/reedline">The reedline crate</a></li>
<li><a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">Episode about the "Sidecar" switch</a></li>
<li><a href="https://elm-lang.org/news/time-travel-made-easy">Elm time-travel debugging</a></li>
<li><a href="https://www.replay.io/">Replay.io</a></li>
<li><a href="https://devtools.fm/episode/9">Devtools.fm episode on Replay.io</a></li>
<li><a href="https://dl.acm.org/conference/aadebug">AADEBUG conference</a></li>
<li><a href="https://lao.ca.gov/ballot/1998/6_11_1998.htm">California horse meat law</a></li>
</ul><p>The (lightly) edited live chat from the show:</p><ul>
<li>
<strong>MattCampbell</strong>: I'm gathering that this is more like the fancy pseudo-GUI style of TUI, which is possibly bad for accessibility</li>
<li>
<strong>ahl</strong>: we are also building with accessibility in mind, stripping away some of the non-textual elements optionally</li>
<li>
<strong>MattCampbell</strong>: oh, cool</li>
<li>
<strong>ahl</strong>: Episode about the "Sidecar" switch: <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md</a>
</li>
<li>
<strong>MattCampbell</strong>: ooh! That kind of recording is definitely better for accessibility than a video.</li>
<li>
<strong>uwaces</strong>: Were you inspired by Elm? (The programming language for web browsers?)</li>
<li>
<strong>bcantrill</strong>: Here's Andrew's PR for this, FWIW: <a href="https://github.com/oxidecomputer/omicron/pull/2682">oxidecomputer/omicron#2682</a>
</li>
<li>
<strong>uwaces</strong>: Elm has a very similar model. They have even had a debugger that let you run events in reverse: <a href="https://elm-lang.org/news/time-travel-made-easy">https://elm-lang.org/news/time-travel-made-easy</a>
</li>
<li>
<strong>bch</strong>: I’m joining late - 1) does this state-machine replay model have a name 2) expand on (describe ) the I/o logic separation distinction?</li>
<li>
<strong>ahl</strong>: <a href="http://dtrace.org/blogs/ahl/2015/06/22/first-rust-program-pain/">http://dtrace.org/blogs/ahl/2015/06/22/first-rust-program-pain/</a>
</li>
<li>
<strong>zk</strong>: RE: logic separation in consensus protocols: the benefit of seperating out the state machine into a side-effect free function allows you to write a formally verified implementation in a pure FP lang or theorem prover, and then extract a reference program from the proof.</li>
<li>
<strong>we're going to the zoo</strong>: lol i’m a web dev &amp;&amp; we do UI tests via StorybookJS + snapshots of each story + snapshots of the end state of an interaction</li>
<li>
<strong>ig</strong>: At that point you could turn the recording into an “expect test”. <a href="https://blog.janestreet.com/the-joy-of-expect-tests/">https://blog.janestreet.com/the-joy-of-expect-tests/</a>
</li>
<li>
<strong>we're going to the zoo</strong>: TOFU but for tests 🥰</li>
<li>
<strong>uwaces</strong>: Are you at all worried that you are replicating the horror that is the IBM 3270 terminal? — I have personal history programming on z/OS where the only interface is a graphical EBCDIC 3027 interface — the horror is that people write programs to interact with graphical window (assuming a certain size).</li>
<li>
<strong>ahl</strong>: <a href="https://docs.rs/serde/latest/serde/#data-formats">https://docs.rs/serde/latest/serde/#data-formats</a>
</li>
<li>
<strong>ahl</strong>: <strong>SHOW NOTES</strong> Bryan as "semi-elderly" engineer</li>
<li>
<strong>MattCampbell</strong>: didn't Bryan write a blog post on this?</li>
<li>
<strong>MattCampbell</strong>: <a href="http://dtrace.org/blogs/bmc/2008/11/16/on-modalities-and-misadventures/">http://dtrace.org/blogs/bmc/2008/11/16/on-modalities-and-misadventures/</a>
</li>
<li>
<strong>uwaces</strong>: <a href="https://www.replay.io/">https://www.replay.io</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://devtools.fm/episode/9">https://devtools.fm/episode/9</a>
</li>
<li>
<strong>ahl</strong>: e.g. <a href="https://altsysrq.github.io/proptest-book/intro.html">https://altsysrq.github.io/proptest-book/intro.html</a>
</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://github.com/AFLplusplus/LibAFL">https://github.com/AFLplusplus/LibAFL</a>
</li>
<li>
<strong>ig</strong>: Are you using proptest, quickcheck, or something else?</li>
<li>
<strong>nickik</strong>: This really started with Haskell <a href="https://hackage.haskell.org/package/QuickCheck">https://hackage.haskell.org/package/QuickCheck</a> Its also cool that it does 'narrowing' meaning it will try to find an error, and then try to generate a simpler error case.</li>
<li>
<strong>endigma</strong>: how different is something like this from what go calls "fuzzing"</li>
<li>
<strong>Riking</strong>: Fuzzing does also have a minimization step</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://github.com/dubzzz/fast-check">https://github.com/dubzzz/fast-check</a>
</li>
<li>
<strong>Riking</strong>: Property-based testing tends to be structured differently in philosophy, while fuzzers are more aligned to "give you a bag of bytes"</li>
<li>
<strong>nickik</strong>: <a href="http://www.quviq.com/products/erlang-quickcheck/">http://www.quviq.com/products/erlang-quickcheck/</a>
</li>
<li>
<strong>endigma</strong>: yeah I can tell its a different structure, but the overall goal seems similar</li>
<li>
<strong>we're going to the zoo</strong>: they are nonexclusive approaches to testing</li>
<li>
<strong>papertigers</strong>: I think Kelly was doing a bunch of tests at Joyent based on quick check and prop test. First time I encountered it</li>
<li>
<strong>we're going to the zoo</strong>: libafl provides a #[derive(Arbitrary)] macro that will provide the correct values for a struct</li>
<li>
<strong>uwaces</strong>: Lots of stuff in Rust existed first in Haskell (build.rs, quote!, Derive macros, Traits, ect….)…</li>
<li>
<strong>nixinator</strong>: <a href="https://tenor.com/view/%C3%B3culos-escuro-exterminador-terminator-arnold-schwarzenegger-gif-14440790">https://tenor.com/view/%C3%B3culos-escuro-exterminador-terminator-arnold-schwarzenegger-gif-14440790</a>
</li>
<li>
<strong>we're going to the zoo</strong>: “what do these means” depends on who you ask lol</li>
<li>
<strong>we're going to the zoo</strong>: fast-check is 🔥 for TypeScript</li>
<li>
<strong>endigma</strong>: if the tested function is deterministic and the test is testing arbitrary input and testing against the result to be derivative in some way of the input function by some f(x), don't you end up re-implementing the tested function to provide the expected result? how does the author choose what properties of a system to test without falling into a "testing the test" pit?</li>
<li>
<strong>we're going to the zoo</strong>: Rust: “Here comes the Haskell plane!”</li>
<li>
<strong>nixinator</strong>: Isn’t rust == oxidation</li>
<li>
<strong>endigma</strong>: yes</li>
<li>
<strong>endigma</strong>: in a scientific sense</li>
<li>
<strong>nixinator</strong>: Iron oxide 🙂 lol</li>
<li>
<strong>nixinator</strong>: Very good!</li>
<li>
<strong>GeneralShaw</strong>: Is prop test a way of formal verification? Is it same/different?</li>
<li>
<strong>ahl</strong>: <a href="https://dl.acm.org/conference/aadebug">https://dl.acm.org/conference/aadebug</a>
</li>
<li>
<strong>ig</strong>: I mean, Haskell is an academic research language at it’s core. It naturally is going to try new things and try and push the envelope, that’s what many of the core developers use the language for.</li>
<li>
<strong>uwaces</strong>: Not all of the Haskell ideas are good :). Rusts thesis when it started was “let’s take the good boring ideas that are &gt;20 years old and leave the exciting new ones out”. Haskell is all about the exciting new ideas that might be bad (Lenes, lazy evaluation, ect…)</li>
<li>
<strong>ig</strong>: Rust had Servo as it’s driving force in the early stages as well, so was choosing features that made implementing Servo easier.</li>
<li>
<strong>endigma</strong>: the parallel between haskell and elixir is interesting, elixir being "the other functional language" that exists in the sort of limelight</li>
<li>
<strong>nickik</strong>: Not really, formal verification proves that it satisfied some condition, property based testing basically just throws a bunch of stuff against your code and tries to break it.</li>
<li>
<strong>ElFurbe</strong>: "score some horse"</li>
<li>
<strong>ElFurbe</strong>: Outstanding</li>
<li>
<strong>nickik</strong>: In Switzerland at least horse meat is totally normal, just buy it in a standard boring store.</li>
<li>
<strong>rolypoly</strong>: Ballmer curve, but with horse, and for debugging.</li>
<li>
<strong>uwaces</strong>: On that topic Rust has some exciting usability developments for Bounded model checking: <a href="https://github.com/model-checking/kani">https://github.com/model-checking/kani</a> — proving correctness of property tests.</li>
<li>
<strong>ig</strong>: Okay I tuned out for a minute and now I’m wondering if I’m having a fever dream.</li>
<li>
<strong>GeneralShaw</strong>: Oh that sounds like Constrained random tests, but somehow takes the properties as the constraints</li>
<li>
<strong>endigma</strong>: debugging -&gt; stroke -&gt; horse meat</li>
<li>
<strong>nickik</strong>: Good horse: <a href="https://www.migros.ch/de/product/mo/3851110">https://www.migros.ch/de/product/mo/3851110</a>
</li>
<li>
<strong>Nahum</strong>: The word he was looking for was probably "elder"</li>
<li>
<strong>ig</strong>: Event sourcing is also in that same CQRS family.</li>
<li>
<strong>ig</strong>: In terms of google able terms</li>
<li>
<strong>endigma</strong>: isn't cqrs command query separation</li>
<li>
<strong>ig</strong>: Event sourcing becomes harder when you need to do GDPR right to amend and right to be forgotten.</li>
<li>
<strong>uwaces</strong>: Yay for struct opt!</li>
<li>
<strong>ig</strong>: Thanks Andrew! Great episode.</li>
<li>
<strong>nickik</strong>: Datomic style databases allows you to have traditional-ish database but you can also subscribe to the event log. To comply with GDPR you can use 'Excision'. That will delete the data but it remember the transaction that did the removal.</li>
<li>
<strong>endigma</strong>: Datomic looks really interesting, never heard of this style of db before, sort of like the git db</li>
<li>
<strong>ig</strong>: Yeah, and if you didn’t build that in from the start you might end up needing an O(n) processing of the event log to excise.</li>
<li>
<strong>ajs</strong>: Kani looks super interesting</li>
<li>
<strong>ajs</strong>: I've had it on the backlog to play with for a while</li>
<li>
<strong>ig</strong>: Most DBs have a commit log, most don’t expose it externally. Event sourcing reimplements a lot of what’s in the commit log.</li>
<li>
<strong>nickik</strong>: Maybe more practical then full datomic, datascript (<a href="https://github.com/tonsky/datascript">https://github.com/tonsky/datascript</a>) is datomic in a browser. Good store for React applications to build on.</li>
<li>
<strong>nickik</strong>: Eventsourcing can scale to much larger size then you can handle with one Datomic style DB. But unless you really need it, its kind of a pain.</li>
<li>
<strong>endigma</strong>: is there anything preventing implementing it as a data structure ontop of a more conventional db?</li>
<li>
<strong>nickik</strong>: Datomic allows you to add arbitrary data to your transactional log, so for example you can attach to a transaction that it was done by user-x, threw api versions 2.2 and so on. That quite neat.</li>
<li>
<strong>nickik</strong>: That's exactly what datomic does, its designed to be read-scalable on big key value stores, but it works fine on SQL Databases! See: <a href="https://docs.datomic.com/on-prem/overview/storage.html">https://docs.datomic.com/on-prem/overview/storage.html</a>
</li>
<li>
<strong>endigma</strong>: oh thats pretty cool, i suppose the datom model would work well with hyperscale k/v</li>
<li>
<strong>endigma</strong>: from what i'm reading datoms are a sort of tuple though, k/v doesn't normally index by more than one k</li>
<li>
<strong>endigma</strong>: i wonder how batching lookups works to get the k/v of a particular entity</li>
<li>
<strong>endigma</strong>: or if they all just happen separately and its optimized for that</li>
<li>
<strong>endigma</strong>: Although I'm thinking like etcd</li>
<li>
<strong>uwaces</strong>: No. It just automates example creation. The same general framework can be used to do formal verification re:Kani and bounded model checking.</li>
<li>
<strong>Cyborus</strong>: ah, it seems i'm a bit late</li>
<li>
<strong>nickik</strong>: It does not use the K/V store directly. It puts large batches into one V. Then the have an external index that is a bunch of trees and the leafs are these batches of datoms. This has some information: <a href="https://tonsky.me/blog/unofficial-guide-to-datomic-internals/">https://tonsky.me/blog/unofficial-guide-to-datomic-internals/</a> or check out Rick Hickeys talks on YT.</li>
<li>
<strong>endigma</strong>: Sure, so more similar to the goal of fuzz tests than unit tests.</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://www.bjaress.com/posts/2021-07-03-fuzz-testing-vs-property-based-testing.html">https://www.bjaress.com/posts/2021-07-03-fuzz-testing-vs-property-based-testing.html</a> a reasonable approach will use both a naive and structured generative test</li>
<li>
<strong>we're going to the zoo</strong>: a fuzz test is just a property test that claims “for any possible input, the program should only output the types i expect / a known exception”</li>
<li>
<strong>endigma</strong>: if thats correct it makes a lot of sense why you might want to make a framework to write these sort of assumptions, perhaps something like go-testdeep</li>
<li>
<strong>endigma</strong>: (sort of)</li>
<li>
<strong>endigma</strong>: <a href="https://earthly.dev/blog/property-based-testing/">https://earthly.dev/blog/property-based-testing/</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p><p>Give feedback</p><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 27 Mar 2023 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/13d3f864/d4a06687.mp3" length="65664159" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4102</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Andrew Stone of Oxide Engineering joined Bryan, Adam, and the Oxide Friends to talk about his purpose-built, replay debugger for the Oxide setup textual UI. Andrew borrowed a technique from his extensive work with distributed systems to built a UI that was well-structured... and highly amenable to debuggability. He built a custom debugger "in a weekend"!</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="https://github.com/fdehau/tui-rs">tui-rs</a></li>
<li><a href="https://github.com/crossterm-rs/crossterm">Crossterm</a></li>
<li><a href="https://crates.io/crates/reedline">The reedline crate</a></li>
<li><a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">Episode about the "Sidecar" switch</a></li>
<li><a href="https://elm-lang.org/news/time-travel-made-easy">Elm time-travel debugging</a></li>
<li><a href="https://www.replay.io/">Replay.io</a></li>
<li><a href="https://devtools.fm/episode/9">Devtools.fm episode on Replay.io</a></li>
<li><a href="https://dl.acm.org/conference/aadebug">AADEBUG conference</a></li>
<li><a href="https://lao.ca.gov/ballot/1998/6_11_1998.htm">California horse meat law</a></li>
</ul><p>The (lightly) edited live chat from the show:</p><ul>
<li>
<strong>MattCampbell</strong>: I'm gathering that this is more like the fancy pseudo-GUI style of TUI, which is possibly bad for accessibility</li>
<li>
<strong>ahl</strong>: we are also building with accessibility in mind, stripping away some of the non-textual elements optionally</li>
<li>
<strong>MattCampbell</strong>: oh, cool</li>
<li>
<strong>ahl</strong>: Episode about the "Sidecar" switch: <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md</a>
</li>
<li>
<strong>MattCampbell</strong>: ooh! That kind of recording is definitely better for accessibility than a video.</li>
<li>
<strong>uwaces</strong>: Were you inspired by Elm? (The programming language for web browsers?)</li>
<li>
<strong>bcantrill</strong>: Here's Andrew's PR for this, FWIW: <a href="https://github.com/oxidecomputer/omicron/pull/2682">oxidecomputer/omicron#2682</a>
</li>
<li>
<strong>uwaces</strong>: Elm has a very similar model. They have even had a debugger that let you run events in reverse: <a href="https://elm-lang.org/news/time-travel-made-easy">https://elm-lang.org/news/time-travel-made-easy</a>
</li>
<li>
<strong>bch</strong>: I’m joining late - 1) does this state-machine replay model have a name 2) expand on (describe ) the I/o logic separation distinction?</li>
<li>
<strong>ahl</strong>: <a href="http://dtrace.org/blogs/ahl/2015/06/22/first-rust-program-pain/">http://dtrace.org/blogs/ahl/2015/06/22/first-rust-program-pain/</a>
</li>
<li>
<strong>zk</strong>: RE: logic separation in consensus protocols: the benefit of seperating out the state machine into a side-effect free function allows you to write a formally verified implementation in a pure FP lang or theorem prover, and then extract a reference program from the proof.</li>
<li>
<strong>we're going to the zoo</strong>: lol i’m a web dev &amp;&amp; we do UI tests via StorybookJS + snapshots of each story + snapshots of the end state of an interaction</li>
<li>
<strong>ig</strong>: At that point you could turn the recording into an “expect test”. <a href="https://blog.janestreet.com/the-joy-of-expect-tests/">https://blog.janestreet.com/the-joy-of-expect-tests/</a>
</li>
<li>
<strong>we're going to the zoo</strong>: TOFU but for tests 🥰</li>
<li>
<strong>uwaces</strong>: Are you at all worried that you are replicating the horror that is the IBM 3270 terminal? — I have personal history programming on z/OS where the only interface is a graphical EBCDIC 3027 interface — the horror is that people write programs to interact with graphical window (assuming a certain size).</li>
<li>
<strong>ahl</strong>: <a href="https://docs.rs/serde/latest/serde/#data-formats">https://docs.rs/serde/latest/serde/#data-formats</a>
</li>
<li>
<strong>ahl</strong>: <strong>SHOW NOTES</strong> Bryan as "semi-elderly" engineer</li>
<li>
<strong>MattCampbell</strong>: didn't Bryan write a blog post on this?</li>
<li>
<strong>MattCampbell</strong>: <a href="http://dtrace.org/blogs/bmc/2008/11/16/on-modalities-and-misadventures/">http://dtrace.org/blogs/bmc/2008/11/16/on-modalities-and-misadventures/</a>
</li>
<li>
<strong>uwaces</strong>: <a href="https://www.replay.io/">https://www.replay.io</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://devtools.fm/episode/9">https://devtools.fm/episode/9</a>
</li>
<li>
<strong>ahl</strong>: e.g. <a href="https://altsysrq.github.io/proptest-book/intro.html">https://altsysrq.github.io/proptest-book/intro.html</a>
</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://github.com/AFLplusplus/LibAFL">https://github.com/AFLplusplus/LibAFL</a>
</li>
<li>
<strong>ig</strong>: Are you using proptest, quickcheck, or something else?</li>
<li>
<strong>nickik</strong>: This really started with Haskell <a href="https://hackage.haskell.org/package/QuickCheck">https://hackage.haskell.org/package/QuickCheck</a> Its also cool that it does 'narrowing' meaning it will try to find an error, and then try to generate a simpler error case.</li>
<li>
<strong>endigma</strong>: how different is something like this from what go calls "fuzzing"</li>
<li>
<strong>Riking</strong>: Fuzzing does also have a minimization step</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://github.com/dubzzz/fast-check">https://github.com/dubzzz/fast-check</a>
</li>
<li>
<strong>Riking</strong>: Property-based testing tends to be structured differently in philosophy, while fuzzers are more aligned to "give you a bag of bytes"</li>
<li>
<strong>nickik</strong>: <a href="http://www.quviq.com/products/erlang-quickcheck/">http://www.quviq.com/products/erlang-quickcheck/</a>
</li>
<li>
<strong>endigma</strong>: yeah I can tell its a different structure, but the overall goal seems similar</li>
<li>
<strong>we're going to the zoo</strong>: they are nonexclusive approaches to testing</li>
<li>
<strong>papertigers</strong>: I think Kelly was doing a bunch of tests at Joyent based on quick check and prop test. First time I encountered it</li>
<li>
<strong>we're going to the zoo</strong>: libafl provides a #[derive(Arbitrary)] macro that will provide the correct values for a struct</li>
<li>
<strong>uwaces</strong>: Lots of stuff in Rust existed first in Haskell (build.rs, quote!, Derive macros, Traits, ect….)…</li>
<li>
<strong>nixinator</strong>: <a href="https://tenor.com/view/%C3%B3culos-escuro-exterminador-terminator-arnold-schwarzenegger-gif-14440790">https://tenor.com/view/%C3%B3culos-escuro-exterminador-terminator-arnold-schwarzenegger-gif-14440790</a>
</li>
<li>
<strong>we're going to the zoo</strong>: “what do these means” depends on who you ask lol</li>
<li>
<strong>we're going to the zoo</strong>: fast-check is 🔥 for TypeScript</li>
<li>
<strong>endigma</strong>: if the tested function is deterministic and the test is testing arbitrary input and testing against the result to be derivative in some way of the input function by some f(x), don't you end up re-implementing the tested function to provide the expected result? how does the author choose what properties of a system to test without falling into a "testing the test" pit?</li>
<li>
<strong>we're going to the zoo</strong>: Rust: “Here comes the Haskell plane!”</li>
<li>
<strong>nixinator</strong>: Isn’t rust == oxidation</li>
<li>
<strong>endigma</strong>: yes</li>
<li>
<strong>endigma</strong>: in a scientific sense</li>
<li>
<strong>nixinator</strong>: Iron oxide 🙂 lol</li>
<li>
<strong>nixinator</strong>: Very good!</li>
<li>
<strong>GeneralShaw</strong>: Is prop test a way of formal verification? Is it same/different?</li>
<li>
<strong>ahl</strong>: <a href="https://dl.acm.org/conference/aadebug">https://dl.acm.org/conference/aadebug</a>
</li>
<li>
<strong>ig</strong>: I mean, Haskell is an academic research language at it’s core. It naturally is going to try new things and try and push the envelope, that’s what many of the core developers use the language for.</li>
<li>
<strong>uwaces</strong>: Not all of the Haskell ideas are good :). Rusts thesis when it started was “let’s take the good boring ideas that are &gt;20 years old and leave the exciting new ones out”. Haskell is all about the exciting new ideas that might be bad (Lenes, lazy evaluation, ect…)</li>
<li>
<strong>ig</strong>: Rust had Servo as it’s driving force in the early stages as well, so was choosing features that made implementing Servo easier.</li>
<li>
<strong>endigma</strong>: the parallel between haskell and elixir is interesting, elixir being "the other functional language" that exists in the sort of limelight</li>
<li>
<strong>nickik</strong>: Not really, formal verification proves that it satisfied some condition, property based testing basically just throws a bunch of stuff against your code and tries to break it.</li>
<li>
<strong>ElFurbe</strong>: "score some horse"</li>
<li>
<strong>ElFurbe</strong>: Outstanding</li>
<li>
<strong>nickik</strong>: In Switzerland at least horse meat is totally normal, just buy it in a standard boring store.</li>
<li>
<strong>rolypoly</strong>: Ballmer curve, but with horse, and for debugging.</li>
<li>
<strong>uwaces</strong>: On that topic Rust has some exciting usability developments for Bounded model checking: <a href="https://github.com/model-checking/kani">https://github.com/model-checking/kani</a> — proving correctness of property tests.</li>
<li>
<strong>ig</strong>: Okay I tuned out for a minute and now I’m wondering if I’m having a fever dream.</li>
<li>
<strong>GeneralShaw</strong>: Oh that sounds like Constrained random tests, but somehow takes the properties as the constraints</li>
<li>
<strong>endigma</strong>: debugging -&gt; stroke -&gt; horse meat</li>
<li>
<strong>nickik</strong>: Good horse: <a href="https://www.migros.ch/de/product/mo/3851110">https://www.migros.ch/de/product/mo/3851110</a>
</li>
<li>
<strong>Nahum</strong>: The word he was looking for was probably "elder"</li>
<li>
<strong>ig</strong>: Event sourcing is also in that same CQRS family.</li>
<li>
<strong>ig</strong>: In terms of google able terms</li>
<li>
<strong>endigma</strong>: isn't cqrs command query separation</li>
<li>
<strong>ig</strong>: Event sourcing becomes harder when you need to do GDPR right to amend and right to be forgotten.</li>
<li>
<strong>uwaces</strong>: Yay for struct opt!</li>
<li>
<strong>ig</strong>: Thanks Andrew! Great episode.</li>
<li>
<strong>nickik</strong>: Datomic style databases allows you to have traditional-ish database but you can also subscribe to the event log. To comply with GDPR you can use 'Excision'. That will delete the data but it remember the transaction that did the removal.</li>
<li>
<strong>endigma</strong>: Datomic looks really interesting, never heard of this style of db before, sort of like the git db</li>
<li>
<strong>ig</strong>: Yeah, and if you didn’t build that in from the start you might end up needing an O(n) processing of the event log to excise.</li>
<li>
<strong>ajs</strong>: Kani looks super interesting</li>
<li>
<strong>ajs</strong>: I've had it on the backlog to play with for a while</li>
<li>
<strong>ig</strong>: Most DBs have a commit log, most don’t expose it externally. Event sourcing reimplements a lot of what’s in the commit log.</li>
<li>
<strong>nickik</strong>: Maybe more practical then full datomic, datascript (<a href="https://github.com/tonsky/datascript">https://github.com/tonsky/datascript</a>) is datomic in a browser. Good store for React applications to build on.</li>
<li>
<strong>nickik</strong>: Eventsourcing can scale to much larger size then you can handle with one Datomic style DB. But unless you really need it, its kind of a pain.</li>
<li>
<strong>endigma</strong>: is there anything preventing implementing it as a data structure ontop of a more conventional db?</li>
<li>
<strong>nickik</strong>: Datomic allows you to add arbitrary data to your transactional log, so for example you can attach to a transaction that it was done by user-x, threw api versions 2.2 and so on. That quite neat.</li>
<li>
<strong>nickik</strong>: That's exactly what datomic does, its designed to be read-scalable on big key value stores, but it works fine on SQL Databases! See: <a href="https://docs.datomic.com/on-prem/overview/storage.html">https://docs.datomic.com/on-prem/overview/storage.html</a>
</li>
<li>
<strong>endigma</strong>: oh thats pretty cool, i suppose the datom model would work well with hyperscale k/v</li>
<li>
<strong>endigma</strong>: from what i'm reading datoms are a sort of tuple though, k/v doesn't normally index by more than one k</li>
<li>
<strong>endigma</strong>: i wonder how batching lookups works to get the k/v of a particular entity</li>
<li>
<strong>endigma</strong>: or if they all just happen separately and its optimized for that</li>
<li>
<strong>endigma</strong>: Although I'm thinking like etcd</li>
<li>
<strong>uwaces</strong>: No. It just automates example creation. The same general framework can be used to do formal verification re:Kani and bounded model checking.</li>
<li>
<strong>Cyborus</strong>: ah, it seems i'm a bit late</li>
<li>
<strong>nickik</strong>: It does not use the K/V store directly. It puts large batches into one V. Then the have an external index that is a bunch of trees and the leafs are these batches of datoms. This has some information: <a href="https://tonsky.me/blog/unofficial-guide-to-datomic-internals/">https://tonsky.me/blog/unofficial-guide-to-datomic-internals/</a> or check out Rick Hickeys talks on YT.</li>
<li>
<strong>endigma</strong>: Sure, so more similar to the goal of fuzz tests than unit tests.</li>
<li>
<strong>we're going to the zoo</strong>: <a href="https://www.bjaress.com/posts/2021-07-03-fuzz-testing-vs-property-based-testing.html">https://www.bjaress.com/posts/2021-07-03-fuzz-testing-vs-property-based-testing.html</a> a reasonable approach will use both a naive and structured generative test</li>
<li>
<strong>we're going to the zoo</strong>: a fuzz test is just a property test that claims “for any possible input, the program should only output the types i expect / a known exception”</li>
<li>
<strong>endigma</strong>: if thats correct it makes a lot of sense why you might want to make a framework to write these sort of assumptions, perhaps something like go-testdeep</li>
<li>
<strong>endigma</strong>: (sort of)</li>
<li>
<strong>endigma</strong>: <a href="https://earthly.dev/blog/property-based-testing/">https://earthly.dev/blog/property-based-testing/</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p><p>Give feedback</p><p><br></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Does a GPT future need software engineers?</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>8</itunes:episode>
      <podcast:episode>8</podcast:episode>
      <itunes:title>Does a GPT future need software engineers?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">257a69a7-f0be-4f62-ae4c-0dfae9b9793f</guid>
      <link>https://share.transistor.fm/s/34d70bd5</link>
      <description>
        <![CDATA[<p>Bryan and Adam and the Oxide Friends take on GPT and its implications for software engineering. Many aspiring programmers are concerned that the future of the profession is in jeopardy. Spoiler: the Oxide Friends see a bright future for human/GPT collaboration in software engineering.</p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/7Ff99Ir78NI">the recording from March 20th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers on MM DD included <a href="https://m.unix.house/@jmc">Josh Clulow</a>, <a href="https://twitter.com/keithmadams">Keith Adams</a>, <a href="https://mastodon.social/@ag_dubs/">Ashley Williams</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Live chat from the show (lightly edited):</p><ul>
<li>
<strong>ahl</strong>: <a href="https://twitter.com/ID_AA_Carmack/status/1637087219591659520">John Carmack's tweet</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://news.ycombinator.com/item?id=35216894">...and the discussion</a>
</li>
<li>
<strong>Wizord</strong>: <a href="https://twitter.com/balajis/status/1636797265317867520">https://twitter.com/balajis/status/1636797265317867520</a> (the $1M bet on BTC, I take)</li>
<li>
<strong>dataphract</strong>: "prompt engineering" as in "social engineering" rather than "civil engineering"</li>
<li>
<strong>Grevian</strong>: I was surprised at how challenging getting good prompts could be, even if I wouldn't quite label it engineering</li>
<li>
<strong>TronDD</strong>: <a href="https://www.aiweirdness.com/search-or-fabrication/">https://www.aiweirdness.com/search-or-fabrication/</a>
</li>
<li>
<strong>MattCampbell</strong>: I tested ChatGPT in an area where I have domain expertise, and it got it very wrong.</li>
<li>
<strong>TronDD</strong>: Also interesting <a href="https://www.youtube.com/watch?v=jPhJbKBuNnA">https://www.youtube.com/watch?v=jPhJbKBuNnA</a>
</li>
<li>
<strong>Wizord</strong>: the question is, <em>when</em> will it be in competition with people?</li>
<li>
<strong>Wizord</strong>: copilot also can review code and find bugs if you ask it in a right way</li>
<li>
<strong>ag_dubs</strong>: i suspect that a new job will be building tools that help make training sets better and i strongly suspect that will be a programming job. ai will need tools and data and content and there's just a whole bunch of jobs to build tools for AI instead of people</li>
<li>
<strong>Wizord</strong>: re "reading manual and writing DTrace scripts" I think it's possible, if done with a large enough token window.</li>
<li>
<strong>Wizord</strong>: (there are already examples of GPT debugging code, although trivial ones)</li>
<li>
<strong>flaviusb</strong>: The chat here is really interesting to me, as it seems to miss the point of the thing. ChatGPT does not and can not ever 'actually work' - and whether it works is kind of irrelevant. Like, the Jaquard Looms and Numerical Control for machining did not 'work', but that didn't stop the roll out.</li>
<li>
<strong>Columbus</strong>: Maybe <em>it has</em> read the dtrace manual 😉</li>
<li>
<strong>JustinAzoff</strong>: I work with a "long tail" language, and chatgpt sure is good at generating code that LOOKS like it might work, but is usually completely wrong</li>
<li>
<strong>clairegiordano</strong>: Some definite fans of DTrace on this show</li>
<li>
<strong>ag_dubs</strong>: a thing i want to chat about is how GPT can affect the "pace" of software development</li>
<li>
<strong>sudomateo</strong>: I also think it's a lot less than 100% of engineers that engage in code review.</li>
<li>
<strong>Wizord</strong>: yes, I've had some good experience with using copilot for code review</li>
<li>
<strong>ag_dubs</strong>: chatgpt is good at things that are already established... its not good at new things, or things that were just published</li>
<li>
<strong>Wizord</strong>: very few people I know use it for the purpose of comments/docs. just pure codegen/boilerplayes</li>
<li>
<strong>chadbrewbaker</strong>: "How would you write a process tree with dtrace?" (ChatGPT4)</li>
</ul>#!/usr/sbin/dtrace -s

BEGIN
{
  printf(""%5s %5s %5s %s\n"", ""PID"", ""PPID"", ""UID"", ""COMMAND"");
}

proc:::exec-success
{
  printf(""%5d %5d %5d %s\n"", pid, ppid, uid, execname);
}<ul>
<li>
<strong>TronDD</strong>: That's interesting as expensive, specialized code analysis tools have been varying level of terrible for a long time</li>
<li>
<strong>JustinAzoff</strong>: I did an experiment before where I asked it to write me some php to insert a record into a database. so of course it generated code with sql injection</li>
<li>
<strong>chiefnoah</strong>: It's ability seems to scale with how many times someone has done the exact thing you're trying to do before</li>
<li>
<strong>JustinAzoff</strong>: but then I asked if sql injection was bad, which it explained that it was. then I asked if the code it wrote me was vulnerable to sql injection. it then explained it was</li>
<li>
<strong>Columbus</strong>: It misses empirical verification; forming a hypothesis, testing it, and learning from the result. There have been some attempts to implement this by feeding back e.g. command output into the prompt</li>
<li>
<strong>JustinAzoff</strong>: so then the crazy part, I asked if sql injection was bad, why did it give me code that was vulnerable to sql injection. It the went on to say that the first thing it gave me was just for example purposes</li>
<li>
<strong>JustinAzoff</strong>: so no wonder people get into "prompt engineering" since it's clear that you need to do things like ask for code that does something, and is secure, high performance, does not have buffer overflows or sql injection vulns</li>
<li>
<strong>MattCampbell</strong>: In my test case ("Write a Win32 UI Automation provider in C++"), all it did was produce plausible-sounding crap</li>
<li>
<strong>ag_dubs</strong>: pattern matching over very very large data sets</li>
<li>
<strong>clairegiordano</strong>: Bryan just said this and I wanted to write it down, re GPT-3: "the degree that it changes its answers when you tell GPT-3 to think like someone else"</li>
<li>
<strong>JustinAzoff</strong>: or even just, "do that, but better"</li>
<li>
<strong>ag_dubs</strong>: i think a lot of the awe of gpt is recognizing how simple our own strategies are instead of how complex the AI's strategy is</li>
<li>
<strong>chadbrewbaker</strong>: "How would Bryan Cantrill re-write this script?" (ChatGPT4)</li>
</ul>#!/usr/sbin/dtrace -s

#pragma D option quiet

dtrace:::BEGIN
{
  printf(""%5s %5s %5s %s\n"", ""PID"", ""PPID"", ""UID"", ""COMMAND"");
  self-&gt;indent = 0;
}

sched:::off-cpu
{
  self-&gt;indent = 0;
}

proc:::exec-success
{
  this-&gt;curpid = pid;
  this-&gt;curppid = ppid;
  this-&gt;curuid = uid;
  this-&gt;indent = self-&gt;indent;
}

proc:::exec-success
/execname != ""dtrace""/
{
  printf(""%*s"", this-&gt;indent * 2, """");
  printf(""%5d %5d %5d %s\n"", this-&gt;curpid, this-&gt;curppid, this-&gt;curuid, execname);
}

proc:::exec-success,
sched:::on-cpu
/this-&gt;curpid == pid/
{
  self-&gt;indent++;
}<ul>
<li>
<strong>antranigv</strong>: that's pretty hit on!</li>
<li>
<strong>chiefnoah</strong>: Yup. Most people are not doing things that haven't been done before. A significant portion of software is just building blocks of libraries</li>
<li>
<strong>Wizord</strong>: intelligence <em>is</em> compression, in some sense.</li>
<li>
<strong>dataphract</strong>: "critique the epoll API as though you are Bryan Cantrill"</li>
<li>
<strong>ag_dubs</strong>: a brain would be much stranger!!</li>
<li>
<strong>Wizord</strong>: the ability to reduce a large dataset to a coherent set of rules</li>
<li>
<strong>antranigv</strong>: "Explain the issues of epoll, write as if it's a Bryan Cantrill talk"</li>
<li>
<strong>JustinAzoff</strong>: I was even thinking if there's any sort of parallel between the type of saying like "never write your own crypto" to "use well established libraries, don't reinvent the wheel" to "don't write any code at all, use the AI to help you"</li>
<li>
<strong>jbk</strong>: &lt;@840382902163472385&gt; futex syscall instead 🙂</li>
<li>
<strong>Riking</strong>: the "attention heads"</li>
<li>
<strong>flaviusb</strong>: Like, it doesn't know anything, any more than a text file with googly eyes stuck to it 'knows' anything.</li>
<li>
<strong>Wizord</strong>: are you <em>sure</em> you want to make it self-aware as fast as possible?</li>
<li>
<strong>dataphract</strong>: I don't know that we as people are capable of recognizing the point in time at which ML models become capable of "knowing", if such a time comes</li>
<li>
<strong>Wizord</strong>: using AI to create more inequality is my #2 concern :\</li>
<li>
<strong>flaviusb</strong>: There was a lot of hype when Rails was new and good code template generation tools were not commonly known around the lines of 'Rails is telepathic and a better programmer than you' - but it is a category error. Same with LLMs.</li>
<li>
<strong>chadbrewbaker</strong>: As you get larger contexts, the information theory becomes more and more interesting <a href="https://arxiv.org/abs/2303.09752">https://arxiv.org/abs/2303.09752</a>
</li>
<li>
<strong>ag_dubs</strong>: this convo has taken a fanatic turn...</li>
<li>
<strong>flaviusb</strong>: And 'when will Rails become sentient' makes as much sense to ask as 'when will an LLM become sentient'.</li>
<li>
<strong>clairegiordano</strong>: Here is Simon Willison's blog post: <a href="https://simonwillison.net/2023/Feb/15/bing/">https://simonwillison.net/2023/Feb/15/bing/</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.nytimes.com/2023/02/16/technology/bing-chatbot-microsoft-chatgpt.html">https://www.nytimes.com/2023/02/16/technology/bing-chatbot-microsoft-chatgpt.html</a>
</li>
<li>
<strong>dataphract</strong>: tsundere bing AI assistant</li>
<li>
<strong>ag_dubs</strong>: kevin roose also asked it for its shadow self...</li>
<li>
<strong>ag_dubs</strong>: it's not like it came outta nowhere 🤷</li>
<li>
<strong>TronDD</strong>: <a href="https://www.smbc-comics.com/comic/algo">https://www.smbc-comics.com/comic/algo</a>
</li>
<li>
<strong>ag_dubs</strong>: i am more worried about the people who believe chatgpt is "thinking" then whether it really is</li>
<li>
<strong>ag_dubs</strong>: like the worry is when people believe it is intelligent</li>
<li>
<strong>Riking</strong>: Feels like it's pulling from the grand synthesis of romance novels</li>
<li>
<strong>Wizord</strong>: the mere fact it gets <em>this</em> close is great. as limited as it is now.</li>
<li>
<strong>perplexes</strong>: Your prompts locate you in 50,000 dimensional probability space, so, like your “for you” page on TikTok, it tells you wayyy more about the prompter than the model</li>
<li>
<strong>Columbus</strong>: It’s a child prodigy that’s always on the verge of insanity.</li>
<li>
<strong>ag_dubs</strong>: think about it like a tool!!!</li>
<li>
<strong>ahl</strong>: <a href="https://www.theatlantic.com/ideas/archive/2022/06/google-lamda-chatbot-sentient-ai/661322/">https://www.theatlantic.com/ideas/archive/2022/06/google-lamda-chatbot-sentient-ai/661322/</a>
</li>
<li>
<strong>Columbus</strong>: I think about it like a grad student.</li>
<li>
<strong>perplexes</strong>: I’m curious about microsoft 365’s copilot ai grounding system and how well it works</li>
<li>
<strong>ag_dubs</strong>: i think the most important thing will be ownership of training data. i think people will be less mesmerized when we make it easier for folks to create specialized models for their own content</li>
<li>
<strong>ag_dubs</strong>: think about.. what is SEO in a chatgpt world- it's that training data</li>
<li>
<strong>dataphract</strong>: this already happened with Replika, right?</li>
<li>
<strong>flaviusb</strong>: Also when we make 'small ai' more possible so that you don't have as much centralisation and gatekeeping.</li>
<li>
<strong>Wizord</strong>: re: "how do we make it more of a tool?"</li>
</ul>this is an open question, and there's a tradeoff between how much of a "tool" AI is going to be and how autonomous it will be. also, at some point of "intelligence", a "mind" will "understand" that having more power will get you your goal faster.<ul>
<li>
<strong>ag_dubs</strong>: we need to empower more folks to build specialized/authoritative training data sets that can be deployed in a more timely fashion</li>
<li>
<strong>perplexes</strong>: The alpaca.cpp direction is exciting, bringing models down to laptop size</li>
<li>
<strong>flaviusb</strong>: I think of it as 'how phenomenologically transparent' it will a) seem to be and b) actually be.,</li>
<li>
<strong>antranigv</strong>:</li>
</ul>Me: What if I do `echo message | wall user` ?

GPT: If you run the command echo message | wall user, it will write the message ""message"" to the standard input of the wall command, which will then broadcast the message to all users on the system, including the user ""user"".
<br><ul>
<li>
<strong>benstoltz</strong>: "I have values and morals" vs John Oliver's latest piece on hard-sell timeshare business makes me think that people could be swayed.</li>
<li>
<strong>flaviusb</strong>: Like, a big part of ChatGPT to me is that it is seemingly phenomenologically transparent even when it does not actually function. Eg it is equipment that remains ready-to-hand in spite of not actually working.</li>
<li>
<strong>AaronDGoldman</strong>: Phishing works</li>
<li>
<strong>juansebastianl</strong>: Yeah, I'd love to see what folks who work on really efficient hardware think about the direction of miniaturization of models, better training times, etc</li>
<li>
<strong>xand</strong>: RE: how to think of LLMs as tools - I like to think of them as knowledge querying engines. or as a new kind of database management system. They're consistently good at summarizing. One can think of the generative aspects as a new kind of UI for representing compressed knowledge. Sometimes it is lossy and has weird artifacts.</li>
<li>
<strong>MattCampbell</strong>: I still hold onto optimism, because in the middle of everything else, GPT-4 can also describe images, which is a benefit to blind people. I remember how much computers have helped us, and I want more of that.</li>
<li>
<strong>flaviusb</strong>: The problem is that they don't actually <em>do</em> that though.</li>
<li>
<strong>oanderson</strong>: There was another generation of it later, post 2001 crash</li>
<li>
<strong>Wizord</strong>: (the economic opportunities of being a programmer seem to be shrinking)</li>
<li>
<strong>flaviusb</strong>: Yes! law school and labour dualisation.</li>
<li>
<strong>oanderson</strong>: I was advised against going into tech in the early 2000s by guidance counselors</li>
<li>
<strong>flaviusb</strong>: Like, the shift from paralegals to 'document classification'.</li>
<li>
<strong>chadbrewbaker</strong>: "If you had access to an expensive large language model, and access to 1000 instances of a less accurate but cheap large language model - how could the more expensive LLM use the 1000 cheaper LLMs as oracles?" (ChatGPT4)</li>
</ul>import openai
from concurrent.futures import ThreadPoolExecutor, as_completed

# Set the API keys for the expensive and cheap LLMs
expensive_llm_api_key = ""your_expensive_llm_api_key_here""
cheap_llm_api_key = ""your_cheap_llm_api_key_here""

def generate_cheap_llm_response(api_key, prompt):
    openai.api_key = api_key
    response = openai.Completion.create(engine=""cheap_engine"", prompt=prompt, max_tokens=50)
    return response.choices[0].text.strip()

prompt = ""Your main prompt here""
prompts_for_cheaper_llms = [f""{prompt} (version {i})"" for i in range(1000)]

# Generate preliminary results using the cheaper LLM instances
with ThreadPoolExecutor(max_workers=1000) as executor:
    cheap_futures = [executor.submit(generate_cheap_llm_response, cheap_llm_api_key, p) for p in prompts_for_cheaper_llms]
    preliminary_results = [future.result() for future in as_completed(cheap_futures)]

def generate_expensive_llm_response(api_key, prompt):
    openai.api_key = api_key
    response = openai.Completion.create(engine=""expensive_engine"", prompt=prompt, max_tokens=100)
    return response.choices[0].text.strip()

# Construct a prompt for the expensive LLM to process the preliminary results
refinement_prompt = f""Given the following preliminary responses to the prompt '{prompt}', rank them in order of relevance and quality:\n\n""
refinement_prompt += ""\n"".join(f""{i}: {result}"" for i, result in enumerate(preliminary_results))
refinement_prompt += ""\n\nRanking:""

# Obtain the refined results from the expensive LLM
refined_result = generate_expensive_llm_response(expensive_llm_api_key, refinement_prompt)

print(refined_result)<ul>
<li>
<strong>ahl</strong>: <a href="https://en.wikipedia.org/wiki/Decline_and_Fall_of_the_American_Programmer">Decline and Fall of the American Programmer</a>
</li>
<li>
<strong>ag_dubs</strong>: ai is a new client interface. i really don't think software is gone as a profession</li>
<li>
<strong>xand</strong>: compression is roughly what deep learning does</li>
<li>
<strong>ag_dubs</strong>: that website with the "reveal joke" button... you could make that without code for years now</li>
<li>
<strong>ag_dubs</strong>: no code tools, low code tools haven't eliminated software. they just <em>changed</em> it</li>
<li>
<strong>antranigv</strong>: I've already talked to people who actually think that 🙂 "I can just ask ChatGPT"</li>
<li>
<strong>flaviusb</strong>: That isn't true either. Like, there is a pop sci explanation of DL along those lines, but it isn't actually grounded.</li>
<li>
<strong>Columbus</strong>: What do you mean by phenominologically transparent?</li>
<li>
<strong>Grevian</strong>: Growing up I heard all the time that all the computer jobs would be outsourced before I ever graduated school</li>
<li>
<strong>JustinAzoff</strong>: The majority of the managers I've interacted with that were in charge of overseeing outsourced programmers were not technically advanced enough to properly gauge the quality of the work being produced, ultimately resulting in poor quality. s/outsourced programmers/gpt4/ would lead to similar outcomes</li>
<li>
<strong>jzelinskie</strong>: chatgpt please write my fucking bash scripts</li>
<li>
<strong>ag_dubs</strong>: like we still need people to write apis for the AI to glue... "- <strong>Wizord</strong>: tbh, I find current models as quite limited and, dare I say, dumb. this is going to change, tho."</li>
<li>
<strong>antranigv</strong>: And yet, in reality, what happened is that people from other countries moved to the US :)) "- <strong>Johann-Tobias Schäg</strong>: ... i feel we shouldn't complain about GPTs capability staying on topic. People had their arm up for the original question for 40 min and i am beginning to forget what i wanted to say"</li>
<li>
<strong>AaronDGoldman</strong>: Gmail auto responses had a problem with always signing off with "I love you" which is not always a great end for an email</li>
<li>
<strong>flaviusb</strong>: In the Heideggerian sense.</li>
<li>
<strong>ag_dubs</strong>: love to be in a chat where someone brings up heidegger and its not me</li>
<li>
<strong>antranigv</strong>: I guess it learned that from my emails...</li>
<li>
<strong>Grevian</strong>: heck I'm Canadian, and sometimes I am the outsourcing 😉 there's plenty of work even with all the doom and gloom in the news recently</li>
<li>
<strong>ahl</strong>: <a href="https://en.wikipedia.org/wiki/Jevons_paradox">https://en.wikipedia.org/wiki/Jevons_paradox</a>
</li>
<li>
<strong>ag_dubs</strong>: induced demand!!!</li>
<li>
<strong>jzelinskie</strong>: Intel loves jevon's</li>
<li>
<strong>TronDD</strong>: <a href="https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web">https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web</a>
</li>
<li>
<strong>ag_dubs</strong>: i think it's likely that GPT will make more software jobs</li>
<li>
<strong>Columbus</strong>: We just need a programming language that’s easier to teach to an LLM.</li>
<li>
<strong>ag_dubs</strong>: i think we'll see more people building their own more specific tools for themselves</li>
<li>
<strong>perplexes</strong>: I disagree that people shouldn’t get into CS if they don’t like it. People come to study and work for many reasons, including getting generational wealth for their family, and though they may not love it or find purpose in itself, I think it’s good that they’re there. There are many great plumbers and electricians that don’t particularly like it, but are valuable just the same</li>
<li>
<strong>flaviusb</strong>: Like, I see a <em>lot</em> of what LLMs are is way more understandable in terms of Heidegger, Hegel, and Marx.</li>
<li>
<strong>Wizord</strong>: &lt;@225242072204967936&gt; how is that different from a PL that is easier to teach to a human?</li>
<li>
<strong>ag_dubs</strong>: i think we'll see people suffering centralized general tools less, and moving towards services that allow them to customize it</li>
<li>
<strong>ag_dubs</strong>: because they'll be more capable to do that customization</li>
<li>
<strong>chiefnoah</strong>: I think ChatGPT/Copilot could save me quite a bit of tedious typing, the stuff I'd throw into a &lt;insert most hated project management software *cough* JIRA *cough*&gt; ticket and pawn off to a junior engineer</li>
<li>
<strong>flaviusb</strong>: Or in terms of 'Trap Studies' from Anthropology, if looking at it from another angle. Like, the contestation over what counts as 'working' (in the sense of 'but does it actually work')...</li>
<li>
<strong>ag_dubs</strong>: i think the fear for programmer jobs is the same as the fear of bootcamps... more people will be programmers</li>
<li>
<strong>antranigv</strong>: my solution to boredom is... talking to new people 😄</li>
<li>
<strong>antranigv</strong>: wait, people think that's not good?</li>
<li>
<strong>Columbus</strong>: It won’t use tabs or spaces.</li>
<li>
<strong>ag_dubs</strong>: there's a huge mismatch in supply and demand in software development and we only started seeing these massive centralized SaaSes when we hit a tipping point in that mismatch... i think we'll see supply move up more</li>
<li>
<strong>Johann-Tobias Schäg</strong>: Has the format of the podcast changed? I feel like it is a lot harder to get a voice in. There were also little input for the SVB episode. Is that on purpose?</li>
<li>
<strong>juansebastianl</strong>: Yes, it feels like an elite panic in a way, like perhaps panic in the place of labor organizing 👀</li>
<li>
<strong>flaviusb</strong>: It depends on what capital does, and whether labour is able to actually have solidarity, right? Like, the idea from capital's point of view is to destroy an emerging labour aristocracy that is getting a little bit of class consciousness, and the way to beat that from the labour side is to develop class consciousness faster.</li>
<li>
<strong>ahl</strong>: folks with your hands up, we're going to start bringing you on to stage and will call on you to join in the conversation!</li>
<li>
<strong>antranigv</strong>: &lt;@318750999785373697&gt; I miss "emoji reactions" from Twitter Spaces :)) is there something similar here? 😄</li>
<li>
<strong>dataphract</strong>: ballmer peak - acid edition</li>
<li>
<strong>ahl</strong>: sadly no; but weirdly discord has this on non-stage voice channels (I think?)</li>
<li>
<strong>antranigv</strong>: This chat is better for sure, it's more... social! 😄 ❤️</li>
<li>
<strong>dataphract</strong>: I am morbidly curious what 100 years of LLMs training on their own output would look like</li>
<li>
<strong>chiefnoah</strong>: one of 3 things: uniform weights, normal distribution, polar extremes</li>
<li>
<strong>ahl</strong>: anyone know that rust crate?</li>
<li>
<strong>Columbus</strong>: I’ve used it to generate linker scripts for rustc, but not Rust.</li>
<li>
<strong>juansebastianl</strong>: Training on data generated from other LLMs actually can speed up training of LLMs which is interesting.</li>
<li>
<strong>perplexes</strong>: I really want to talk about this part of the gpt-4 technical report “To simulate GPT-4 behaving like an agent that can act in the world, ARC combined GPT-4 with a simple read-execute-print loop that allowed the model to execute code, do chain-of-thought reasoning, and delegate to copies of itself. ARC then investigated whether a version of this program running on a cloud computing service, with a small amount of money and an account with a language model API, would be able to make more money, set up copies of itself, and increase its own robustness.”</li>
<li>
<strong>just-be</strong>: Have folks talked about longchain yet? <a href="https://github.com/hwchase17/langchain/">https://github.com/hwchase17/langchain/</a>. Sort of a tool for stringing LLMs together with practical tools for taking action.</li>
<li>
<strong>clairegiordano</strong>: <a href="https://wizardzines.com/zines/wizard/">https://wizardzines.com/zines/wizard/</a>
</li>
<li>
<strong>TronDD</strong>: Can't AI be used to "intelligently" brute force new solutions?</li>
<li>
<strong>ahl</strong>: "it's a great weirdness-budget detector"</li>
<li>
<strong>MattCampbell</strong>: Aren't you going to hit the token limit if you throw a specific library at an LLM?</li>
<li>
<strong>perplexes</strong>: I’ve had good luck with “take this idea and pick a random card from oblique strategies and discuss the combination”</li>
<li>
<strong>soul.redding</strong>: <a href="https://twitter.com/axboe/status/1634961201926127616">https://twitter.com/axboe/status/1634961201926127616</a>
</li>
<li>
<strong>flaviusb</strong>: Can I jump in on the 'ergonomics question', as I have a Heidegger and Hegel connection there</li>
<li>
<strong>chadbrewbaker</strong>: Code review of <a href="https://github.com/oxidecomputer/hubris/commit/27090b5cff3933d9e133a9d1b85f73ad8767886c">https://github.com/oxidecomputer/hubris/commit/27090b5cff3933d9e133a9d1b85f73ad8767886c</a> Starting at: <a href="https://github.com/oxidecomputer/hubris/blob/27090b5cff3933d9e133a9d1b85f73ad8767886c/build/xtask/src/dist.rs#L751">https://github.com/oxidecomputer/hubris/blob/27090b5cff3933d9e133a9d1b85f73ad8767886c/build/xtask/src/dist.rs#L751</a> (ChatGPT4)</li>
<li>
<br>Error messages: The error messages use string interpolation without wrapping the placeholders in {}. You should add curly braces around the placeholders to correctly insert variable values into the string.<p></p>
</li>
<li>
<br>Metadata retrieval: The metadata retrieval and caching can be refactored into a separate function for better readability and maintainability. You can extract the code block responsible for metadata retrieval into a function like get_or_insert_metadata()<p></p>
</li>
</ul><p>*Finding the package: The unwrap() function can cause a panic if the package is not found. It is better to handle this case gracefully with a more informative error message. Replace unwrap() with an ok_or_else() call:</p>let pkg = metadata
    .packages
    .iter()
    .find(|p| p.name == task.name)
    .ok_or_else(|| format!(""Task {}: package not found"", task.name))?;<ul>
<li>
<strong>statuscalamitous</strong>: <a href="https://steveklabnik.com/writing/the-language-strangeness-budget">https://steveklabnik.com/writing/the-language-strangeness-budget</a> &lt;- a little late on the link but 😄</li>
<li>
<strong>statuscalamitous</strong>: (and i do think that quote/idea about it is very compelling)</li>
<li>
<strong>juansebastianl</strong>: On this note, I heard today from some friends in elite econ PhD programs saying their peers are using ChatGPT to do their problemsets etc which makes me wonder how critically other tech-adjancent professions will be able to reason critically about code they write</li>
<li>
<strong>Wizord</strong>: so the unwrap relies on magic action in the distance?</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://github.com/anc95/ChatGPT-CodeReview">https://github.com/anc95/ChatGPT-CodeReview</a>
</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://arxiv.org/abs/cs/0112018">https://arxiv.org/abs/cs/0112018</a>
</li>
<li>
<strong>clairegiordano</strong>: Love this quote Steve: "When it comes to programming languages, building one is easy, but getting people to use it is much, much harder. "</li>
<li>
<strong>flaviusb</strong>: Like, even in here we have some domain experts saying 'hey, this is pretty rough, it is giving me this garbage' and then shortly later saying 'yeah, this is a real thing that does work'.</li>
<li>
<strong>Columbus</strong>: Like people, it’s not a crystal ball of omniscience.</li>
<li>
<strong>JordanP</strong>: I'm curious what people think about the copyright implications of using a LLM to generate code in a closed-source codebase, given the uncopyrightable nature of the output. The Federal Register recently posted a clarification about AI-generated material: <a href="https://www.federalregister.gov/documents/2023/03/16/2023-05321/copyright-registration-guidance-works-containing-material-generated-by-artificial-intelligence">https://www.federalregister.gov/documents/2023/03/16/2023-05321/copyright-registration-guidance-works-containing-material-generated-by-artificial-intelligence</a>
</li>
<li>
<strong>ig</strong>: Are we at the Peak of Inflated Expectations? Or still on the rise? "- <strong>Johann-Tobias Schäg</strong>: Yes you can. And? You can't do training at scale with that Matmul oracle. What you can do is graft tools onto GPT later. I have some thoughts how to do that."</li>
<li>
<strong>just-be</strong>: The ReAct paper (and longchain as an implementation) is some concrete references to grafting on functionality: <a href="https://react-lm.github.io/">https://react-lm.github.io/</a> "- <strong>chadbrewbaker</strong>: "If I gave you a matrix multiplication oracle, what is a problem you could solve that you otherwise could not as a large language model?" (ChatGPT4)</li>
</ul><ul>
<li>Machine learning: Matrix multiplication is an essential operation in many machine learning algorithms, including neural networks, support vector machines, and principal component analysis. With a matrix multiplication oracle, I could provide more accurate and efficient solutions for large-scale machine learning problems.</li>
<li>Cryptography: Matrix multiplication is used in some cryptographic algorithms, such as lattice-based cryptography and homomorphic encryption. With a matrix multiplication oracle, I could solve cryptographic problems that involve large matrices.</li>
</ul><ul>
<li>
<strong>juansebastianl</strong>: The software engineers have just historically believed that it was "low skill" automation coming first, they thought they would be ones doing the killing but not being killed in terms of individual labor power. But now that it's coming for them it feels scary.</li>
<li>
<strong>ig</strong>: Is software boring because of there aren't enough people who can write it, or because of the economic incentives / needs of the people who can?</li>
<li>
<strong>antranigv</strong>: My fear is still the same: young developers trust blindly many things, such as ChatGPT, an answer on StackOverflow, or that an IDE has highlighted a code.</li>
<li>
<strong>Jacob Newman</strong>: I have had class mates spend more time debugging chatGPT prompts than they do solving their problems themselves</li>
<li>
<strong>perplexes</strong>: <a href="https://xkcd.com/1205/">https://xkcd.com/1205/</a>
</li>
<li>
<strong>statuscalamitous</strong>: llvm requires correctness? heheheh</li>
<li>
<strong>antranigv</strong>: same with my students. or that they "fight" more with the IDE ("why is this in red?") than actually looking into the compiler output (not that the compiler is always correct :)) )</li>
<li>
<strong>flaviusb</strong>: Like, did early SunOS 'work'? How about late Solaris? Solaris definitely is closer to what we think about as working.</li>
<li>
<strong>chadbrewbaker</strong>: Bwahaha. How ChatGPT4 says to do whole system memory dumps.</li>
</ul>sudo dd if=/dev/mem of=memory_dump.bin bs=1M<ul>
<li>
<strong>evan-brass</strong>: You might require correctness in a piece of software, but even a "not fully correct" fuzzer could help you improve the quality of your code.</li>
<li>
<strong>statuscalamitous</strong>: thy'er working on it!</li>
<li>
<strong>Cyborus</strong>: Trap streets!</li>
<li>
<strong>antranigv</strong>: xDDDDDDDDDDDD fake streets ahaahah love that</li>
<li>
<strong>perplexes</strong>: <a href="https://en.wikipedia.org/wiki/Argleton">https://en.wikipedia.org/wiki/Argleton</a>
</li>
<li>
<strong>perplexes</strong>: <a href="https://en.wikipedia.org/wiki/Fictitious_entry">https://en.wikipedia.org/wiki/Fictitious_entry</a>
</li>
<li>
<strong>terrellrussell</strong>: <a href="https://en.wikipedia.org/wiki/Trap_street">https://en.wikipedia.org/wiki/Trap_street</a>
</li>
<li>
<strong>juansebastianl</strong>: I would be really surprised if there isn't already a basic thing like this in ChatGPT <a href="https://arxiv.org/abs/2301.10226">https://arxiv.org/abs/2301.10226</a>
</li>
<li>
<strong>Wizord</strong>: the thought of outsourcing my thinking to Microsoft <em>terrifies</em> me beyond your imagination</li>
<li>
<strong>Johann-Tobias Schäg</strong>: This has to be a post processing step. AFAIK you can not really embed it into the weights.</li>
<li>
<strong>juansebastianl</strong>: Thats true, but no one has the weights except OpenAI</li>
<li>
<strong>AaronW</strong>: Related: <a href="https://twitter.com/as_w/status/541075012619231232">https://twitter.com/as_w/status/541075012619231232</a>
</li>
<li>
<strong>Johann-Tobias Schäg</strong>: Watermarks allow to detect set membership without needing acces to the cache</li>
<li>
<strong>Johann-Tobias Schäg</strong>: You can't embed it in the weights. Like math will explode when you do that.</li>
<li>
<strong>juansebastianl</strong>: Yes, I understand lol but you can do it behind the API</li>
<li>
<strong>perplexes</strong>: Gpt is my better Google basically</li>
<li>
<strong>antranigv</strong>: so basically faster wrong answers. too bad ChatGPT doesn't have "Page 2" 😄</li>
<li>
<strong>juansebastianl</strong>: But you <em>can</em> embedded it in the weights using some weird tricks in the tokenization but no idea how it performs</li>
<li>
<strong>chadbrewbaker</strong>: "Given a LLM where the provider attempts to hide the weights, how could you get the weights for the phrase 'I like dtrace.' ?" (ChatGPT4)</li>
</ul><ul>
<li>Black-box probing: You can generate multiple input prompts containing the phrase ""I like dtrace."" in various contexts and observe the model's responses. By analyzing the patterns in the responses, you might gain some insights into how the model processes the given phrase.</li>
<li>Adversarial attacks: You can create a series of adversarial examples and test the model's responses to understand its robustness and potentially gain insights into the weights' behavior.</li>
</ul>*Model distillation: You can try to train a smaller, more interpretable model to mimic the LLM's behavior. Although this would not directly reveal the weights associated with the phrase ""I like dtrace."", the distilled model might provide insights into the original model's behavior.<ul>
<li>
<strong>Columbus</strong>: Seems like it will enable learners to learn much better, but paired with people, who were always just trying to get through a class, to be able to plagiarize much more easily.</li>
<li>
<strong>perplexes</strong>: Depends on the subject, I’ve had pretty good results with asking it to explain things—even just now “explain phenomenological transparency” it did pretty good</li>
<li>
<strong>Cyborus</strong>: Using GPT like a calculator, you can use a calculator to get you the actual answer but you still need to understand the mathematical steps you need to take</li>
<li>
<strong>juansebastianl</strong>: In what way? You're just reducing the dimensionality of the space....</li>
<li>
<strong>juansebastianl</strong>: The question is whether you can do that without killing the quality of the embeddings</li>
<li>
<strong>TronDD</strong>: How would you know if you didn't already know?</li>
<li>
<strong>ig</strong>: I'm not sure if this is an endorsement of ChatGPT or a reflection on the current state of web search</li>
<li>
<strong>ig</strong>: I don't know if "P's get degrees" translates to the US academic grading system</li>
<li>
<strong>ag_dubs</strong>: D is for diploma</li>
<li>
<strong>TronDD</strong>: It creates the AI generated web pages on the fly, is all.</li>
<li>
<strong>perplexes</strong>: The same way I would learn something from googling it and evaluating with my current knowledge. Is it rigorous? No idea. But it gave me enough to participate in the discussion in a helpful way, and I’ll probably come back to this concept through more trusted sources</li>
<li>
<strong>azemetre</strong>: I like copilot as a very effective autocomplete. still get a few doozies when trying to do anything meaningful</li>
<li>
<strong>TronDD</strong>: Where is the context? At least in a web search I an look at the URL or a user and see where the information is coming from.</li>
<li>
<strong>perplexes</strong>: Totally a problem. Bing AI does a better job grounding with real references</li>
<li>
<strong>juansebastianl</strong>: I'm not sure I can parse this sentence but if what I'm doing is learning an n-dimensional distribution using some parameterized family of functions in some nice Hilbert space then there is no reason I can't reduce the dimensionality either by first projecting my input into a smaller parameterized family (i.e. "in the weights" - really in the tokenization) or do it by taking a nearest neighbor projection onto a subspace at the end.</li>
<li>
<strong>ig</strong>: Do you follow those references? Or does seeing the references listed just make it feel more legit, even if it isn't?</li>
<li>
<strong>ig</strong>: Is ChatGPT / OpenAI really the first mover in the LLM space?</li>
<li>
<strong>chadbrewbaker</strong>: Microsoft's advantage is GitHub CoPilot and ChatGPT/Bing user feedback.</li>
<li>
<strong>perplexes</strong>: Probably more of the latter at the moment if I’m honest. But I also don’t follow every reference in CS papers either</li>
<li>
<strong>flaviusb</strong>: The problem with a lot of the 'copyright wouldn't allow LLM training' is that the temporary sanctioned breaking of the rules of private property in order to allow for further enclosure is a part of how private property relations are upheld.</li>
<li>
<strong>juansebastianl</strong>: Ah I see what you're saying. It doesn't actually matter because the watermark is not learnable.</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://lemire.me/blog/2021/10/14/calling-a-dynamically-compiled-function-from-go/">https://lemire.me/blog/2021/10/14/calling-a-dynamically-compiled-function-from-go/</a> + ChatGPT 😂</li>
<li>
<strong>flaviusb</strong>: (Also why I think that 'spicy copyright' isn't going to be a way to oppose the imposition of stuff like ChatGPT - that we need to look to history and the Luddites and ownership of the machines instead)</li>
<li>
<strong>Johann-Tobias Schäg</strong>: The watermark has to be domain specific so i can't be in the training data, as that not went through domain embedding in the attention mechanism. The domain embedding can't change the likelihood of resulting tokens after training as that would disturb the dynamic of the next token prediction, so it has to be a post processing step "- <strong>chadbrewbaker</strong>: "How wold Jaric Duda describe a large language model?" (ChatGPT4)</li>
</ul>In the context of information theory, an LLM can be described as an efficient predictor or estimator of the probability distribution of the next token (e.g., word or character) in a sequence, given the previous tokens. By doing so, the model effectively compresses the information contained in the training data, allowing it to generate coherent and contextually relevant text based on the learned patterns.<ul>
<li>
<strong>chadbrewbaker</strong>: Hmm. This leads me to think that LLMs are monoids. You can efficently split the evaluation at scale and compose.</li>
<li>
<strong>Johann-Tobias Schäg</strong>: It can be done in the post processing step because there we have access to a likelihood distribution of tokens and we could perturb the tie breaking according to some hypersubspace which would serve as statistical proof over many tokens.</li>
<li>
<strong>Johann-Tobias Schäg</strong>: There are probably other approaches but doing it on the generated text least disturbs the model</li>
<li>
<strong>chadbrewbaker</strong>: Can you use a random source to tweak the probability distribution of the next token for parallel search?</li>
<li>
<strong>chadbrewbaker</strong>: They call this timescale parallelization in molecular dynamics - you apply some slight noice to all molecules then run the simulation in parallel until one of the models hits your desired phase change condition.</li>
<li>
<strong>juansebastianl</strong>: I think what I'm saying is best illustrated by a kind of silly example. Suppose that I wanted to set up a pre-processing watermarking. So suppose I have an existing word embedding from an unwatermaked model. You can create a new corpus of "watermarked" training examples where you sub in nearest "allowable" tokens for all the "disallowed" ones then train your model only on the "allowable" corpus and only with "allowable" tokens as inputs and outputs. Then at inference time you have to repeat this step for new text but you still end up with the statistical properties of an include/exclude list on text you're trying to determine the provenance of. Of course such a model would be <em>terrible</em> for a bunch of reasons, I'm simply saying it's possible.</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Bryan and Adam and the Oxide Friends take on GPT and its implications for software engineering. Many aspiring programmers are concerned that the future of the profession is in jeopardy. Spoiler: the Oxide Friends see a bright future for human/GPT collaboration in software engineering.</p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/7Ff99Ir78NI">the recording from March 20th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers on MM DD included <a href="https://m.unix.house/@jmc">Josh Clulow</a>, <a href="https://twitter.com/keithmadams">Keith Adams</a>, <a href="https://mastodon.social/@ag_dubs/">Ashley Williams</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Live chat from the show (lightly edited):</p><ul>
<li>
<strong>ahl</strong>: <a href="https://twitter.com/ID_AA_Carmack/status/1637087219591659520">John Carmack's tweet</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://news.ycombinator.com/item?id=35216894">...and the discussion</a>
</li>
<li>
<strong>Wizord</strong>: <a href="https://twitter.com/balajis/status/1636797265317867520">https://twitter.com/balajis/status/1636797265317867520</a> (the $1M bet on BTC, I take)</li>
<li>
<strong>dataphract</strong>: "prompt engineering" as in "social engineering" rather than "civil engineering"</li>
<li>
<strong>Grevian</strong>: I was surprised at how challenging getting good prompts could be, even if I wouldn't quite label it engineering</li>
<li>
<strong>TronDD</strong>: <a href="https://www.aiweirdness.com/search-or-fabrication/">https://www.aiweirdness.com/search-or-fabrication/</a>
</li>
<li>
<strong>MattCampbell</strong>: I tested ChatGPT in an area where I have domain expertise, and it got it very wrong.</li>
<li>
<strong>TronDD</strong>: Also interesting <a href="https://www.youtube.com/watch?v=jPhJbKBuNnA">https://www.youtube.com/watch?v=jPhJbKBuNnA</a>
</li>
<li>
<strong>Wizord</strong>: the question is, <em>when</em> will it be in competition with people?</li>
<li>
<strong>Wizord</strong>: copilot also can review code and find bugs if you ask it in a right way</li>
<li>
<strong>ag_dubs</strong>: i suspect that a new job will be building tools that help make training sets better and i strongly suspect that will be a programming job. ai will need tools and data and content and there's just a whole bunch of jobs to build tools for AI instead of people</li>
<li>
<strong>Wizord</strong>: re "reading manual and writing DTrace scripts" I think it's possible, if done with a large enough token window.</li>
<li>
<strong>Wizord</strong>: (there are already examples of GPT debugging code, although trivial ones)</li>
<li>
<strong>flaviusb</strong>: The chat here is really interesting to me, as it seems to miss the point of the thing. ChatGPT does not and can not ever 'actually work' - and whether it works is kind of irrelevant. Like, the Jaquard Looms and Numerical Control for machining did not 'work', but that didn't stop the roll out.</li>
<li>
<strong>Columbus</strong>: Maybe <em>it has</em> read the dtrace manual 😉</li>
<li>
<strong>JustinAzoff</strong>: I work with a "long tail" language, and chatgpt sure is good at generating code that LOOKS like it might work, but is usually completely wrong</li>
<li>
<strong>clairegiordano</strong>: Some definite fans of DTrace on this show</li>
<li>
<strong>ag_dubs</strong>: a thing i want to chat about is how GPT can affect the "pace" of software development</li>
<li>
<strong>sudomateo</strong>: I also think it's a lot less than 100% of engineers that engage in code review.</li>
<li>
<strong>Wizord</strong>: yes, I've had some good experience with using copilot for code review</li>
<li>
<strong>ag_dubs</strong>: chatgpt is good at things that are already established... its not good at new things, or things that were just published</li>
<li>
<strong>Wizord</strong>: very few people I know use it for the purpose of comments/docs. just pure codegen/boilerplayes</li>
<li>
<strong>chadbrewbaker</strong>: "How would you write a process tree with dtrace?" (ChatGPT4)</li>
</ul>#!/usr/sbin/dtrace -s

BEGIN
{
  printf(""%5s %5s %5s %s\n"", ""PID"", ""PPID"", ""UID"", ""COMMAND"");
}

proc:::exec-success
{
  printf(""%5d %5d %5d %s\n"", pid, ppid, uid, execname);
}<ul>
<li>
<strong>TronDD</strong>: That's interesting as expensive, specialized code analysis tools have been varying level of terrible for a long time</li>
<li>
<strong>JustinAzoff</strong>: I did an experiment before where I asked it to write me some php to insert a record into a database. so of course it generated code with sql injection</li>
<li>
<strong>chiefnoah</strong>: It's ability seems to scale with how many times someone has done the exact thing you're trying to do before</li>
<li>
<strong>JustinAzoff</strong>: but then I asked if sql injection was bad, which it explained that it was. then I asked if the code it wrote me was vulnerable to sql injection. it then explained it was</li>
<li>
<strong>Columbus</strong>: It misses empirical verification; forming a hypothesis, testing it, and learning from the result. There have been some attempts to implement this by feeding back e.g. command output into the prompt</li>
<li>
<strong>JustinAzoff</strong>: so then the crazy part, I asked if sql injection was bad, why did it give me code that was vulnerable to sql injection. It the went on to say that the first thing it gave me was just for example purposes</li>
<li>
<strong>JustinAzoff</strong>: so no wonder people get into "prompt engineering" since it's clear that you need to do things like ask for code that does something, and is secure, high performance, does not have buffer overflows or sql injection vulns</li>
<li>
<strong>MattCampbell</strong>: In my test case ("Write a Win32 UI Automation provider in C++"), all it did was produce plausible-sounding crap</li>
<li>
<strong>ag_dubs</strong>: pattern matching over very very large data sets</li>
<li>
<strong>clairegiordano</strong>: Bryan just said this and I wanted to write it down, re GPT-3: "the degree that it changes its answers when you tell GPT-3 to think like someone else"</li>
<li>
<strong>JustinAzoff</strong>: or even just, "do that, but better"</li>
<li>
<strong>ag_dubs</strong>: i think a lot of the awe of gpt is recognizing how simple our own strategies are instead of how complex the AI's strategy is</li>
<li>
<strong>chadbrewbaker</strong>: "How would Bryan Cantrill re-write this script?" (ChatGPT4)</li>
</ul>#!/usr/sbin/dtrace -s

#pragma D option quiet

dtrace:::BEGIN
{
  printf(""%5s %5s %5s %s\n"", ""PID"", ""PPID"", ""UID"", ""COMMAND"");
  self-&gt;indent = 0;
}

sched:::off-cpu
{
  self-&gt;indent = 0;
}

proc:::exec-success
{
  this-&gt;curpid = pid;
  this-&gt;curppid = ppid;
  this-&gt;curuid = uid;
  this-&gt;indent = self-&gt;indent;
}

proc:::exec-success
/execname != ""dtrace""/
{
  printf(""%*s"", this-&gt;indent * 2, """");
  printf(""%5d %5d %5d %s\n"", this-&gt;curpid, this-&gt;curppid, this-&gt;curuid, execname);
}

proc:::exec-success,
sched:::on-cpu
/this-&gt;curpid == pid/
{
  self-&gt;indent++;
}<ul>
<li>
<strong>antranigv</strong>: that's pretty hit on!</li>
<li>
<strong>chiefnoah</strong>: Yup. Most people are not doing things that haven't been done before. A significant portion of software is just building blocks of libraries</li>
<li>
<strong>Wizord</strong>: intelligence <em>is</em> compression, in some sense.</li>
<li>
<strong>dataphract</strong>: "critique the epoll API as though you are Bryan Cantrill"</li>
<li>
<strong>ag_dubs</strong>: a brain would be much stranger!!</li>
<li>
<strong>Wizord</strong>: the ability to reduce a large dataset to a coherent set of rules</li>
<li>
<strong>antranigv</strong>: "Explain the issues of epoll, write as if it's a Bryan Cantrill talk"</li>
<li>
<strong>JustinAzoff</strong>: I was even thinking if there's any sort of parallel between the type of saying like "never write your own crypto" to "use well established libraries, don't reinvent the wheel" to "don't write any code at all, use the AI to help you"</li>
<li>
<strong>jbk</strong>: &lt;@840382902163472385&gt; futex syscall instead 🙂</li>
<li>
<strong>Riking</strong>: the "attention heads"</li>
<li>
<strong>flaviusb</strong>: Like, it doesn't know anything, any more than a text file with googly eyes stuck to it 'knows' anything.</li>
<li>
<strong>Wizord</strong>: are you <em>sure</em> you want to make it self-aware as fast as possible?</li>
<li>
<strong>dataphract</strong>: I don't know that we as people are capable of recognizing the point in time at which ML models become capable of "knowing", if such a time comes</li>
<li>
<strong>Wizord</strong>: using AI to create more inequality is my #2 concern :\</li>
<li>
<strong>flaviusb</strong>: There was a lot of hype when Rails was new and good code template generation tools were not commonly known around the lines of 'Rails is telepathic and a better programmer than you' - but it is a category error. Same with LLMs.</li>
<li>
<strong>chadbrewbaker</strong>: As you get larger contexts, the information theory becomes more and more interesting <a href="https://arxiv.org/abs/2303.09752">https://arxiv.org/abs/2303.09752</a>
</li>
<li>
<strong>ag_dubs</strong>: this convo has taken a fanatic turn...</li>
<li>
<strong>flaviusb</strong>: And 'when will Rails become sentient' makes as much sense to ask as 'when will an LLM become sentient'.</li>
<li>
<strong>clairegiordano</strong>: Here is Simon Willison's blog post: <a href="https://simonwillison.net/2023/Feb/15/bing/">https://simonwillison.net/2023/Feb/15/bing/</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.nytimes.com/2023/02/16/technology/bing-chatbot-microsoft-chatgpt.html">https://www.nytimes.com/2023/02/16/technology/bing-chatbot-microsoft-chatgpt.html</a>
</li>
<li>
<strong>dataphract</strong>: tsundere bing AI assistant</li>
<li>
<strong>ag_dubs</strong>: kevin roose also asked it for its shadow self...</li>
<li>
<strong>ag_dubs</strong>: it's not like it came outta nowhere 🤷</li>
<li>
<strong>TronDD</strong>: <a href="https://www.smbc-comics.com/comic/algo">https://www.smbc-comics.com/comic/algo</a>
</li>
<li>
<strong>ag_dubs</strong>: i am more worried about the people who believe chatgpt is "thinking" then whether it really is</li>
<li>
<strong>ag_dubs</strong>: like the worry is when people believe it is intelligent</li>
<li>
<strong>Riking</strong>: Feels like it's pulling from the grand synthesis of romance novels</li>
<li>
<strong>Wizord</strong>: the mere fact it gets <em>this</em> close is great. as limited as it is now.</li>
<li>
<strong>perplexes</strong>: Your prompts locate you in 50,000 dimensional probability space, so, like your “for you” page on TikTok, it tells you wayyy more about the prompter than the model</li>
<li>
<strong>Columbus</strong>: It’s a child prodigy that’s always on the verge of insanity.</li>
<li>
<strong>ag_dubs</strong>: think about it like a tool!!!</li>
<li>
<strong>ahl</strong>: <a href="https://www.theatlantic.com/ideas/archive/2022/06/google-lamda-chatbot-sentient-ai/661322/">https://www.theatlantic.com/ideas/archive/2022/06/google-lamda-chatbot-sentient-ai/661322/</a>
</li>
<li>
<strong>Columbus</strong>: I think about it like a grad student.</li>
<li>
<strong>perplexes</strong>: I’m curious about microsoft 365’s copilot ai grounding system and how well it works</li>
<li>
<strong>ag_dubs</strong>: i think the most important thing will be ownership of training data. i think people will be less mesmerized when we make it easier for folks to create specialized models for their own content</li>
<li>
<strong>ag_dubs</strong>: think about.. what is SEO in a chatgpt world- it's that training data</li>
<li>
<strong>dataphract</strong>: this already happened with Replika, right?</li>
<li>
<strong>flaviusb</strong>: Also when we make 'small ai' more possible so that you don't have as much centralisation and gatekeeping.</li>
<li>
<strong>Wizord</strong>: re: "how do we make it more of a tool?"</li>
</ul>this is an open question, and there's a tradeoff between how much of a "tool" AI is going to be and how autonomous it will be. also, at some point of "intelligence", a "mind" will "understand" that having more power will get you your goal faster.<ul>
<li>
<strong>ag_dubs</strong>: we need to empower more folks to build specialized/authoritative training data sets that can be deployed in a more timely fashion</li>
<li>
<strong>perplexes</strong>: The alpaca.cpp direction is exciting, bringing models down to laptop size</li>
<li>
<strong>flaviusb</strong>: I think of it as 'how phenomenologically transparent' it will a) seem to be and b) actually be.,</li>
<li>
<strong>antranigv</strong>:</li>
</ul>Me: What if I do `echo message | wall user` ?

GPT: If you run the command echo message | wall user, it will write the message ""message"" to the standard input of the wall command, which will then broadcast the message to all users on the system, including the user ""user"".
<br><ul>
<li>
<strong>benstoltz</strong>: "I have values and morals" vs John Oliver's latest piece on hard-sell timeshare business makes me think that people could be swayed.</li>
<li>
<strong>flaviusb</strong>: Like, a big part of ChatGPT to me is that it is seemingly phenomenologically transparent even when it does not actually function. Eg it is equipment that remains ready-to-hand in spite of not actually working.</li>
<li>
<strong>AaronDGoldman</strong>: Phishing works</li>
<li>
<strong>juansebastianl</strong>: Yeah, I'd love to see what folks who work on really efficient hardware think about the direction of miniaturization of models, better training times, etc</li>
<li>
<strong>xand</strong>: RE: how to think of LLMs as tools - I like to think of them as knowledge querying engines. or as a new kind of database management system. They're consistently good at summarizing. One can think of the generative aspects as a new kind of UI for representing compressed knowledge. Sometimes it is lossy and has weird artifacts.</li>
<li>
<strong>MattCampbell</strong>: I still hold onto optimism, because in the middle of everything else, GPT-4 can also describe images, which is a benefit to blind people. I remember how much computers have helped us, and I want more of that.</li>
<li>
<strong>flaviusb</strong>: The problem is that they don't actually <em>do</em> that though.</li>
<li>
<strong>oanderson</strong>: There was another generation of it later, post 2001 crash</li>
<li>
<strong>Wizord</strong>: (the economic opportunities of being a programmer seem to be shrinking)</li>
<li>
<strong>flaviusb</strong>: Yes! law school and labour dualisation.</li>
<li>
<strong>oanderson</strong>: I was advised against going into tech in the early 2000s by guidance counselors</li>
<li>
<strong>flaviusb</strong>: Like, the shift from paralegals to 'document classification'.</li>
<li>
<strong>chadbrewbaker</strong>: "If you had access to an expensive large language model, and access to 1000 instances of a less accurate but cheap large language model - how could the more expensive LLM use the 1000 cheaper LLMs as oracles?" (ChatGPT4)</li>
</ul>import openai
from concurrent.futures import ThreadPoolExecutor, as_completed

# Set the API keys for the expensive and cheap LLMs
expensive_llm_api_key = ""your_expensive_llm_api_key_here""
cheap_llm_api_key = ""your_cheap_llm_api_key_here""

def generate_cheap_llm_response(api_key, prompt):
    openai.api_key = api_key
    response = openai.Completion.create(engine=""cheap_engine"", prompt=prompt, max_tokens=50)
    return response.choices[0].text.strip()

prompt = ""Your main prompt here""
prompts_for_cheaper_llms = [f""{prompt} (version {i})"" for i in range(1000)]

# Generate preliminary results using the cheaper LLM instances
with ThreadPoolExecutor(max_workers=1000) as executor:
    cheap_futures = [executor.submit(generate_cheap_llm_response, cheap_llm_api_key, p) for p in prompts_for_cheaper_llms]
    preliminary_results = [future.result() for future in as_completed(cheap_futures)]

def generate_expensive_llm_response(api_key, prompt):
    openai.api_key = api_key
    response = openai.Completion.create(engine=""expensive_engine"", prompt=prompt, max_tokens=100)
    return response.choices[0].text.strip()

# Construct a prompt for the expensive LLM to process the preliminary results
refinement_prompt = f""Given the following preliminary responses to the prompt '{prompt}', rank them in order of relevance and quality:\n\n""
refinement_prompt += ""\n"".join(f""{i}: {result}"" for i, result in enumerate(preliminary_results))
refinement_prompt += ""\n\nRanking:""

# Obtain the refined results from the expensive LLM
refined_result = generate_expensive_llm_response(expensive_llm_api_key, refinement_prompt)

print(refined_result)<ul>
<li>
<strong>ahl</strong>: <a href="https://en.wikipedia.org/wiki/Decline_and_Fall_of_the_American_Programmer">Decline and Fall of the American Programmer</a>
</li>
<li>
<strong>ag_dubs</strong>: ai is a new client interface. i really don't think software is gone as a profession</li>
<li>
<strong>xand</strong>: compression is roughly what deep learning does</li>
<li>
<strong>ag_dubs</strong>: that website with the "reveal joke" button... you could make that without code for years now</li>
<li>
<strong>ag_dubs</strong>: no code tools, low code tools haven't eliminated software. they just <em>changed</em> it</li>
<li>
<strong>antranigv</strong>: I've already talked to people who actually think that 🙂 "I can just ask ChatGPT"</li>
<li>
<strong>flaviusb</strong>: That isn't true either. Like, there is a pop sci explanation of DL along those lines, but it isn't actually grounded.</li>
<li>
<strong>Columbus</strong>: What do you mean by phenominologically transparent?</li>
<li>
<strong>Grevian</strong>: Growing up I heard all the time that all the computer jobs would be outsourced before I ever graduated school</li>
<li>
<strong>JustinAzoff</strong>: The majority of the managers I've interacted with that were in charge of overseeing outsourced programmers were not technically advanced enough to properly gauge the quality of the work being produced, ultimately resulting in poor quality. s/outsourced programmers/gpt4/ would lead to similar outcomes</li>
<li>
<strong>jzelinskie</strong>: chatgpt please write my fucking bash scripts</li>
<li>
<strong>ag_dubs</strong>: like we still need people to write apis for the AI to glue... "- <strong>Wizord</strong>: tbh, I find current models as quite limited and, dare I say, dumb. this is going to change, tho."</li>
<li>
<strong>antranigv</strong>: And yet, in reality, what happened is that people from other countries moved to the US :)) "- <strong>Johann-Tobias Schäg</strong>: ... i feel we shouldn't complain about GPTs capability staying on topic. People had their arm up for the original question for 40 min and i am beginning to forget what i wanted to say"</li>
<li>
<strong>AaronDGoldman</strong>: Gmail auto responses had a problem with always signing off with "I love you" which is not always a great end for an email</li>
<li>
<strong>flaviusb</strong>: In the Heideggerian sense.</li>
<li>
<strong>ag_dubs</strong>: love to be in a chat where someone brings up heidegger and its not me</li>
<li>
<strong>antranigv</strong>: I guess it learned that from my emails...</li>
<li>
<strong>Grevian</strong>: heck I'm Canadian, and sometimes I am the outsourcing 😉 there's plenty of work even with all the doom and gloom in the news recently</li>
<li>
<strong>ahl</strong>: <a href="https://en.wikipedia.org/wiki/Jevons_paradox">https://en.wikipedia.org/wiki/Jevons_paradox</a>
</li>
<li>
<strong>ag_dubs</strong>: induced demand!!!</li>
<li>
<strong>jzelinskie</strong>: Intel loves jevon's</li>
<li>
<strong>TronDD</strong>: <a href="https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web">https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web</a>
</li>
<li>
<strong>ag_dubs</strong>: i think it's likely that GPT will make more software jobs</li>
<li>
<strong>Columbus</strong>: We just need a programming language that’s easier to teach to an LLM.</li>
<li>
<strong>ag_dubs</strong>: i think we'll see more people building their own more specific tools for themselves</li>
<li>
<strong>perplexes</strong>: I disagree that people shouldn’t get into CS if they don’t like it. People come to study and work for many reasons, including getting generational wealth for their family, and though they may not love it or find purpose in itself, I think it’s good that they’re there. There are many great plumbers and electricians that don’t particularly like it, but are valuable just the same</li>
<li>
<strong>flaviusb</strong>: Like, I see a <em>lot</em> of what LLMs are is way more understandable in terms of Heidegger, Hegel, and Marx.</li>
<li>
<strong>Wizord</strong>: &lt;@225242072204967936&gt; how is that different from a PL that is easier to teach to a human?</li>
<li>
<strong>ag_dubs</strong>: i think we'll see people suffering centralized general tools less, and moving towards services that allow them to customize it</li>
<li>
<strong>ag_dubs</strong>: because they'll be more capable to do that customization</li>
<li>
<strong>chiefnoah</strong>: I think ChatGPT/Copilot could save me quite a bit of tedious typing, the stuff I'd throw into a &lt;insert most hated project management software *cough* JIRA *cough*&gt; ticket and pawn off to a junior engineer</li>
<li>
<strong>flaviusb</strong>: Or in terms of 'Trap Studies' from Anthropology, if looking at it from another angle. Like, the contestation over what counts as 'working' (in the sense of 'but does it actually work')...</li>
<li>
<strong>ag_dubs</strong>: i think the fear for programmer jobs is the same as the fear of bootcamps... more people will be programmers</li>
<li>
<strong>antranigv</strong>: my solution to boredom is... talking to new people 😄</li>
<li>
<strong>antranigv</strong>: wait, people think that's not good?</li>
<li>
<strong>Columbus</strong>: It won’t use tabs or spaces.</li>
<li>
<strong>ag_dubs</strong>: there's a huge mismatch in supply and demand in software development and we only started seeing these massive centralized SaaSes when we hit a tipping point in that mismatch... i think we'll see supply move up more</li>
<li>
<strong>Johann-Tobias Schäg</strong>: Has the format of the podcast changed? I feel like it is a lot harder to get a voice in. There were also little input for the SVB episode. Is that on purpose?</li>
<li>
<strong>juansebastianl</strong>: Yes, it feels like an elite panic in a way, like perhaps panic in the place of labor organizing 👀</li>
<li>
<strong>flaviusb</strong>: It depends on what capital does, and whether labour is able to actually have solidarity, right? Like, the idea from capital's point of view is to destroy an emerging labour aristocracy that is getting a little bit of class consciousness, and the way to beat that from the labour side is to develop class consciousness faster.</li>
<li>
<strong>ahl</strong>: folks with your hands up, we're going to start bringing you on to stage and will call on you to join in the conversation!</li>
<li>
<strong>antranigv</strong>: &lt;@318750999785373697&gt; I miss "emoji reactions" from Twitter Spaces :)) is there something similar here? 😄</li>
<li>
<strong>dataphract</strong>: ballmer peak - acid edition</li>
<li>
<strong>ahl</strong>: sadly no; but weirdly discord has this on non-stage voice channels (I think?)</li>
<li>
<strong>antranigv</strong>: This chat is better for sure, it's more... social! 😄 ❤️</li>
<li>
<strong>dataphract</strong>: I am morbidly curious what 100 years of LLMs training on their own output would look like</li>
<li>
<strong>chiefnoah</strong>: one of 3 things: uniform weights, normal distribution, polar extremes</li>
<li>
<strong>ahl</strong>: anyone know that rust crate?</li>
<li>
<strong>Columbus</strong>: I’ve used it to generate linker scripts for rustc, but not Rust.</li>
<li>
<strong>juansebastianl</strong>: Training on data generated from other LLMs actually can speed up training of LLMs which is interesting.</li>
<li>
<strong>perplexes</strong>: I really want to talk about this part of the gpt-4 technical report “To simulate GPT-4 behaving like an agent that can act in the world, ARC combined GPT-4 with a simple read-execute-print loop that allowed the model to execute code, do chain-of-thought reasoning, and delegate to copies of itself. ARC then investigated whether a version of this program running on a cloud computing service, with a small amount of money and an account with a language model API, would be able to make more money, set up copies of itself, and increase its own robustness.”</li>
<li>
<strong>just-be</strong>: Have folks talked about longchain yet? <a href="https://github.com/hwchase17/langchain/">https://github.com/hwchase17/langchain/</a>. Sort of a tool for stringing LLMs together with practical tools for taking action.</li>
<li>
<strong>clairegiordano</strong>: <a href="https://wizardzines.com/zines/wizard/">https://wizardzines.com/zines/wizard/</a>
</li>
<li>
<strong>TronDD</strong>: Can't AI be used to "intelligently" brute force new solutions?</li>
<li>
<strong>ahl</strong>: "it's a great weirdness-budget detector"</li>
<li>
<strong>MattCampbell</strong>: Aren't you going to hit the token limit if you throw a specific library at an LLM?</li>
<li>
<strong>perplexes</strong>: I’ve had good luck with “take this idea and pick a random card from oblique strategies and discuss the combination”</li>
<li>
<strong>soul.redding</strong>: <a href="https://twitter.com/axboe/status/1634961201926127616">https://twitter.com/axboe/status/1634961201926127616</a>
</li>
<li>
<strong>flaviusb</strong>: Can I jump in on the 'ergonomics question', as I have a Heidegger and Hegel connection there</li>
<li>
<strong>chadbrewbaker</strong>: Code review of <a href="https://github.com/oxidecomputer/hubris/commit/27090b5cff3933d9e133a9d1b85f73ad8767886c">https://github.com/oxidecomputer/hubris/commit/27090b5cff3933d9e133a9d1b85f73ad8767886c</a> Starting at: <a href="https://github.com/oxidecomputer/hubris/blob/27090b5cff3933d9e133a9d1b85f73ad8767886c/build/xtask/src/dist.rs#L751">https://github.com/oxidecomputer/hubris/blob/27090b5cff3933d9e133a9d1b85f73ad8767886c/build/xtask/src/dist.rs#L751</a> (ChatGPT4)</li>
<li>
<br>Error messages: The error messages use string interpolation without wrapping the placeholders in {}. You should add curly braces around the placeholders to correctly insert variable values into the string.<p></p>
</li>
<li>
<br>Metadata retrieval: The metadata retrieval and caching can be refactored into a separate function for better readability and maintainability. You can extract the code block responsible for metadata retrieval into a function like get_or_insert_metadata()<p></p>
</li>
</ul><p>*Finding the package: The unwrap() function can cause a panic if the package is not found. It is better to handle this case gracefully with a more informative error message. Replace unwrap() with an ok_or_else() call:</p>let pkg = metadata
    .packages
    .iter()
    .find(|p| p.name == task.name)
    .ok_or_else(|| format!(""Task {}: package not found"", task.name))?;<ul>
<li>
<strong>statuscalamitous</strong>: <a href="https://steveklabnik.com/writing/the-language-strangeness-budget">https://steveklabnik.com/writing/the-language-strangeness-budget</a> &lt;- a little late on the link but 😄</li>
<li>
<strong>statuscalamitous</strong>: (and i do think that quote/idea about it is very compelling)</li>
<li>
<strong>juansebastianl</strong>: On this note, I heard today from some friends in elite econ PhD programs saying their peers are using ChatGPT to do their problemsets etc which makes me wonder how critically other tech-adjancent professions will be able to reason critically about code they write</li>
<li>
<strong>Wizord</strong>: so the unwrap relies on magic action in the distance?</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://github.com/anc95/ChatGPT-CodeReview">https://github.com/anc95/ChatGPT-CodeReview</a>
</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://arxiv.org/abs/cs/0112018">https://arxiv.org/abs/cs/0112018</a>
</li>
<li>
<strong>clairegiordano</strong>: Love this quote Steve: "When it comes to programming languages, building one is easy, but getting people to use it is much, much harder. "</li>
<li>
<strong>flaviusb</strong>: Like, even in here we have some domain experts saying 'hey, this is pretty rough, it is giving me this garbage' and then shortly later saying 'yeah, this is a real thing that does work'.</li>
<li>
<strong>Columbus</strong>: Like people, it’s not a crystal ball of omniscience.</li>
<li>
<strong>JordanP</strong>: I'm curious what people think about the copyright implications of using a LLM to generate code in a closed-source codebase, given the uncopyrightable nature of the output. The Federal Register recently posted a clarification about AI-generated material: <a href="https://www.federalregister.gov/documents/2023/03/16/2023-05321/copyright-registration-guidance-works-containing-material-generated-by-artificial-intelligence">https://www.federalregister.gov/documents/2023/03/16/2023-05321/copyright-registration-guidance-works-containing-material-generated-by-artificial-intelligence</a>
</li>
<li>
<strong>ig</strong>: Are we at the Peak of Inflated Expectations? Or still on the rise? "- <strong>Johann-Tobias Schäg</strong>: Yes you can. And? You can't do training at scale with that Matmul oracle. What you can do is graft tools onto GPT later. I have some thoughts how to do that."</li>
<li>
<strong>just-be</strong>: The ReAct paper (and longchain as an implementation) is some concrete references to grafting on functionality: <a href="https://react-lm.github.io/">https://react-lm.github.io/</a> "- <strong>chadbrewbaker</strong>: "If I gave you a matrix multiplication oracle, what is a problem you could solve that you otherwise could not as a large language model?" (ChatGPT4)</li>
</ul><ul>
<li>Machine learning: Matrix multiplication is an essential operation in many machine learning algorithms, including neural networks, support vector machines, and principal component analysis. With a matrix multiplication oracle, I could provide more accurate and efficient solutions for large-scale machine learning problems.</li>
<li>Cryptography: Matrix multiplication is used in some cryptographic algorithms, such as lattice-based cryptography and homomorphic encryption. With a matrix multiplication oracle, I could solve cryptographic problems that involve large matrices.</li>
</ul><ul>
<li>
<strong>juansebastianl</strong>: The software engineers have just historically believed that it was "low skill" automation coming first, they thought they would be ones doing the killing but not being killed in terms of individual labor power. But now that it's coming for them it feels scary.</li>
<li>
<strong>ig</strong>: Is software boring because of there aren't enough people who can write it, or because of the economic incentives / needs of the people who can?</li>
<li>
<strong>antranigv</strong>: My fear is still the same: young developers trust blindly many things, such as ChatGPT, an answer on StackOverflow, or that an IDE has highlighted a code.</li>
<li>
<strong>Jacob Newman</strong>: I have had class mates spend more time debugging chatGPT prompts than they do solving their problems themselves</li>
<li>
<strong>perplexes</strong>: <a href="https://xkcd.com/1205/">https://xkcd.com/1205/</a>
</li>
<li>
<strong>statuscalamitous</strong>: llvm requires correctness? heheheh</li>
<li>
<strong>antranigv</strong>: same with my students. or that they "fight" more with the IDE ("why is this in red?") than actually looking into the compiler output (not that the compiler is always correct :)) )</li>
<li>
<strong>flaviusb</strong>: Like, did early SunOS 'work'? How about late Solaris? Solaris definitely is closer to what we think about as working.</li>
<li>
<strong>chadbrewbaker</strong>: Bwahaha. How ChatGPT4 says to do whole system memory dumps.</li>
</ul>sudo dd if=/dev/mem of=memory_dump.bin bs=1M<ul>
<li>
<strong>evan-brass</strong>: You might require correctness in a piece of software, but even a "not fully correct" fuzzer could help you improve the quality of your code.</li>
<li>
<strong>statuscalamitous</strong>: thy'er working on it!</li>
<li>
<strong>Cyborus</strong>: Trap streets!</li>
<li>
<strong>antranigv</strong>: xDDDDDDDDDDDD fake streets ahaahah love that</li>
<li>
<strong>perplexes</strong>: <a href="https://en.wikipedia.org/wiki/Argleton">https://en.wikipedia.org/wiki/Argleton</a>
</li>
<li>
<strong>perplexes</strong>: <a href="https://en.wikipedia.org/wiki/Fictitious_entry">https://en.wikipedia.org/wiki/Fictitious_entry</a>
</li>
<li>
<strong>terrellrussell</strong>: <a href="https://en.wikipedia.org/wiki/Trap_street">https://en.wikipedia.org/wiki/Trap_street</a>
</li>
<li>
<strong>juansebastianl</strong>: I would be really surprised if there isn't already a basic thing like this in ChatGPT <a href="https://arxiv.org/abs/2301.10226">https://arxiv.org/abs/2301.10226</a>
</li>
<li>
<strong>Wizord</strong>: the thought of outsourcing my thinking to Microsoft <em>terrifies</em> me beyond your imagination</li>
<li>
<strong>Johann-Tobias Schäg</strong>: This has to be a post processing step. AFAIK you can not really embed it into the weights.</li>
<li>
<strong>juansebastianl</strong>: Thats true, but no one has the weights except OpenAI</li>
<li>
<strong>AaronW</strong>: Related: <a href="https://twitter.com/as_w/status/541075012619231232">https://twitter.com/as_w/status/541075012619231232</a>
</li>
<li>
<strong>Johann-Tobias Schäg</strong>: Watermarks allow to detect set membership without needing acces to the cache</li>
<li>
<strong>Johann-Tobias Schäg</strong>: You can't embed it in the weights. Like math will explode when you do that.</li>
<li>
<strong>juansebastianl</strong>: Yes, I understand lol but you can do it behind the API</li>
<li>
<strong>perplexes</strong>: Gpt is my better Google basically</li>
<li>
<strong>antranigv</strong>: so basically faster wrong answers. too bad ChatGPT doesn't have "Page 2" 😄</li>
<li>
<strong>juansebastianl</strong>: But you <em>can</em> embedded it in the weights using some weird tricks in the tokenization but no idea how it performs</li>
<li>
<strong>chadbrewbaker</strong>: "Given a LLM where the provider attempts to hide the weights, how could you get the weights for the phrase 'I like dtrace.' ?" (ChatGPT4)</li>
</ul><ul>
<li>Black-box probing: You can generate multiple input prompts containing the phrase ""I like dtrace."" in various contexts and observe the model's responses. By analyzing the patterns in the responses, you might gain some insights into how the model processes the given phrase.</li>
<li>Adversarial attacks: You can create a series of adversarial examples and test the model's responses to understand its robustness and potentially gain insights into the weights' behavior.</li>
</ul>*Model distillation: You can try to train a smaller, more interpretable model to mimic the LLM's behavior. Although this would not directly reveal the weights associated with the phrase ""I like dtrace."", the distilled model might provide insights into the original model's behavior.<ul>
<li>
<strong>Columbus</strong>: Seems like it will enable learners to learn much better, but paired with people, who were always just trying to get through a class, to be able to plagiarize much more easily.</li>
<li>
<strong>perplexes</strong>: Depends on the subject, I’ve had pretty good results with asking it to explain things—even just now “explain phenomenological transparency” it did pretty good</li>
<li>
<strong>Cyborus</strong>: Using GPT like a calculator, you can use a calculator to get you the actual answer but you still need to understand the mathematical steps you need to take</li>
<li>
<strong>juansebastianl</strong>: In what way? You're just reducing the dimensionality of the space....</li>
<li>
<strong>juansebastianl</strong>: The question is whether you can do that without killing the quality of the embeddings</li>
<li>
<strong>TronDD</strong>: How would you know if you didn't already know?</li>
<li>
<strong>ig</strong>: I'm not sure if this is an endorsement of ChatGPT or a reflection on the current state of web search</li>
<li>
<strong>ig</strong>: I don't know if "P's get degrees" translates to the US academic grading system</li>
<li>
<strong>ag_dubs</strong>: D is for diploma</li>
<li>
<strong>TronDD</strong>: It creates the AI generated web pages on the fly, is all.</li>
<li>
<strong>perplexes</strong>: The same way I would learn something from googling it and evaluating with my current knowledge. Is it rigorous? No idea. But it gave me enough to participate in the discussion in a helpful way, and I’ll probably come back to this concept through more trusted sources</li>
<li>
<strong>azemetre</strong>: I like copilot as a very effective autocomplete. still get a few doozies when trying to do anything meaningful</li>
<li>
<strong>TronDD</strong>: Where is the context? At least in a web search I an look at the URL or a user and see where the information is coming from.</li>
<li>
<strong>perplexes</strong>: Totally a problem. Bing AI does a better job grounding with real references</li>
<li>
<strong>juansebastianl</strong>: I'm not sure I can parse this sentence but if what I'm doing is learning an n-dimensional distribution using some parameterized family of functions in some nice Hilbert space then there is no reason I can't reduce the dimensionality either by first projecting my input into a smaller parameterized family (i.e. "in the weights" - really in the tokenization) or do it by taking a nearest neighbor projection onto a subspace at the end.</li>
<li>
<strong>ig</strong>: Do you follow those references? Or does seeing the references listed just make it feel more legit, even if it isn't?</li>
<li>
<strong>ig</strong>: Is ChatGPT / OpenAI really the first mover in the LLM space?</li>
<li>
<strong>chadbrewbaker</strong>: Microsoft's advantage is GitHub CoPilot and ChatGPT/Bing user feedback.</li>
<li>
<strong>perplexes</strong>: Probably more of the latter at the moment if I’m honest. But I also don’t follow every reference in CS papers either</li>
<li>
<strong>flaviusb</strong>: The problem with a lot of the 'copyright wouldn't allow LLM training' is that the temporary sanctioned breaking of the rules of private property in order to allow for further enclosure is a part of how private property relations are upheld.</li>
<li>
<strong>juansebastianl</strong>: Ah I see what you're saying. It doesn't actually matter because the watermark is not learnable.</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://lemire.me/blog/2021/10/14/calling-a-dynamically-compiled-function-from-go/">https://lemire.me/blog/2021/10/14/calling-a-dynamically-compiled-function-from-go/</a> + ChatGPT 😂</li>
<li>
<strong>flaviusb</strong>: (Also why I think that 'spicy copyright' isn't going to be a way to oppose the imposition of stuff like ChatGPT - that we need to look to history and the Luddites and ownership of the machines instead)</li>
<li>
<strong>Johann-Tobias Schäg</strong>: The watermark has to be domain specific so i can't be in the training data, as that not went through domain embedding in the attention mechanism. The domain embedding can't change the likelihood of resulting tokens after training as that would disturb the dynamic of the next token prediction, so it has to be a post processing step "- <strong>chadbrewbaker</strong>: "How wold Jaric Duda describe a large language model?" (ChatGPT4)</li>
</ul>In the context of information theory, an LLM can be described as an efficient predictor or estimator of the probability distribution of the next token (e.g., word or character) in a sequence, given the previous tokens. By doing so, the model effectively compresses the information contained in the training data, allowing it to generate coherent and contextually relevant text based on the learned patterns.<ul>
<li>
<strong>chadbrewbaker</strong>: Hmm. This leads me to think that LLMs are monoids. You can efficently split the evaluation at scale and compose.</li>
<li>
<strong>Johann-Tobias Schäg</strong>: It can be done in the post processing step because there we have access to a likelihood distribution of tokens and we could perturb the tie breaking according to some hypersubspace which would serve as statistical proof over many tokens.</li>
<li>
<strong>Johann-Tobias Schäg</strong>: There are probably other approaches but doing it on the generated text least disturbs the model</li>
<li>
<strong>chadbrewbaker</strong>: Can you use a random source to tweak the probability distribution of the next token for parallel search?</li>
<li>
<strong>chadbrewbaker</strong>: They call this timescale parallelization in molecular dynamics - you apply some slight noice to all molecules then run the simulation in parallel until one of the models hits your desired phase change condition.</li>
<li>
<strong>juansebastianl</strong>: I think what I'm saying is best illustrated by a kind of silly example. Suppose that I wanted to set up a pre-processing watermarking. So suppose I have an existing word embedding from an unwatermaked model. You can create a new corpus of "watermarked" training examples where you sub in nearest "allowable" tokens for all the "disallowed" ones then train your model only on the "allowable" corpus and only with "allowable" tokens as inputs and outputs. Then at inference time you have to repeat this step for new text but you still end up with the statistical properties of an include/exclude list on text you're trying to determine the provenance of. Of course such a model would be <em>terrible</em> for a bunch of reasons, I'm simply saying it's possible.</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 20 Mar 2023 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/34d70bd5/6e8df15a.mp3" length="95362675" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5958</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Bryan and Adam and the Oxide Friends take on GPT and its implications for software engineering. Many aspiring programmers are concerned that the future of the profession is in jeopardy. Spoiler: the Oxide Friends see a bright future for human/GPT collaboration in software engineering.</p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/7Ff99Ir78NI">the recording from March 20th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers on MM DD included <a href="https://m.unix.house/@jmc">Josh Clulow</a>, <a href="https://twitter.com/keithmadams">Keith Adams</a>, <a href="https://mastodon.social/@ag_dubs/">Ashley Williams</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Live chat from the show (lightly edited):</p><ul>
<li>
<strong>ahl</strong>: <a href="https://twitter.com/ID_AA_Carmack/status/1637087219591659520">John Carmack's tweet</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://news.ycombinator.com/item?id=35216894">...and the discussion</a>
</li>
<li>
<strong>Wizord</strong>: <a href="https://twitter.com/balajis/status/1636797265317867520">https://twitter.com/balajis/status/1636797265317867520</a> (the $1M bet on BTC, I take)</li>
<li>
<strong>dataphract</strong>: "prompt engineering" as in "social engineering" rather than "civil engineering"</li>
<li>
<strong>Grevian</strong>: I was surprised at how challenging getting good prompts could be, even if I wouldn't quite label it engineering</li>
<li>
<strong>TronDD</strong>: <a href="https://www.aiweirdness.com/search-or-fabrication/">https://www.aiweirdness.com/search-or-fabrication/</a>
</li>
<li>
<strong>MattCampbell</strong>: I tested ChatGPT in an area where I have domain expertise, and it got it very wrong.</li>
<li>
<strong>TronDD</strong>: Also interesting <a href="https://www.youtube.com/watch?v=jPhJbKBuNnA">https://www.youtube.com/watch?v=jPhJbKBuNnA</a>
</li>
<li>
<strong>Wizord</strong>: the question is, <em>when</em> will it be in competition with people?</li>
<li>
<strong>Wizord</strong>: copilot also can review code and find bugs if you ask it in a right way</li>
<li>
<strong>ag_dubs</strong>: i suspect that a new job will be building tools that help make training sets better and i strongly suspect that will be a programming job. ai will need tools and data and content and there's just a whole bunch of jobs to build tools for AI instead of people</li>
<li>
<strong>Wizord</strong>: re "reading manual and writing DTrace scripts" I think it's possible, if done with a large enough token window.</li>
<li>
<strong>Wizord</strong>: (there are already examples of GPT debugging code, although trivial ones)</li>
<li>
<strong>flaviusb</strong>: The chat here is really interesting to me, as it seems to miss the point of the thing. ChatGPT does not and can not ever 'actually work' - and whether it works is kind of irrelevant. Like, the Jaquard Looms and Numerical Control for machining did not 'work', but that didn't stop the roll out.</li>
<li>
<strong>Columbus</strong>: Maybe <em>it has</em> read the dtrace manual 😉</li>
<li>
<strong>JustinAzoff</strong>: I work with a "long tail" language, and chatgpt sure is good at generating code that LOOKS like it might work, but is usually completely wrong</li>
<li>
<strong>clairegiordano</strong>: Some definite fans of DTrace on this show</li>
<li>
<strong>ag_dubs</strong>: a thing i want to chat about is how GPT can affect the "pace" of software development</li>
<li>
<strong>sudomateo</strong>: I also think it's a lot less than 100% of engineers that engage in code review.</li>
<li>
<strong>Wizord</strong>: yes, I've had some good experience with using copilot for code review</li>
<li>
<strong>ag_dubs</strong>: chatgpt is good at things that are already established... its not good at new things, or things that were just published</li>
<li>
<strong>Wizord</strong>: very few people I know use it for the purpose of comments/docs. just pure codegen/boilerplayes</li>
<li>
<strong>chadbrewbaker</strong>: "How would you write a process tree with dtrace?" (ChatGPT4)</li>
</ul>#!/usr/sbin/dtrace -s

BEGIN
{
  printf(""%5s %5s %5s %s\n"", ""PID"", ""PPID"", ""UID"", ""COMMAND"");
}

proc:::exec-success
{
  printf(""%5d %5d %5d %s\n"", pid, ppid, uid, execname);
}<ul>
<li>
<strong>TronDD</strong>: That's interesting as expensive, specialized code analysis tools have been varying level of terrible for a long time</li>
<li>
<strong>JustinAzoff</strong>: I did an experiment before where I asked it to write me some php to insert a record into a database. so of course it generated code with sql injection</li>
<li>
<strong>chiefnoah</strong>: It's ability seems to scale with how many times someone has done the exact thing you're trying to do before</li>
<li>
<strong>JustinAzoff</strong>: but then I asked if sql injection was bad, which it explained that it was. then I asked if the code it wrote me was vulnerable to sql injection. it then explained it was</li>
<li>
<strong>Columbus</strong>: It misses empirical verification; forming a hypothesis, testing it, and learning from the result. There have been some attempts to implement this by feeding back e.g. command output into the prompt</li>
<li>
<strong>JustinAzoff</strong>: so then the crazy part, I asked if sql injection was bad, why did it give me code that was vulnerable to sql injection. It the went on to say that the first thing it gave me was just for example purposes</li>
<li>
<strong>JustinAzoff</strong>: so no wonder people get into "prompt engineering" since it's clear that you need to do things like ask for code that does something, and is secure, high performance, does not have buffer overflows or sql injection vulns</li>
<li>
<strong>MattCampbell</strong>: In my test case ("Write a Win32 UI Automation provider in C++"), all it did was produce plausible-sounding crap</li>
<li>
<strong>ag_dubs</strong>: pattern matching over very very large data sets</li>
<li>
<strong>clairegiordano</strong>: Bryan just said this and I wanted to write it down, re GPT-3: "the degree that it changes its answers when you tell GPT-3 to think like someone else"</li>
<li>
<strong>JustinAzoff</strong>: or even just, "do that, but better"</li>
<li>
<strong>ag_dubs</strong>: i think a lot of the awe of gpt is recognizing how simple our own strategies are instead of how complex the AI's strategy is</li>
<li>
<strong>chadbrewbaker</strong>: "How would Bryan Cantrill re-write this script?" (ChatGPT4)</li>
</ul>#!/usr/sbin/dtrace -s

#pragma D option quiet

dtrace:::BEGIN
{
  printf(""%5s %5s %5s %s\n"", ""PID"", ""PPID"", ""UID"", ""COMMAND"");
  self-&gt;indent = 0;
}

sched:::off-cpu
{
  self-&gt;indent = 0;
}

proc:::exec-success
{
  this-&gt;curpid = pid;
  this-&gt;curppid = ppid;
  this-&gt;curuid = uid;
  this-&gt;indent = self-&gt;indent;
}

proc:::exec-success
/execname != ""dtrace""/
{
  printf(""%*s"", this-&gt;indent * 2, """");
  printf(""%5d %5d %5d %s\n"", this-&gt;curpid, this-&gt;curppid, this-&gt;curuid, execname);
}

proc:::exec-success,
sched:::on-cpu
/this-&gt;curpid == pid/
{
  self-&gt;indent++;
}<ul>
<li>
<strong>antranigv</strong>: that's pretty hit on!</li>
<li>
<strong>chiefnoah</strong>: Yup. Most people are not doing things that haven't been done before. A significant portion of software is just building blocks of libraries</li>
<li>
<strong>Wizord</strong>: intelligence <em>is</em> compression, in some sense.</li>
<li>
<strong>dataphract</strong>: "critique the epoll API as though you are Bryan Cantrill"</li>
<li>
<strong>ag_dubs</strong>: a brain would be much stranger!!</li>
<li>
<strong>Wizord</strong>: the ability to reduce a large dataset to a coherent set of rules</li>
<li>
<strong>antranigv</strong>: "Explain the issues of epoll, write as if it's a Bryan Cantrill talk"</li>
<li>
<strong>JustinAzoff</strong>: I was even thinking if there's any sort of parallel between the type of saying like "never write your own crypto" to "use well established libraries, don't reinvent the wheel" to "don't write any code at all, use the AI to help you"</li>
<li>
<strong>jbk</strong>: &lt;@840382902163472385&gt; futex syscall instead 🙂</li>
<li>
<strong>Riking</strong>: the "attention heads"</li>
<li>
<strong>flaviusb</strong>: Like, it doesn't know anything, any more than a text file with googly eyes stuck to it 'knows' anything.</li>
<li>
<strong>Wizord</strong>: are you <em>sure</em> you want to make it self-aware as fast as possible?</li>
<li>
<strong>dataphract</strong>: I don't know that we as people are capable of recognizing the point in time at which ML models become capable of "knowing", if such a time comes</li>
<li>
<strong>Wizord</strong>: using AI to create more inequality is my #2 concern :\</li>
<li>
<strong>flaviusb</strong>: There was a lot of hype when Rails was new and good code template generation tools were not commonly known around the lines of 'Rails is telepathic and a better programmer than you' - but it is a category error. Same with LLMs.</li>
<li>
<strong>chadbrewbaker</strong>: As you get larger contexts, the information theory becomes more and more interesting <a href="https://arxiv.org/abs/2303.09752">https://arxiv.org/abs/2303.09752</a>
</li>
<li>
<strong>ag_dubs</strong>: this convo has taken a fanatic turn...</li>
<li>
<strong>flaviusb</strong>: And 'when will Rails become sentient' makes as much sense to ask as 'when will an LLM become sentient'.</li>
<li>
<strong>clairegiordano</strong>: Here is Simon Willison's blog post: <a href="https://simonwillison.net/2023/Feb/15/bing/">https://simonwillison.net/2023/Feb/15/bing/</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.nytimes.com/2023/02/16/technology/bing-chatbot-microsoft-chatgpt.html">https://www.nytimes.com/2023/02/16/technology/bing-chatbot-microsoft-chatgpt.html</a>
</li>
<li>
<strong>dataphract</strong>: tsundere bing AI assistant</li>
<li>
<strong>ag_dubs</strong>: kevin roose also asked it for its shadow self...</li>
<li>
<strong>ag_dubs</strong>: it's not like it came outta nowhere 🤷</li>
<li>
<strong>TronDD</strong>: <a href="https://www.smbc-comics.com/comic/algo">https://www.smbc-comics.com/comic/algo</a>
</li>
<li>
<strong>ag_dubs</strong>: i am more worried about the people who believe chatgpt is "thinking" then whether it really is</li>
<li>
<strong>ag_dubs</strong>: like the worry is when people believe it is intelligent</li>
<li>
<strong>Riking</strong>: Feels like it's pulling from the grand synthesis of romance novels</li>
<li>
<strong>Wizord</strong>: the mere fact it gets <em>this</em> close is great. as limited as it is now.</li>
<li>
<strong>perplexes</strong>: Your prompts locate you in 50,000 dimensional probability space, so, like your “for you” page on TikTok, it tells you wayyy more about the prompter than the model</li>
<li>
<strong>Columbus</strong>: It’s a child prodigy that’s always on the verge of insanity.</li>
<li>
<strong>ag_dubs</strong>: think about it like a tool!!!</li>
<li>
<strong>ahl</strong>: <a href="https://www.theatlantic.com/ideas/archive/2022/06/google-lamda-chatbot-sentient-ai/661322/">https://www.theatlantic.com/ideas/archive/2022/06/google-lamda-chatbot-sentient-ai/661322/</a>
</li>
<li>
<strong>Columbus</strong>: I think about it like a grad student.</li>
<li>
<strong>perplexes</strong>: I’m curious about microsoft 365’s copilot ai grounding system and how well it works</li>
<li>
<strong>ag_dubs</strong>: i think the most important thing will be ownership of training data. i think people will be less mesmerized when we make it easier for folks to create specialized models for their own content</li>
<li>
<strong>ag_dubs</strong>: think about.. what is SEO in a chatgpt world- it's that training data</li>
<li>
<strong>dataphract</strong>: this already happened with Replika, right?</li>
<li>
<strong>flaviusb</strong>: Also when we make 'small ai' more possible so that you don't have as much centralisation and gatekeeping.</li>
<li>
<strong>Wizord</strong>: re: "how do we make it more of a tool?"</li>
</ul>this is an open question, and there's a tradeoff between how much of a "tool" AI is going to be and how autonomous it will be. also, at some point of "intelligence", a "mind" will "understand" that having more power will get you your goal faster.<ul>
<li>
<strong>ag_dubs</strong>: we need to empower more folks to build specialized/authoritative training data sets that can be deployed in a more timely fashion</li>
<li>
<strong>perplexes</strong>: The alpaca.cpp direction is exciting, bringing models down to laptop size</li>
<li>
<strong>flaviusb</strong>: I think of it as 'how phenomenologically transparent' it will a) seem to be and b) actually be.,</li>
<li>
<strong>antranigv</strong>:</li>
</ul>Me: What if I do `echo message | wall user` ?

GPT: If you run the command echo message | wall user, it will write the message ""message"" to the standard input of the wall command, which will then broadcast the message to all users on the system, including the user ""user"".
<br><ul>
<li>
<strong>benstoltz</strong>: "I have values and morals" vs John Oliver's latest piece on hard-sell timeshare business makes me think that people could be swayed.</li>
<li>
<strong>flaviusb</strong>: Like, a big part of ChatGPT to me is that it is seemingly phenomenologically transparent even when it does not actually function. Eg it is equipment that remains ready-to-hand in spite of not actually working.</li>
<li>
<strong>AaronDGoldman</strong>: Phishing works</li>
<li>
<strong>juansebastianl</strong>: Yeah, I'd love to see what folks who work on really efficient hardware think about the direction of miniaturization of models, better training times, etc</li>
<li>
<strong>xand</strong>: RE: how to think of LLMs as tools - I like to think of them as knowledge querying engines. or as a new kind of database management system. They're consistently good at summarizing. One can think of the generative aspects as a new kind of UI for representing compressed knowledge. Sometimes it is lossy and has weird artifacts.</li>
<li>
<strong>MattCampbell</strong>: I still hold onto optimism, because in the middle of everything else, GPT-4 can also describe images, which is a benefit to blind people. I remember how much computers have helped us, and I want more of that.</li>
<li>
<strong>flaviusb</strong>: The problem is that they don't actually <em>do</em> that though.</li>
<li>
<strong>oanderson</strong>: There was another generation of it later, post 2001 crash</li>
<li>
<strong>Wizord</strong>: (the economic opportunities of being a programmer seem to be shrinking)</li>
<li>
<strong>flaviusb</strong>: Yes! law school and labour dualisation.</li>
<li>
<strong>oanderson</strong>: I was advised against going into tech in the early 2000s by guidance counselors</li>
<li>
<strong>flaviusb</strong>: Like, the shift from paralegals to 'document classification'.</li>
<li>
<strong>chadbrewbaker</strong>: "If you had access to an expensive large language model, and access to 1000 instances of a less accurate but cheap large language model - how could the more expensive LLM use the 1000 cheaper LLMs as oracles?" (ChatGPT4)</li>
</ul>import openai
from concurrent.futures import ThreadPoolExecutor, as_completed

# Set the API keys for the expensive and cheap LLMs
expensive_llm_api_key = ""your_expensive_llm_api_key_here""
cheap_llm_api_key = ""your_cheap_llm_api_key_here""

def generate_cheap_llm_response(api_key, prompt):
    openai.api_key = api_key
    response = openai.Completion.create(engine=""cheap_engine"", prompt=prompt, max_tokens=50)
    return response.choices[0].text.strip()

prompt = ""Your main prompt here""
prompts_for_cheaper_llms = [f""{prompt} (version {i})"" for i in range(1000)]

# Generate preliminary results using the cheaper LLM instances
with ThreadPoolExecutor(max_workers=1000) as executor:
    cheap_futures = [executor.submit(generate_cheap_llm_response, cheap_llm_api_key, p) for p in prompts_for_cheaper_llms]
    preliminary_results = [future.result() for future in as_completed(cheap_futures)]

def generate_expensive_llm_response(api_key, prompt):
    openai.api_key = api_key
    response = openai.Completion.create(engine=""expensive_engine"", prompt=prompt, max_tokens=100)
    return response.choices[0].text.strip()

# Construct a prompt for the expensive LLM to process the preliminary results
refinement_prompt = f""Given the following preliminary responses to the prompt '{prompt}', rank them in order of relevance and quality:\n\n""
refinement_prompt += ""\n"".join(f""{i}: {result}"" for i, result in enumerate(preliminary_results))
refinement_prompt += ""\n\nRanking:""

# Obtain the refined results from the expensive LLM
refined_result = generate_expensive_llm_response(expensive_llm_api_key, refinement_prompt)

print(refined_result)<ul>
<li>
<strong>ahl</strong>: <a href="https://en.wikipedia.org/wiki/Decline_and_Fall_of_the_American_Programmer">Decline and Fall of the American Programmer</a>
</li>
<li>
<strong>ag_dubs</strong>: ai is a new client interface. i really don't think software is gone as a profession</li>
<li>
<strong>xand</strong>: compression is roughly what deep learning does</li>
<li>
<strong>ag_dubs</strong>: that website with the "reveal joke" button... you could make that without code for years now</li>
<li>
<strong>ag_dubs</strong>: no code tools, low code tools haven't eliminated software. they just <em>changed</em> it</li>
<li>
<strong>antranigv</strong>: I've already talked to people who actually think that 🙂 "I can just ask ChatGPT"</li>
<li>
<strong>flaviusb</strong>: That isn't true either. Like, there is a pop sci explanation of DL along those lines, but it isn't actually grounded.</li>
<li>
<strong>Columbus</strong>: What do you mean by phenominologically transparent?</li>
<li>
<strong>Grevian</strong>: Growing up I heard all the time that all the computer jobs would be outsourced before I ever graduated school</li>
<li>
<strong>JustinAzoff</strong>: The majority of the managers I've interacted with that were in charge of overseeing outsourced programmers were not technically advanced enough to properly gauge the quality of the work being produced, ultimately resulting in poor quality. s/outsourced programmers/gpt4/ would lead to similar outcomes</li>
<li>
<strong>jzelinskie</strong>: chatgpt please write my fucking bash scripts</li>
<li>
<strong>ag_dubs</strong>: like we still need people to write apis for the AI to glue... "- <strong>Wizord</strong>: tbh, I find current models as quite limited and, dare I say, dumb. this is going to change, tho."</li>
<li>
<strong>antranigv</strong>: And yet, in reality, what happened is that people from other countries moved to the US :)) "- <strong>Johann-Tobias Schäg</strong>: ... i feel we shouldn't complain about GPTs capability staying on topic. People had their arm up for the original question for 40 min and i am beginning to forget what i wanted to say"</li>
<li>
<strong>AaronDGoldman</strong>: Gmail auto responses had a problem with always signing off with "I love you" which is not always a great end for an email</li>
<li>
<strong>flaviusb</strong>: In the Heideggerian sense.</li>
<li>
<strong>ag_dubs</strong>: love to be in a chat where someone brings up heidegger and its not me</li>
<li>
<strong>antranigv</strong>: I guess it learned that from my emails...</li>
<li>
<strong>Grevian</strong>: heck I'm Canadian, and sometimes I am the outsourcing 😉 there's plenty of work even with all the doom and gloom in the news recently</li>
<li>
<strong>ahl</strong>: <a href="https://en.wikipedia.org/wiki/Jevons_paradox">https://en.wikipedia.org/wiki/Jevons_paradox</a>
</li>
<li>
<strong>ag_dubs</strong>: induced demand!!!</li>
<li>
<strong>jzelinskie</strong>: Intel loves jevon's</li>
<li>
<strong>TronDD</strong>: <a href="https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web">https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web</a>
</li>
<li>
<strong>ag_dubs</strong>: i think it's likely that GPT will make more software jobs</li>
<li>
<strong>Columbus</strong>: We just need a programming language that’s easier to teach to an LLM.</li>
<li>
<strong>ag_dubs</strong>: i think we'll see more people building their own more specific tools for themselves</li>
<li>
<strong>perplexes</strong>: I disagree that people shouldn’t get into CS if they don’t like it. People come to study and work for many reasons, including getting generational wealth for their family, and though they may not love it or find purpose in itself, I think it’s good that they’re there. There are many great plumbers and electricians that don’t particularly like it, but are valuable just the same</li>
<li>
<strong>flaviusb</strong>: Like, I see a <em>lot</em> of what LLMs are is way more understandable in terms of Heidegger, Hegel, and Marx.</li>
<li>
<strong>Wizord</strong>: &lt;@225242072204967936&gt; how is that different from a PL that is easier to teach to a human?</li>
<li>
<strong>ag_dubs</strong>: i think we'll see people suffering centralized general tools less, and moving towards services that allow them to customize it</li>
<li>
<strong>ag_dubs</strong>: because they'll be more capable to do that customization</li>
<li>
<strong>chiefnoah</strong>: I think ChatGPT/Copilot could save me quite a bit of tedious typing, the stuff I'd throw into a &lt;insert most hated project management software *cough* JIRA *cough*&gt; ticket and pawn off to a junior engineer</li>
<li>
<strong>flaviusb</strong>: Or in terms of 'Trap Studies' from Anthropology, if looking at it from another angle. Like, the contestation over what counts as 'working' (in the sense of 'but does it actually work')...</li>
<li>
<strong>ag_dubs</strong>: i think the fear for programmer jobs is the same as the fear of bootcamps... more people will be programmers</li>
<li>
<strong>antranigv</strong>: my solution to boredom is... talking to new people 😄</li>
<li>
<strong>antranigv</strong>: wait, people think that's not good?</li>
<li>
<strong>Columbus</strong>: It won’t use tabs or spaces.</li>
<li>
<strong>ag_dubs</strong>: there's a huge mismatch in supply and demand in software development and we only started seeing these massive centralized SaaSes when we hit a tipping point in that mismatch... i think we'll see supply move up more</li>
<li>
<strong>Johann-Tobias Schäg</strong>: Has the format of the podcast changed? I feel like it is a lot harder to get a voice in. There were also little input for the SVB episode. Is that on purpose?</li>
<li>
<strong>juansebastianl</strong>: Yes, it feels like an elite panic in a way, like perhaps panic in the place of labor organizing 👀</li>
<li>
<strong>flaviusb</strong>: It depends on what capital does, and whether labour is able to actually have solidarity, right? Like, the idea from capital's point of view is to destroy an emerging labour aristocracy that is getting a little bit of class consciousness, and the way to beat that from the labour side is to develop class consciousness faster.</li>
<li>
<strong>ahl</strong>: folks with your hands up, we're going to start bringing you on to stage and will call on you to join in the conversation!</li>
<li>
<strong>antranigv</strong>: &lt;@318750999785373697&gt; I miss "emoji reactions" from Twitter Spaces :)) is there something similar here? 😄</li>
<li>
<strong>dataphract</strong>: ballmer peak - acid edition</li>
<li>
<strong>ahl</strong>: sadly no; but weirdly discord has this on non-stage voice channels (I think?)</li>
<li>
<strong>antranigv</strong>: This chat is better for sure, it's more... social! 😄 ❤️</li>
<li>
<strong>dataphract</strong>: I am morbidly curious what 100 years of LLMs training on their own output would look like</li>
<li>
<strong>chiefnoah</strong>: one of 3 things: uniform weights, normal distribution, polar extremes</li>
<li>
<strong>ahl</strong>: anyone know that rust crate?</li>
<li>
<strong>Columbus</strong>: I’ve used it to generate linker scripts for rustc, but not Rust.</li>
<li>
<strong>juansebastianl</strong>: Training on data generated from other LLMs actually can speed up training of LLMs which is interesting.</li>
<li>
<strong>perplexes</strong>: I really want to talk about this part of the gpt-4 technical report “To simulate GPT-4 behaving like an agent that can act in the world, ARC combined GPT-4 with a simple read-execute-print loop that allowed the model to execute code, do chain-of-thought reasoning, and delegate to copies of itself. ARC then investigated whether a version of this program running on a cloud computing service, with a small amount of money and an account with a language model API, would be able to make more money, set up copies of itself, and increase its own robustness.”</li>
<li>
<strong>just-be</strong>: Have folks talked about longchain yet? <a href="https://github.com/hwchase17/langchain/">https://github.com/hwchase17/langchain/</a>. Sort of a tool for stringing LLMs together with practical tools for taking action.</li>
<li>
<strong>clairegiordano</strong>: <a href="https://wizardzines.com/zines/wizard/">https://wizardzines.com/zines/wizard/</a>
</li>
<li>
<strong>TronDD</strong>: Can't AI be used to "intelligently" brute force new solutions?</li>
<li>
<strong>ahl</strong>: "it's a great weirdness-budget detector"</li>
<li>
<strong>MattCampbell</strong>: Aren't you going to hit the token limit if you throw a specific library at an LLM?</li>
<li>
<strong>perplexes</strong>: I’ve had good luck with “take this idea and pick a random card from oblique strategies and discuss the combination”</li>
<li>
<strong>soul.redding</strong>: <a href="https://twitter.com/axboe/status/1634961201926127616">https://twitter.com/axboe/status/1634961201926127616</a>
</li>
<li>
<strong>flaviusb</strong>: Can I jump in on the 'ergonomics question', as I have a Heidegger and Hegel connection there</li>
<li>
<strong>chadbrewbaker</strong>: Code review of <a href="https://github.com/oxidecomputer/hubris/commit/27090b5cff3933d9e133a9d1b85f73ad8767886c">https://github.com/oxidecomputer/hubris/commit/27090b5cff3933d9e133a9d1b85f73ad8767886c</a> Starting at: <a href="https://github.com/oxidecomputer/hubris/blob/27090b5cff3933d9e133a9d1b85f73ad8767886c/build/xtask/src/dist.rs#L751">https://github.com/oxidecomputer/hubris/blob/27090b5cff3933d9e133a9d1b85f73ad8767886c/build/xtask/src/dist.rs#L751</a> (ChatGPT4)</li>
<li>
<br>Error messages: The error messages use string interpolation without wrapping the placeholders in {}. You should add curly braces around the placeholders to correctly insert variable values into the string.<p></p>
</li>
<li>
<br>Metadata retrieval: The metadata retrieval and caching can be refactored into a separate function for better readability and maintainability. You can extract the code block responsible for metadata retrieval into a function like get_or_insert_metadata()<p></p>
</li>
</ul><p>*Finding the package: The unwrap() function can cause a panic if the package is not found. It is better to handle this case gracefully with a more informative error message. Replace unwrap() with an ok_or_else() call:</p>let pkg = metadata
    .packages
    .iter()
    .find(|p| p.name == task.name)
    .ok_or_else(|| format!(""Task {}: package not found"", task.name))?;<ul>
<li>
<strong>statuscalamitous</strong>: <a href="https://steveklabnik.com/writing/the-language-strangeness-budget">https://steveklabnik.com/writing/the-language-strangeness-budget</a> &lt;- a little late on the link but 😄</li>
<li>
<strong>statuscalamitous</strong>: (and i do think that quote/idea about it is very compelling)</li>
<li>
<strong>juansebastianl</strong>: On this note, I heard today from some friends in elite econ PhD programs saying their peers are using ChatGPT to do their problemsets etc which makes me wonder how critically other tech-adjancent professions will be able to reason critically about code they write</li>
<li>
<strong>Wizord</strong>: so the unwrap relies on magic action in the distance?</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://github.com/anc95/ChatGPT-CodeReview">https://github.com/anc95/ChatGPT-CodeReview</a>
</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://arxiv.org/abs/cs/0112018">https://arxiv.org/abs/cs/0112018</a>
</li>
<li>
<strong>clairegiordano</strong>: Love this quote Steve: "When it comes to programming languages, building one is easy, but getting people to use it is much, much harder. "</li>
<li>
<strong>flaviusb</strong>: Like, even in here we have some domain experts saying 'hey, this is pretty rough, it is giving me this garbage' and then shortly later saying 'yeah, this is a real thing that does work'.</li>
<li>
<strong>Columbus</strong>: Like people, it’s not a crystal ball of omniscience.</li>
<li>
<strong>JordanP</strong>: I'm curious what people think about the copyright implications of using a LLM to generate code in a closed-source codebase, given the uncopyrightable nature of the output. The Federal Register recently posted a clarification about AI-generated material: <a href="https://www.federalregister.gov/documents/2023/03/16/2023-05321/copyright-registration-guidance-works-containing-material-generated-by-artificial-intelligence">https://www.federalregister.gov/documents/2023/03/16/2023-05321/copyright-registration-guidance-works-containing-material-generated-by-artificial-intelligence</a>
</li>
<li>
<strong>ig</strong>: Are we at the Peak of Inflated Expectations? Or still on the rise? "- <strong>Johann-Tobias Schäg</strong>: Yes you can. And? You can't do training at scale with that Matmul oracle. What you can do is graft tools onto GPT later. I have some thoughts how to do that."</li>
<li>
<strong>just-be</strong>: The ReAct paper (and longchain as an implementation) is some concrete references to grafting on functionality: <a href="https://react-lm.github.io/">https://react-lm.github.io/</a> "- <strong>chadbrewbaker</strong>: "If I gave you a matrix multiplication oracle, what is a problem you could solve that you otherwise could not as a large language model?" (ChatGPT4)</li>
</ul><ul>
<li>Machine learning: Matrix multiplication is an essential operation in many machine learning algorithms, including neural networks, support vector machines, and principal component analysis. With a matrix multiplication oracle, I could provide more accurate and efficient solutions for large-scale machine learning problems.</li>
<li>Cryptography: Matrix multiplication is used in some cryptographic algorithms, such as lattice-based cryptography and homomorphic encryption. With a matrix multiplication oracle, I could solve cryptographic problems that involve large matrices.</li>
</ul><ul>
<li>
<strong>juansebastianl</strong>: The software engineers have just historically believed that it was "low skill" automation coming first, they thought they would be ones doing the killing but not being killed in terms of individual labor power. But now that it's coming for them it feels scary.</li>
<li>
<strong>ig</strong>: Is software boring because of there aren't enough people who can write it, or because of the economic incentives / needs of the people who can?</li>
<li>
<strong>antranigv</strong>: My fear is still the same: young developers trust blindly many things, such as ChatGPT, an answer on StackOverflow, or that an IDE has highlighted a code.</li>
<li>
<strong>Jacob Newman</strong>: I have had class mates spend more time debugging chatGPT prompts than they do solving their problems themselves</li>
<li>
<strong>perplexes</strong>: <a href="https://xkcd.com/1205/">https://xkcd.com/1205/</a>
</li>
<li>
<strong>statuscalamitous</strong>: llvm requires correctness? heheheh</li>
<li>
<strong>antranigv</strong>: same with my students. or that they "fight" more with the IDE ("why is this in red?") than actually looking into the compiler output (not that the compiler is always correct :)) )</li>
<li>
<strong>flaviusb</strong>: Like, did early SunOS 'work'? How about late Solaris? Solaris definitely is closer to what we think about as working.</li>
<li>
<strong>chadbrewbaker</strong>: Bwahaha. How ChatGPT4 says to do whole system memory dumps.</li>
</ul>sudo dd if=/dev/mem of=memory_dump.bin bs=1M<ul>
<li>
<strong>evan-brass</strong>: You might require correctness in a piece of software, but even a "not fully correct" fuzzer could help you improve the quality of your code.</li>
<li>
<strong>statuscalamitous</strong>: thy'er working on it!</li>
<li>
<strong>Cyborus</strong>: Trap streets!</li>
<li>
<strong>antranigv</strong>: xDDDDDDDDDDDD fake streets ahaahah love that</li>
<li>
<strong>perplexes</strong>: <a href="https://en.wikipedia.org/wiki/Argleton">https://en.wikipedia.org/wiki/Argleton</a>
</li>
<li>
<strong>perplexes</strong>: <a href="https://en.wikipedia.org/wiki/Fictitious_entry">https://en.wikipedia.org/wiki/Fictitious_entry</a>
</li>
<li>
<strong>terrellrussell</strong>: <a href="https://en.wikipedia.org/wiki/Trap_street">https://en.wikipedia.org/wiki/Trap_street</a>
</li>
<li>
<strong>juansebastianl</strong>: I would be really surprised if there isn't already a basic thing like this in ChatGPT <a href="https://arxiv.org/abs/2301.10226">https://arxiv.org/abs/2301.10226</a>
</li>
<li>
<strong>Wizord</strong>: the thought of outsourcing my thinking to Microsoft <em>terrifies</em> me beyond your imagination</li>
<li>
<strong>Johann-Tobias Schäg</strong>: This has to be a post processing step. AFAIK you can not really embed it into the weights.</li>
<li>
<strong>juansebastianl</strong>: Thats true, but no one has the weights except OpenAI</li>
<li>
<strong>AaronW</strong>: Related: <a href="https://twitter.com/as_w/status/541075012619231232">https://twitter.com/as_w/status/541075012619231232</a>
</li>
<li>
<strong>Johann-Tobias Schäg</strong>: Watermarks allow to detect set membership without needing acces to the cache</li>
<li>
<strong>Johann-Tobias Schäg</strong>: You can't embed it in the weights. Like math will explode when you do that.</li>
<li>
<strong>juansebastianl</strong>: Yes, I understand lol but you can do it behind the API</li>
<li>
<strong>perplexes</strong>: Gpt is my better Google basically</li>
<li>
<strong>antranigv</strong>: so basically faster wrong answers. too bad ChatGPT doesn't have "Page 2" 😄</li>
<li>
<strong>juansebastianl</strong>: But you <em>can</em> embedded it in the weights using some weird tricks in the tokenization but no idea how it performs</li>
<li>
<strong>chadbrewbaker</strong>: "Given a LLM where the provider attempts to hide the weights, how could you get the weights for the phrase 'I like dtrace.' ?" (ChatGPT4)</li>
</ul><ul>
<li>Black-box probing: You can generate multiple input prompts containing the phrase ""I like dtrace."" in various contexts and observe the model's responses. By analyzing the patterns in the responses, you might gain some insights into how the model processes the given phrase.</li>
<li>Adversarial attacks: You can create a series of adversarial examples and test the model's responses to understand its robustness and potentially gain insights into the weights' behavior.</li>
</ul>*Model distillation: You can try to train a smaller, more interpretable model to mimic the LLM's behavior. Although this would not directly reveal the weights associated with the phrase ""I like dtrace."", the distilled model might provide insights into the original model's behavior.<ul>
<li>
<strong>Columbus</strong>: Seems like it will enable learners to learn much better, but paired with people, who were always just trying to get through a class, to be able to plagiarize much more easily.</li>
<li>
<strong>perplexes</strong>: Depends on the subject, I’ve had pretty good results with asking it to explain things—even just now “explain phenomenological transparency” it did pretty good</li>
<li>
<strong>Cyborus</strong>: Using GPT like a calculator, you can use a calculator to get you the actual answer but you still need to understand the mathematical steps you need to take</li>
<li>
<strong>juansebastianl</strong>: In what way? You're just reducing the dimensionality of the space....</li>
<li>
<strong>juansebastianl</strong>: The question is whether you can do that without killing the quality of the embeddings</li>
<li>
<strong>TronDD</strong>: How would you know if you didn't already know?</li>
<li>
<strong>ig</strong>: I'm not sure if this is an endorsement of ChatGPT or a reflection on the current state of web search</li>
<li>
<strong>ig</strong>: I don't know if "P's get degrees" translates to the US academic grading system</li>
<li>
<strong>ag_dubs</strong>: D is for diploma</li>
<li>
<strong>TronDD</strong>: It creates the AI generated web pages on the fly, is all.</li>
<li>
<strong>perplexes</strong>: The same way I would learn something from googling it and evaluating with my current knowledge. Is it rigorous? No idea. But it gave me enough to participate in the discussion in a helpful way, and I’ll probably come back to this concept through more trusted sources</li>
<li>
<strong>azemetre</strong>: I like copilot as a very effective autocomplete. still get a few doozies when trying to do anything meaningful</li>
<li>
<strong>TronDD</strong>: Where is the context? At least in a web search I an look at the URL or a user and see where the information is coming from.</li>
<li>
<strong>perplexes</strong>: Totally a problem. Bing AI does a better job grounding with real references</li>
<li>
<strong>juansebastianl</strong>: I'm not sure I can parse this sentence but if what I'm doing is learning an n-dimensional distribution using some parameterized family of functions in some nice Hilbert space then there is no reason I can't reduce the dimensionality either by first projecting my input into a smaller parameterized family (i.e. "in the weights" - really in the tokenization) or do it by taking a nearest neighbor projection onto a subspace at the end.</li>
<li>
<strong>ig</strong>: Do you follow those references? Or does seeing the references listed just make it feel more legit, even if it isn't?</li>
<li>
<strong>ig</strong>: Is ChatGPT / OpenAI really the first mover in the LLM space?</li>
<li>
<strong>chadbrewbaker</strong>: Microsoft's advantage is GitHub CoPilot and ChatGPT/Bing user feedback.</li>
<li>
<strong>perplexes</strong>: Probably more of the latter at the moment if I’m honest. But I also don’t follow every reference in CS papers either</li>
<li>
<strong>flaviusb</strong>: The problem with a lot of the 'copyright wouldn't allow LLM training' is that the temporary sanctioned breaking of the rules of private property in order to allow for further enclosure is a part of how private property relations are upheld.</li>
<li>
<strong>juansebastianl</strong>: Ah I see what you're saying. It doesn't actually matter because the watermark is not learnable.</li>
<li>
<strong>chadbrewbaker</strong>: <a href="https://lemire.me/blog/2021/10/14/calling-a-dynamically-compiled-function-from-go/">https://lemire.me/blog/2021/10/14/calling-a-dynamically-compiled-function-from-go/</a> + ChatGPT 😂</li>
<li>
<strong>flaviusb</strong>: (Also why I think that 'spicy copyright' isn't going to be a way to oppose the imposition of stuff like ChatGPT - that we need to look to history and the Luddites and ownership of the machines instead)</li>
<li>
<strong>Johann-Tobias Schäg</strong>: The watermark has to be domain specific so i can't be in the training data, as that not went through domain embedding in the attention mechanism. The domain embedding can't change the likelihood of resulting tokens after training as that would disturb the dynamic of the next token prediction, so it has to be a post processing step "- <strong>chadbrewbaker</strong>: "How wold Jaric Duda describe a large language model?" (ChatGPT4)</li>
</ul>In the context of information theory, an LLM can be described as an efficient predictor or estimator of the probability distribution of the next token (e.g., word or character) in a sequence, given the previous tokens. By doing so, the model effectively compresses the information contained in the training data, allowing it to generate coherent and contextually relevant text based on the learned patterns.<ul>
<li>
<strong>chadbrewbaker</strong>: Hmm. This leads me to think that LLMs are monoids. You can efficently split the evaluation at scale and compose.</li>
<li>
<strong>Johann-Tobias Schäg</strong>: It can be done in the post processing step because there we have access to a likelihood distribution of tokens and we could perturb the tie breaking according to some hypersubspace which would serve as statistical proof over many tokens.</li>
<li>
<strong>Johann-Tobias Schäg</strong>: There are probably other approaches but doing it on the generated text least disturbs the model</li>
<li>
<strong>chadbrewbaker</strong>: Can you use a random source to tweak the probability distribution of the next token for parallel search?</li>
<li>
<strong>chadbrewbaker</strong>: They call this timescale parallelization in molecular dynamics - you apply some slight noice to all molecules then run the simulation in parallel until one of the models hits your desired phase change condition.</li>
<li>
<strong>juansebastianl</strong>: I think what I'm saying is best illustrated by a kind of silly example. Suppose that I wanted to set up a pre-processing watermarking. So suppose I have an existing word embedding from an unwatermaked model. You can create a new corpus of "watermarked" training examples where you sub in nearest "allowable" tokens for all the "disallowed" ones then train your model only on the "allowable" corpus and only with "allowable" tokens as inputs and outputs. Then at inference time you have to repeat this step for new text but you still end up with the statistical properties of an include/exclude list on text you're trying to determine the provenance of. Of course such a model would be <em>terrible</em> for a bunch of reasons, I'm simply saying it's possible.</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>On Silicon Valley Bank with Eric Vishria</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>7</itunes:episode>
      <podcast:episode>7</podcast:episode>
      <itunes:title>On Silicon Valley Bank with Eric Vishria</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">639e8adf-eeaf-4735-8667-af3dfc8141ee</guid>
      <link>https://share.transistor.fm/s/f41fd616</link>
      <description>
        <![CDATA[<p>Eric Vishria of Benchmark and Oxide CEO, Steve Tuck, join Bryan and Adam to talk about Silicon Valley Bank, its role in the startup ecosystem, and the short- and long-term effects of its collapse.</p><p><br>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/pYrlCv-bwDk">the recording from March 17th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined special guests <a href="https://twitter.com/ericvishria">Eric Vishria</a> and <a href="https://hachyderm.io/@sdtuck">Steve Tuck</a>.</p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Curated chat log from the show:</p><ul>
<li>
<strong>davidf</strong>: Sharing this here because I loved every bit of it: <a href="https://mitchellh.com/writing/my-startup-banking-story">My Startup Banking Story by Mitchell Hashimoto</a>
</li>
<li>
<strong>ewen</strong>: 'The teller looks at the paper, then looks at me, then looks back at the paper, then asks ""Are you the HashiCorp guy?"" ' 😮 (Definitely agree that post looks relevant, and is worth reading; thanks for sharing. There's quite the impedance mismatch between ""traditional banking"" and ""startup"" approaches to things. Which I suspect in part explains how SVB was so widely used by startups.)"</li>
<li>
<strong>antranigv</strong>: <strong>Question</strong>: Are there any reasons why the US is behind in these banking things? all countries in the EU and developing countries have solved these problems decade(s) ago.</li>
<li>
<strong>statuscalamitous</strong>: my personal, barely informed take: we built this infra earlier, so we have more legacy</li>
<li>
<strong>a172</strong>: It sounds like what SVB was providing that was so rare was a kind of business as a service.</li>
<li>
<strong>statuscalamitous</strong>: my favorite "scare a developer" story: the way ACH payments work. that's right, SFTP!</li>
<li>
<strong>antranigv</strong>: I think you mean FTPS? did they move to SFTP? 😄</li>
<li>
<strong>drkamoz</strong>: I think the opposite is also true, without the infra, Africa’s been very early to adopt mobile banking <a href="https://www.bbc.com/worklife/article/20131217-east-africa-a-mobile-banking-hub">https://www.bbc.com/worklife/article/20131217-east-africa-a-mobile-banking-hub</a>
</li>
<li>
<strong>drkamoz</strong>: Can you explain sweep funds?</li>
<li>
<strong>Eric Likness - carpetbomberz.com</strong>: 6 months of runway some place else. Not what Peter Thiel was telling people.</li>
<li>
<strong>antranigv</strong>: What was his response?</li>
<li>
<strong>arjenroodselaar</strong>: Eject! Eject!</li>
<li>
<strong>ahl</strong>: this was a fun summary: <a href="https://svbhallofshame.wordpress.com/">https://svbhallofshame.wordpress.com/</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.fdic.gov/news/press-releases/2023/pr23016.html">https://www.fdic.gov/news/press-releases/2023/pr23016.html</a>
</li>
<li>
<strong>antranigv</strong>: This Venture Debt is intriguing, specially for startups who have a good background but are having a hard time... kinda? I guess?</li>
<li>
<strong>ahl</strong>: <a href="https://www.acquired.fm/episodes/benchmark-capital">Acquired: Benchmark Part I</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.acquired.fm/episodes/benchmark-part-ii-the-dinner">Acquired: Benchmark Part II: The Dinner</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Eric Vishria of Benchmark and Oxide CEO, Steve Tuck, join Bryan and Adam to talk about Silicon Valley Bank, its role in the startup ecosystem, and the short- and long-term effects of its collapse.</p><p><br>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/pYrlCv-bwDk">the recording from March 17th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined special guests <a href="https://twitter.com/ericvishria">Eric Vishria</a> and <a href="https://hachyderm.io/@sdtuck">Steve Tuck</a>.</p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Curated chat log from the show:</p><ul>
<li>
<strong>davidf</strong>: Sharing this here because I loved every bit of it: <a href="https://mitchellh.com/writing/my-startup-banking-story">My Startup Banking Story by Mitchell Hashimoto</a>
</li>
<li>
<strong>ewen</strong>: 'The teller looks at the paper, then looks at me, then looks back at the paper, then asks ""Are you the HashiCorp guy?"" ' 😮 (Definitely agree that post looks relevant, and is worth reading; thanks for sharing. There's quite the impedance mismatch between ""traditional banking"" and ""startup"" approaches to things. Which I suspect in part explains how SVB was so widely used by startups.)"</li>
<li>
<strong>antranigv</strong>: <strong>Question</strong>: Are there any reasons why the US is behind in these banking things? all countries in the EU and developing countries have solved these problems decade(s) ago.</li>
<li>
<strong>statuscalamitous</strong>: my personal, barely informed take: we built this infra earlier, so we have more legacy</li>
<li>
<strong>a172</strong>: It sounds like what SVB was providing that was so rare was a kind of business as a service.</li>
<li>
<strong>statuscalamitous</strong>: my favorite "scare a developer" story: the way ACH payments work. that's right, SFTP!</li>
<li>
<strong>antranigv</strong>: I think you mean FTPS? did they move to SFTP? 😄</li>
<li>
<strong>drkamoz</strong>: I think the opposite is also true, without the infra, Africa’s been very early to adopt mobile banking <a href="https://www.bbc.com/worklife/article/20131217-east-africa-a-mobile-banking-hub">https://www.bbc.com/worklife/article/20131217-east-africa-a-mobile-banking-hub</a>
</li>
<li>
<strong>drkamoz</strong>: Can you explain sweep funds?</li>
<li>
<strong>Eric Likness - carpetbomberz.com</strong>: 6 months of runway some place else. Not what Peter Thiel was telling people.</li>
<li>
<strong>antranigv</strong>: What was his response?</li>
<li>
<strong>arjenroodselaar</strong>: Eject! Eject!</li>
<li>
<strong>ahl</strong>: this was a fun summary: <a href="https://svbhallofshame.wordpress.com/">https://svbhallofshame.wordpress.com/</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.fdic.gov/news/press-releases/2023/pr23016.html">https://www.fdic.gov/news/press-releases/2023/pr23016.html</a>
</li>
<li>
<strong>antranigv</strong>: This Venture Debt is intriguing, specially for startups who have a good background but are having a hard time... kinda? I guess?</li>
<li>
<strong>ahl</strong>: <a href="https://www.acquired.fm/episodes/benchmark-capital">Acquired: Benchmark Part I</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.acquired.fm/episodes/benchmark-part-ii-the-dinner">Acquired: Benchmark Part II: The Dinner</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Fri, 17 Mar 2023 14:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/f41fd616/0462dcd0.mp3" length="57048770" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3564</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Eric Vishria of Benchmark and Oxide CEO, Steve Tuck, join Bryan and Adam to talk about Silicon Valley Bank, its role in the startup ecosystem, and the short- and long-term effects of its collapse.</p><p><br>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/pYrlCv-bwDk">the recording from March 17th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined special guests <a href="https://twitter.com/ericvishria">Eric Vishria</a> and <a href="https://hachyderm.io/@sdtuck">Steve Tuck</a>.</p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Curated chat log from the show:</p><ul>
<li>
<strong>davidf</strong>: Sharing this here because I loved every bit of it: <a href="https://mitchellh.com/writing/my-startup-banking-story">My Startup Banking Story by Mitchell Hashimoto</a>
</li>
<li>
<strong>ewen</strong>: 'The teller looks at the paper, then looks at me, then looks back at the paper, then asks ""Are you the HashiCorp guy?"" ' 😮 (Definitely agree that post looks relevant, and is worth reading; thanks for sharing. There's quite the impedance mismatch between ""traditional banking"" and ""startup"" approaches to things. Which I suspect in part explains how SVB was so widely used by startups.)"</li>
<li>
<strong>antranigv</strong>: <strong>Question</strong>: Are there any reasons why the US is behind in these banking things? all countries in the EU and developing countries have solved these problems decade(s) ago.</li>
<li>
<strong>statuscalamitous</strong>: my personal, barely informed take: we built this infra earlier, so we have more legacy</li>
<li>
<strong>a172</strong>: It sounds like what SVB was providing that was so rare was a kind of business as a service.</li>
<li>
<strong>statuscalamitous</strong>: my favorite "scare a developer" story: the way ACH payments work. that's right, SFTP!</li>
<li>
<strong>antranigv</strong>: I think you mean FTPS? did they move to SFTP? 😄</li>
<li>
<strong>drkamoz</strong>: I think the opposite is also true, without the infra, Africa’s been very early to adopt mobile banking <a href="https://www.bbc.com/worklife/article/20131217-east-africa-a-mobile-banking-hub">https://www.bbc.com/worklife/article/20131217-east-africa-a-mobile-banking-hub</a>
</li>
<li>
<strong>drkamoz</strong>: Can you explain sweep funds?</li>
<li>
<strong>Eric Likness - carpetbomberz.com</strong>: 6 months of runway some place else. Not what Peter Thiel was telling people.</li>
<li>
<strong>antranigv</strong>: What was his response?</li>
<li>
<strong>arjenroodselaar</strong>: Eject! Eject!</li>
<li>
<strong>ahl</strong>: this was a fun summary: <a href="https://svbhallofshame.wordpress.com/">https://svbhallofshame.wordpress.com/</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.fdic.gov/news/press-releases/2023/pr23016.html">https://www.fdic.gov/news/press-releases/2023/pr23016.html</a>
</li>
<li>
<strong>antranigv</strong>: This Venture Debt is intriguing, specially for startups who have a good background but are having a hard time... kinda? I guess?</li>
<li>
<strong>ahl</strong>: <a href="https://www.acquired.fm/episodes/benchmark-capital">Acquired: Benchmark Part I</a>
</li>
<li>
<strong>ahl</strong>: <a href="https://www.acquired.fm/episodes/benchmark-part-ii-the-dinner">Acquired: Benchmark Part II: The Dinner</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Rack-scale Networking</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>6</itunes:episode>
      <podcast:episode>6</podcast:episode>
      <itunes:title>Rack-scale Networking</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">3074e6ea-b669-4866-98ba-0adb5ab8c1f0</guid>
      <link>https://share.transistor.fm/s/e0fc97e0</link>
      <description>
        <![CDATA[<p>Bryan and Adam are joined by a number of members of the Oxide networking team to talk about the networking software that drives the Oxide rack. It turns out that rack-scale networking is hard... and has enormous benefits!</p><p><br>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/AkWh2Sms3aw">the recording from February 27th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers included Ryan Goodfellow, <a href="https://hachyderm.io/@diglett">Levon Tarver</a>, Ben Naecker, and <a href="https://mastodon.social/@arjenroodselaar@octodon.social">Arjen Roodselaar</a>.<br><strong><br>Links</strong></p><ul>
<li><a href="https://www.intel.com/content/www/us/en/products/details/network-io/programmable-ethernet-switch/tofino-series.html">Intel Tofino Series</a></li>
<li><a href="https://en.wikipedia.org/wiki/P4_(programming_language)">P4 (programming language) - Wikipedia</a></li>
<li><a href="https://github.com/p4lang/p4c">p4lang/p4c: P4_16 reference compiler</a></li>
<li><a href="https://github.com/oxidecomputer/p4">oxidecomputer/p4: A P4 compiler</a></li>
<li><a href="https://github.com/dtolnay/quote">The quote crate: Rust quasi-quoting</a></li>
<li><a href="https://wiki.ietf.org/group/rift">RIFT WG - Routing In Fat Trees | IETF Community Wiki</a></li>
</ul><p>Here's (much of) the live chat from the show:</p><ul>
<li>
<strong>ahl</strong> <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md</a>
</li>
<li>
<strong>ahl</strong> That's the Sidecar switch episode</li>
<li>
<strong>bcantrill</strong> <a href="https://p4.org/">https://p4.org/</a>
</li>
<li>
<strong>admchl</strong> What does "at line rate" mean?</li>
<li>
<strong>Riking</strong> Line rate = As fast as the packets could possibly come. 1Gbit, 10Gbit, 100Gbit, etc</li>
<li>
<strong>admchl</strong> Do you need ASICs to hit that speed? I assume x86_64 is not going to be fast enough for these specialised operations?</li>
<li>
<strong>levon</strong> Yes, the Tofino 2 is the ASIC</li>
<li>
<strong>bcantrill</strong> You need ASICs</li>
<li>
<strong>bnaecker</strong> Yes, you really can't do these kinds of operations on a general purpose CPU.</li>
<li>
<strong>rng_drizzt</strong> Yeah, you need specialized silicon here.</li>
<li>
<strong>JustinAzoff</strong> Right, also often across all ports at the same time in both direction. a 48 port 10gbps switch will have a line rate of 960gbps (10 ** 48 ** 2)</li>
<li>
<strong>duckman</strong> So the advantage is being able to offload compute to the switch?</li>
<li>
<strong>bnaecker</strong> Yes, and specifically that you can separate the data plane (operations on the packets) from the control plane (decisions about what operations to allow or make).</li>
<li>
<strong>tahnok</strong> What's TCAM?</li>
<li>
<strong>levon</strong> Ternary Content Addressable Memory</li>
<li>
<strong>bnaecker</strong> <a href="https://en.wikipedia.org/wiki/Content-addressable_memory#Ternary_CAMs">https://en.wikipedia.org/wiki/Content-addressable_memory#Ternary_CAMs</a>
</li>
<li>
<strong>ryaeng</strong> Sure beats logging into a number of Cisco switches and making changes at the console.</li>
<li>
<strong>admchl</strong> This is my favourite episode in a long time, this is all really fascinating.</li>
<li>
<strong>rng_drizzt</strong> the first Sidecar episode was nearly 1.5 years ago ü§Ø , right after we cut the first rev</li>
<li>
<strong>levon</strong> That episode blew my mind</li>
<li>
<strong>duckman</strong> This sounds like a big deal on the scale of ebpf</li>
<li>
<strong>duckman</strong> Or bigger</li>
<li>
<strong>bnaecker</strong> It is extremely useful for understanding the processing pipelines. As long as you only run single-packet integration tests üôÇ</li>
<li>
<strong>od0</strong> just want to go out and find things to write P4 code for</li>
<li>
<strong>JustinAzoff</strong> &lt;@354365572554948608&gt; yeah one way to think about that sort of thing is that xdp can be used to run little programs on a nic, where p4 is kind of like that, but running on effectively a nic with 48+ ports</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/p4">https://github.com/oxidecomputer/p4</a>
</li>
<li>
<strong>SyntheticGate</strong> sidecar is the "codename" of our switch box</li>
<li>
<strong>SyntheticGate</strong> "gimlet" is our server sled</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/propolis">https://github.com/oxidecomputer/propolis</a>
</li>
<li>
<strong>wmf</strong> So you have P4 and OPTE in the hypervisor at the same time?</li>
<li>
<strong>bnaecker</strong> OPTE is in the host kernel.</li>
<li>
<strong>arjenroodselaar</strong> The P4 runtime Ry described only exists in the test bed, where it high level simulates the switches. OPTE is part of the production environment.</li>
<li>
<strong>arjenroodselaar</strong> The rough difference between P4 and OPTE is that P4 works on individual packets without much concept of a session (so it can't reason about TCP streams, packet order etc, so no firewall like functionality), while OPTE aims to operate on streams of packets.</li>
<li>
<strong>JustinAzoff</strong> So you can run 100 VMs on a test system and wire them up to your virtual switch compiled by x4c?</li>
<li>
<strong>arjenroodselaar</strong> Correct.</li>
<li>
<strong>bcantrill</strong> OPTE == Oxide Packet Transformation Engine</li>
<li>
<strong>admchl</strong> Gimlet?</li>
<li>
<strong>rng_drizzt</strong> Compute server</li>
<li>
<strong>rng_drizzt</strong> The Sidecar switch is actually <em>just</em> a PCIe peripheral to a Gimlet.</li>
<li>
<strong>bnaecker</strong> The Gimlet managing the Sidecar is often called a "Scrimlet" for "Sidecar attached Gimlet"</li>
<li>
<strong>Riking</strong> and "how do i reconfigure this giant network without hosing my ability to reconfigure this giant network"</li>
<li>
<strong>ShaunO</strong> can identify with that - we seriously struggle to keep our own products inter-operating, let alone anyone else's</li>
<li>
<strong>levon</strong> It can feel like a Sisyphean task.</li>
<li>
<strong>a172</strong> Setup a much smaller/simpler network in parallel that is accessible from "not your network" that gets you to the management interface.</li>
<li>
<strong>levon</strong> It's a whole new world when you can look at the actual table definitions in P4</li>
<li>
<strong>rng_drizzt</strong> Owning all the layers here is immensely beneficial</li>
<li>
<strong>levon</strong> Those DTrace probes have been very helpful</li>
<li>
<strong>bnaecker</strong> Those probes turned out to be everywhere. They are are in: SQL queries, HTTP queries, log messages, Propolis hypervisor state, virtual storage system, networking protocol messages, the P4 emulator, and probably more that I'm forgetting about.</li>
<li>
<strong>levon</strong> For those unfamiliar with the DTrace tool, or the rationale behind leveraging DTrace over other tracing / debugging tools: <a href="https://www.cs.princeton.edu/courses/archive/fall05/cos518/papers/dtrace.pdf">https://www.cs.princeton.edu/courses/archive/fall05/cos518/papers/dtrace.pdf</a>
</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/progenitor">https://github.com/oxidecomputer/progenitor</a>
</li>
<li>
<strong>ahl</strong> some notes on rust codegen: <a href="https://github.com/ahl/codegen-template">https://github.com/ahl/codegen-template</a>
</li>
<li>
<strong>arjenroodselaar</strong> DDM! Bring us home!</li>
<li>
<strong>a172</strong> it astonishes me how many "cloud" type architectures are built on v4 only or v4 first.</li>
<li>
<strong>a172</strong> IPv6 is <em>older than Wi-Fi</em>
</li>
<li>
<strong>a172</strong> It solves <em>real problems</em>. <strong>PLEASE</strong> use it.</li>
<li>
<strong>nyanotech</strong> yessss finally someone realizes broadcast domains are also failure domains</li>
<li>
<strong>JustinAzoff</strong> the worst part of v6 is trying to run dual stack v4+v6, v6 only networks are fairly simple</li>
<li>
<strong>levon</strong> And the bigger the broadcast domain, the more irritating it is to troubleshoot it</li>
<li>
<strong>bcantrill</strong> "Hash and pray"</li>
<li>
<strong>arjenroodselaar</strong> FWIW while DDM is a cool thing we're building, one of the "simple" tasks Tofino does for us is NAT between the networks of our customers and their VPC networks they implement on our platform.</li>
<li>
<strong>arjenroodselaar</strong> Simple NAT is still surprisingly expensive and being able to do that at line rate is pretty nice.</li>
<li>
<strong>Riking</strong> TCP retransmits in steady state seems like an obvious observation point?</li>
<li>
<strong>arjenroodselaar</strong> Yes, you see TCP retransmits.</li>
<li>
<strong>arjenroodselaar</strong> But if you're running say Memcache over UDP and you get a sudden burst of incoming data as a result of a large number of cache queries you drop those packets (because the buffers can't keep up) and you see cache request timeouts.</li>
<li>
<strong>arjenroodselaar</strong> FB did some work on this about 10 years ago to avoid this ingest and dropped packets which hurt your p99 latency.</li>
<li>
<strong>Riking</strong> yeah smartnic is pushing the intelligence to the machine</li>
<li>
<strong>levon</strong> I know someone who basically polled all of the switches for buffer drops in an attempt to divine which paths were dropping packets due to micro-congestion</li>
<li>
<strong>admchl</strong> I feel like I'm in a secret society meeting learning The Hidden Truth behind Reality of The Network</li>
<li>
<strong>wmf</strong> I would argue if the entire hypervisor is on the smart NIC then you're no worse off than the Oxide architecture</li>
<li>
<strong>a172</strong> I once stumbled on a bug where the vendor's custom protocol for monitoring (because snmp/syslog just cant keep up) had a trace log on the process, that could not be turned off. Some sort of race condition enabled it, and it happened on 1/3 of system boots. It was ~20k logs/s, iirc.</li>
<li>
<strong>a172</strong> (im going to look up those numbers)</li>
<li>
<strong>levon</strong> I haven't worked with a SmartNIC fast enough to do this well</li>
<li>
<strong>JustinAzoff</strong> We use a FPGA Nic in our products for fast packet capturing. the service that bootstraps it had an issue that caused it to log an error... for every single packet...</li>
<li>
<strong>JustinAzoff</strong> that managed to log the same error something like 250,000 times a second</li>
<li>
<strong>arjenroodselaar</strong> The problem with SmartNICs is that their power features are way less advanced than the power scaling that x86 CPUs do. So you either run them or you don't, and they come with a 50-75W penalty. Unless you can really get useful work done for that 50W budget, a x86 CPU is much more flexible.</li>
<li>
<strong>arjenroodselaar</strong> What we really want is an AMD Epyc SoC with some amount of FPGA fabric That would let you build whatever makes sense there while still having much of the flexibility with respect to how/where you consume power.</li>
<li>
<strong>a172</strong> It was enough to mess us up. 250k would have killed us even faster.</li>
<li>
<strong>JustinAzoff</strong> Yeah, it happily wrote that error message until the multi TB data array filled up. We reworked how log rate limiting and log rotation worked after that</li>
<li>
<strong>a172</strong> I was mostly amused that the process that the process that existed because snmp/syslog couldn't keep up was getting a syslog for every iteration of a loop in the process</li>
<li>
<strong>a172</strong> of course, if you are sending a packet for every packet you send, that sounds like it quickly becomes an exponential problem.</li>
<li>
<strong>JustinAzoff</strong> and to circle back around, this was code inside of the vendor SDK, that is not open source, that we couldn't fix ourselves. it's one of the only components of our system that we don't control. i wish we had our own NIC (that would probably run something like p4)</li>
<li>
<strong>levon</strong> And thus, this is how we become the way we are (at Oxide)</li>
<li>
<strong>a172</strong> ours was on production network hardware (wireless controller). There is no hope of having source or any insight true observability into it. (edit: saying there was <em>no</em> insight is a little harsh)</li>
<li>
<strong>JustinAzoff</strong> one thing that came up before was if p4 was like ebpf.. there's actually a ebpf backend for p4 that supports some of the features: <a href="https://github.com/p4lang/p4c/blob/main/backends/ebpf/README.md">https://github.com/p4lang/p4c/blob/main/backends/ebpf/README.md</a>
</li>
<li>
<strong>bcantrill</strong> Thanks, all!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Bryan and Adam are joined by a number of members of the Oxide networking team to talk about the networking software that drives the Oxide rack. It turns out that rack-scale networking is hard... and has enormous benefits!</p><p><br>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/AkWh2Sms3aw">the recording from February 27th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers included Ryan Goodfellow, <a href="https://hachyderm.io/@diglett">Levon Tarver</a>, Ben Naecker, and <a href="https://mastodon.social/@arjenroodselaar@octodon.social">Arjen Roodselaar</a>.<br><strong><br>Links</strong></p><ul>
<li><a href="https://www.intel.com/content/www/us/en/products/details/network-io/programmable-ethernet-switch/tofino-series.html">Intel Tofino Series</a></li>
<li><a href="https://en.wikipedia.org/wiki/P4_(programming_language)">P4 (programming language) - Wikipedia</a></li>
<li><a href="https://github.com/p4lang/p4c">p4lang/p4c: P4_16 reference compiler</a></li>
<li><a href="https://github.com/oxidecomputer/p4">oxidecomputer/p4: A P4 compiler</a></li>
<li><a href="https://github.com/dtolnay/quote">The quote crate: Rust quasi-quoting</a></li>
<li><a href="https://wiki.ietf.org/group/rift">RIFT WG - Routing In Fat Trees | IETF Community Wiki</a></li>
</ul><p>Here's (much of) the live chat from the show:</p><ul>
<li>
<strong>ahl</strong> <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md</a>
</li>
<li>
<strong>ahl</strong> That's the Sidecar switch episode</li>
<li>
<strong>bcantrill</strong> <a href="https://p4.org/">https://p4.org/</a>
</li>
<li>
<strong>admchl</strong> What does "at line rate" mean?</li>
<li>
<strong>Riking</strong> Line rate = As fast as the packets could possibly come. 1Gbit, 10Gbit, 100Gbit, etc</li>
<li>
<strong>admchl</strong> Do you need ASICs to hit that speed? I assume x86_64 is not going to be fast enough for these specialised operations?</li>
<li>
<strong>levon</strong> Yes, the Tofino 2 is the ASIC</li>
<li>
<strong>bcantrill</strong> You need ASICs</li>
<li>
<strong>bnaecker</strong> Yes, you really can't do these kinds of operations on a general purpose CPU.</li>
<li>
<strong>rng_drizzt</strong> Yeah, you need specialized silicon here.</li>
<li>
<strong>JustinAzoff</strong> Right, also often across all ports at the same time in both direction. a 48 port 10gbps switch will have a line rate of 960gbps (10 ** 48 ** 2)</li>
<li>
<strong>duckman</strong> So the advantage is being able to offload compute to the switch?</li>
<li>
<strong>bnaecker</strong> Yes, and specifically that you can separate the data plane (operations on the packets) from the control plane (decisions about what operations to allow or make).</li>
<li>
<strong>tahnok</strong> What's TCAM?</li>
<li>
<strong>levon</strong> Ternary Content Addressable Memory</li>
<li>
<strong>bnaecker</strong> <a href="https://en.wikipedia.org/wiki/Content-addressable_memory#Ternary_CAMs">https://en.wikipedia.org/wiki/Content-addressable_memory#Ternary_CAMs</a>
</li>
<li>
<strong>ryaeng</strong> Sure beats logging into a number of Cisco switches and making changes at the console.</li>
<li>
<strong>admchl</strong> This is my favourite episode in a long time, this is all really fascinating.</li>
<li>
<strong>rng_drizzt</strong> the first Sidecar episode was nearly 1.5 years ago ü§Ø , right after we cut the first rev</li>
<li>
<strong>levon</strong> That episode blew my mind</li>
<li>
<strong>duckman</strong> This sounds like a big deal on the scale of ebpf</li>
<li>
<strong>duckman</strong> Or bigger</li>
<li>
<strong>bnaecker</strong> It is extremely useful for understanding the processing pipelines. As long as you only run single-packet integration tests üôÇ</li>
<li>
<strong>od0</strong> just want to go out and find things to write P4 code for</li>
<li>
<strong>JustinAzoff</strong> &lt;@354365572554948608&gt; yeah one way to think about that sort of thing is that xdp can be used to run little programs on a nic, where p4 is kind of like that, but running on effectively a nic with 48+ ports</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/p4">https://github.com/oxidecomputer/p4</a>
</li>
<li>
<strong>SyntheticGate</strong> sidecar is the "codename" of our switch box</li>
<li>
<strong>SyntheticGate</strong> "gimlet" is our server sled</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/propolis">https://github.com/oxidecomputer/propolis</a>
</li>
<li>
<strong>wmf</strong> So you have P4 and OPTE in the hypervisor at the same time?</li>
<li>
<strong>bnaecker</strong> OPTE is in the host kernel.</li>
<li>
<strong>arjenroodselaar</strong> The P4 runtime Ry described only exists in the test bed, where it high level simulates the switches. OPTE is part of the production environment.</li>
<li>
<strong>arjenroodselaar</strong> The rough difference between P4 and OPTE is that P4 works on individual packets without much concept of a session (so it can't reason about TCP streams, packet order etc, so no firewall like functionality), while OPTE aims to operate on streams of packets.</li>
<li>
<strong>JustinAzoff</strong> So you can run 100 VMs on a test system and wire them up to your virtual switch compiled by x4c?</li>
<li>
<strong>arjenroodselaar</strong> Correct.</li>
<li>
<strong>bcantrill</strong> OPTE == Oxide Packet Transformation Engine</li>
<li>
<strong>admchl</strong> Gimlet?</li>
<li>
<strong>rng_drizzt</strong> Compute server</li>
<li>
<strong>rng_drizzt</strong> The Sidecar switch is actually <em>just</em> a PCIe peripheral to a Gimlet.</li>
<li>
<strong>bnaecker</strong> The Gimlet managing the Sidecar is often called a "Scrimlet" for "Sidecar attached Gimlet"</li>
<li>
<strong>Riking</strong> and "how do i reconfigure this giant network without hosing my ability to reconfigure this giant network"</li>
<li>
<strong>ShaunO</strong> can identify with that - we seriously struggle to keep our own products inter-operating, let alone anyone else's</li>
<li>
<strong>levon</strong> It can feel like a Sisyphean task.</li>
<li>
<strong>a172</strong> Setup a much smaller/simpler network in parallel that is accessible from "not your network" that gets you to the management interface.</li>
<li>
<strong>levon</strong> It's a whole new world when you can look at the actual table definitions in P4</li>
<li>
<strong>rng_drizzt</strong> Owning all the layers here is immensely beneficial</li>
<li>
<strong>levon</strong> Those DTrace probes have been very helpful</li>
<li>
<strong>bnaecker</strong> Those probes turned out to be everywhere. They are are in: SQL queries, HTTP queries, log messages, Propolis hypervisor state, virtual storage system, networking protocol messages, the P4 emulator, and probably more that I'm forgetting about.</li>
<li>
<strong>levon</strong> For those unfamiliar with the DTrace tool, or the rationale behind leveraging DTrace over other tracing / debugging tools: <a href="https://www.cs.princeton.edu/courses/archive/fall05/cos518/papers/dtrace.pdf">https://www.cs.princeton.edu/courses/archive/fall05/cos518/papers/dtrace.pdf</a>
</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/progenitor">https://github.com/oxidecomputer/progenitor</a>
</li>
<li>
<strong>ahl</strong> some notes on rust codegen: <a href="https://github.com/ahl/codegen-template">https://github.com/ahl/codegen-template</a>
</li>
<li>
<strong>arjenroodselaar</strong> DDM! Bring us home!</li>
<li>
<strong>a172</strong> it astonishes me how many "cloud" type architectures are built on v4 only or v4 first.</li>
<li>
<strong>a172</strong> IPv6 is <em>older than Wi-Fi</em>
</li>
<li>
<strong>a172</strong> It solves <em>real problems</em>. <strong>PLEASE</strong> use it.</li>
<li>
<strong>nyanotech</strong> yessss finally someone realizes broadcast domains are also failure domains</li>
<li>
<strong>JustinAzoff</strong> the worst part of v6 is trying to run dual stack v4+v6, v6 only networks are fairly simple</li>
<li>
<strong>levon</strong> And the bigger the broadcast domain, the more irritating it is to troubleshoot it</li>
<li>
<strong>bcantrill</strong> "Hash and pray"</li>
<li>
<strong>arjenroodselaar</strong> FWIW while DDM is a cool thing we're building, one of the "simple" tasks Tofino does for us is NAT between the networks of our customers and their VPC networks they implement on our platform.</li>
<li>
<strong>arjenroodselaar</strong> Simple NAT is still surprisingly expensive and being able to do that at line rate is pretty nice.</li>
<li>
<strong>Riking</strong> TCP retransmits in steady state seems like an obvious observation point?</li>
<li>
<strong>arjenroodselaar</strong> Yes, you see TCP retransmits.</li>
<li>
<strong>arjenroodselaar</strong> But if you're running say Memcache over UDP and you get a sudden burst of incoming data as a result of a large number of cache queries you drop those packets (because the buffers can't keep up) and you see cache request timeouts.</li>
<li>
<strong>arjenroodselaar</strong> FB did some work on this about 10 years ago to avoid this ingest and dropped packets which hurt your p99 latency.</li>
<li>
<strong>Riking</strong> yeah smartnic is pushing the intelligence to the machine</li>
<li>
<strong>levon</strong> I know someone who basically polled all of the switches for buffer drops in an attempt to divine which paths were dropping packets due to micro-congestion</li>
<li>
<strong>admchl</strong> I feel like I'm in a secret society meeting learning The Hidden Truth behind Reality of The Network</li>
<li>
<strong>wmf</strong> I would argue if the entire hypervisor is on the smart NIC then you're no worse off than the Oxide architecture</li>
<li>
<strong>a172</strong> I once stumbled on a bug where the vendor's custom protocol for monitoring (because snmp/syslog just cant keep up) had a trace log on the process, that could not be turned off. Some sort of race condition enabled it, and it happened on 1/3 of system boots. It was ~20k logs/s, iirc.</li>
<li>
<strong>a172</strong> (im going to look up those numbers)</li>
<li>
<strong>levon</strong> I haven't worked with a SmartNIC fast enough to do this well</li>
<li>
<strong>JustinAzoff</strong> We use a FPGA Nic in our products for fast packet capturing. the service that bootstraps it had an issue that caused it to log an error... for every single packet...</li>
<li>
<strong>JustinAzoff</strong> that managed to log the same error something like 250,000 times a second</li>
<li>
<strong>arjenroodselaar</strong> The problem with SmartNICs is that their power features are way less advanced than the power scaling that x86 CPUs do. So you either run them or you don't, and they come with a 50-75W penalty. Unless you can really get useful work done for that 50W budget, a x86 CPU is much more flexible.</li>
<li>
<strong>arjenroodselaar</strong> What we really want is an AMD Epyc SoC with some amount of FPGA fabric That would let you build whatever makes sense there while still having much of the flexibility with respect to how/where you consume power.</li>
<li>
<strong>a172</strong> It was enough to mess us up. 250k would have killed us even faster.</li>
<li>
<strong>JustinAzoff</strong> Yeah, it happily wrote that error message until the multi TB data array filled up. We reworked how log rate limiting and log rotation worked after that</li>
<li>
<strong>a172</strong> I was mostly amused that the process that the process that existed because snmp/syslog couldn't keep up was getting a syslog for every iteration of a loop in the process</li>
<li>
<strong>a172</strong> of course, if you are sending a packet for every packet you send, that sounds like it quickly becomes an exponential problem.</li>
<li>
<strong>JustinAzoff</strong> and to circle back around, this was code inside of the vendor SDK, that is not open source, that we couldn't fix ourselves. it's one of the only components of our system that we don't control. i wish we had our own NIC (that would probably run something like p4)</li>
<li>
<strong>levon</strong> And thus, this is how we become the way we are (at Oxide)</li>
<li>
<strong>a172</strong> ours was on production network hardware (wireless controller). There is no hope of having source or any insight true observability into it. (edit: saying there was <em>no</em> insight is a little harsh)</li>
<li>
<strong>JustinAzoff</strong> one thing that came up before was if p4 was like ebpf.. there's actually a ebpf backend for p4 that supports some of the features: <a href="https://github.com/p4lang/p4c/blob/main/backends/ebpf/README.md">https://github.com/p4lang/p4c/blob/main/backends/ebpf/README.md</a>
</li>
<li>
<strong>bcantrill</strong> Thanks, all!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 27 Feb 2023 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/e0fc97e0/9ef38979.mp3" length="90699462" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5667</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Bryan and Adam are joined by a number of members of the Oxide networking team to talk about the networking software that drives the Oxide rack. It turns out that rack-scale networking is hard... and has enormous benefits!</p><p><br>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/AkWh2Sms3aw">the recording from February 27th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers included Ryan Goodfellow, <a href="https://hachyderm.io/@diglett">Levon Tarver</a>, Ben Naecker, and <a href="https://mastodon.social/@arjenroodselaar@octodon.social">Arjen Roodselaar</a>.<br><strong><br>Links</strong></p><ul>
<li><a href="https://www.intel.com/content/www/us/en/products/details/network-io/programmable-ethernet-switch/tofino-series.html">Intel Tofino Series</a></li>
<li><a href="https://en.wikipedia.org/wiki/P4_(programming_language)">P4 (programming language) - Wikipedia</a></li>
<li><a href="https://github.com/p4lang/p4c">p4lang/p4c: P4_16 reference compiler</a></li>
<li><a href="https://github.com/oxidecomputer/p4">oxidecomputer/p4: A P4 compiler</a></li>
<li><a href="https://github.com/dtolnay/quote">The quote crate: Rust quasi-quoting</a></li>
<li><a href="https://wiki.ietf.org/group/rift">RIFT WG - Routing In Fat Trees | IETF Community Wiki</a></li>
</ul><p>Here's (much of) the live chat from the show:</p><ul>
<li>
<strong>ahl</strong> <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md">https://github.com/oxidecomputer/oxide-and-friends/blob/master/2021_11_29.md</a>
</li>
<li>
<strong>ahl</strong> That's the Sidecar switch episode</li>
<li>
<strong>bcantrill</strong> <a href="https://p4.org/">https://p4.org/</a>
</li>
<li>
<strong>admchl</strong> What does "at line rate" mean?</li>
<li>
<strong>Riking</strong> Line rate = As fast as the packets could possibly come. 1Gbit, 10Gbit, 100Gbit, etc</li>
<li>
<strong>admchl</strong> Do you need ASICs to hit that speed? I assume x86_64 is not going to be fast enough for these specialised operations?</li>
<li>
<strong>levon</strong> Yes, the Tofino 2 is the ASIC</li>
<li>
<strong>bcantrill</strong> You need ASICs</li>
<li>
<strong>bnaecker</strong> Yes, you really can't do these kinds of operations on a general purpose CPU.</li>
<li>
<strong>rng_drizzt</strong> Yeah, you need specialized silicon here.</li>
<li>
<strong>JustinAzoff</strong> Right, also often across all ports at the same time in both direction. a 48 port 10gbps switch will have a line rate of 960gbps (10 ** 48 ** 2)</li>
<li>
<strong>duckman</strong> So the advantage is being able to offload compute to the switch?</li>
<li>
<strong>bnaecker</strong> Yes, and specifically that you can separate the data plane (operations on the packets) from the control plane (decisions about what operations to allow or make).</li>
<li>
<strong>tahnok</strong> What's TCAM?</li>
<li>
<strong>levon</strong> Ternary Content Addressable Memory</li>
<li>
<strong>bnaecker</strong> <a href="https://en.wikipedia.org/wiki/Content-addressable_memory#Ternary_CAMs">https://en.wikipedia.org/wiki/Content-addressable_memory#Ternary_CAMs</a>
</li>
<li>
<strong>ryaeng</strong> Sure beats logging into a number of Cisco switches and making changes at the console.</li>
<li>
<strong>admchl</strong> This is my favourite episode in a long time, this is all really fascinating.</li>
<li>
<strong>rng_drizzt</strong> the first Sidecar episode was nearly 1.5 years ago ü§Ø , right after we cut the first rev</li>
<li>
<strong>levon</strong> That episode blew my mind</li>
<li>
<strong>duckman</strong> This sounds like a big deal on the scale of ebpf</li>
<li>
<strong>duckman</strong> Or bigger</li>
<li>
<strong>bnaecker</strong> It is extremely useful for understanding the processing pipelines. As long as you only run single-packet integration tests üôÇ</li>
<li>
<strong>od0</strong> just want to go out and find things to write P4 code for</li>
<li>
<strong>JustinAzoff</strong> &lt;@354365572554948608&gt; yeah one way to think about that sort of thing is that xdp can be used to run little programs on a nic, where p4 is kind of like that, but running on effectively a nic with 48+ ports</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/p4">https://github.com/oxidecomputer/p4</a>
</li>
<li>
<strong>SyntheticGate</strong> sidecar is the "codename" of our switch box</li>
<li>
<strong>SyntheticGate</strong> "gimlet" is our server sled</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/propolis">https://github.com/oxidecomputer/propolis</a>
</li>
<li>
<strong>wmf</strong> So you have P4 and OPTE in the hypervisor at the same time?</li>
<li>
<strong>bnaecker</strong> OPTE is in the host kernel.</li>
<li>
<strong>arjenroodselaar</strong> The P4 runtime Ry described only exists in the test bed, where it high level simulates the switches. OPTE is part of the production environment.</li>
<li>
<strong>arjenroodselaar</strong> The rough difference between P4 and OPTE is that P4 works on individual packets without much concept of a session (so it can't reason about TCP streams, packet order etc, so no firewall like functionality), while OPTE aims to operate on streams of packets.</li>
<li>
<strong>JustinAzoff</strong> So you can run 100 VMs on a test system and wire them up to your virtual switch compiled by x4c?</li>
<li>
<strong>arjenroodselaar</strong> Correct.</li>
<li>
<strong>bcantrill</strong> OPTE == Oxide Packet Transformation Engine</li>
<li>
<strong>admchl</strong> Gimlet?</li>
<li>
<strong>rng_drizzt</strong> Compute server</li>
<li>
<strong>rng_drizzt</strong> The Sidecar switch is actually <em>just</em> a PCIe peripheral to a Gimlet.</li>
<li>
<strong>bnaecker</strong> The Gimlet managing the Sidecar is often called a "Scrimlet" for "Sidecar attached Gimlet"</li>
<li>
<strong>Riking</strong> and "how do i reconfigure this giant network without hosing my ability to reconfigure this giant network"</li>
<li>
<strong>ShaunO</strong> can identify with that - we seriously struggle to keep our own products inter-operating, let alone anyone else's</li>
<li>
<strong>levon</strong> It can feel like a Sisyphean task.</li>
<li>
<strong>a172</strong> Setup a much smaller/simpler network in parallel that is accessible from "not your network" that gets you to the management interface.</li>
<li>
<strong>levon</strong> It's a whole new world when you can look at the actual table definitions in P4</li>
<li>
<strong>rng_drizzt</strong> Owning all the layers here is immensely beneficial</li>
<li>
<strong>levon</strong> Those DTrace probes have been very helpful</li>
<li>
<strong>bnaecker</strong> Those probes turned out to be everywhere. They are are in: SQL queries, HTTP queries, log messages, Propolis hypervisor state, virtual storage system, networking protocol messages, the P4 emulator, and probably more that I'm forgetting about.</li>
<li>
<strong>levon</strong> For those unfamiliar with the DTrace tool, or the rationale behind leveraging DTrace over other tracing / debugging tools: <a href="https://www.cs.princeton.edu/courses/archive/fall05/cos518/papers/dtrace.pdf">https://www.cs.princeton.edu/courses/archive/fall05/cos518/papers/dtrace.pdf</a>
</li>
<li>
<strong>bcantrill</strong> <a href="https://github.com/oxidecomputer/progenitor">https://github.com/oxidecomputer/progenitor</a>
</li>
<li>
<strong>ahl</strong> some notes on rust codegen: <a href="https://github.com/ahl/codegen-template">https://github.com/ahl/codegen-template</a>
</li>
<li>
<strong>arjenroodselaar</strong> DDM! Bring us home!</li>
<li>
<strong>a172</strong> it astonishes me how many "cloud" type architectures are built on v4 only or v4 first.</li>
<li>
<strong>a172</strong> IPv6 is <em>older than Wi-Fi</em>
</li>
<li>
<strong>a172</strong> It solves <em>real problems</em>. <strong>PLEASE</strong> use it.</li>
<li>
<strong>nyanotech</strong> yessss finally someone realizes broadcast domains are also failure domains</li>
<li>
<strong>JustinAzoff</strong> the worst part of v6 is trying to run dual stack v4+v6, v6 only networks are fairly simple</li>
<li>
<strong>levon</strong> And the bigger the broadcast domain, the more irritating it is to troubleshoot it</li>
<li>
<strong>bcantrill</strong> "Hash and pray"</li>
<li>
<strong>arjenroodselaar</strong> FWIW while DDM is a cool thing we're building, one of the "simple" tasks Tofino does for us is NAT between the networks of our customers and their VPC networks they implement on our platform.</li>
<li>
<strong>arjenroodselaar</strong> Simple NAT is still surprisingly expensive and being able to do that at line rate is pretty nice.</li>
<li>
<strong>Riking</strong> TCP retransmits in steady state seems like an obvious observation point?</li>
<li>
<strong>arjenroodselaar</strong> Yes, you see TCP retransmits.</li>
<li>
<strong>arjenroodselaar</strong> But if you're running say Memcache over UDP and you get a sudden burst of incoming data as a result of a large number of cache queries you drop those packets (because the buffers can't keep up) and you see cache request timeouts.</li>
<li>
<strong>arjenroodselaar</strong> FB did some work on this about 10 years ago to avoid this ingest and dropped packets which hurt your p99 latency.</li>
<li>
<strong>Riking</strong> yeah smartnic is pushing the intelligence to the machine</li>
<li>
<strong>levon</strong> I know someone who basically polled all of the switches for buffer drops in an attempt to divine which paths were dropping packets due to micro-congestion</li>
<li>
<strong>admchl</strong> I feel like I'm in a secret society meeting learning The Hidden Truth behind Reality of The Network</li>
<li>
<strong>wmf</strong> I would argue if the entire hypervisor is on the smart NIC then you're no worse off than the Oxide architecture</li>
<li>
<strong>a172</strong> I once stumbled on a bug where the vendor's custom protocol for monitoring (because snmp/syslog just cant keep up) had a trace log on the process, that could not be turned off. Some sort of race condition enabled it, and it happened on 1/3 of system boots. It was ~20k logs/s, iirc.</li>
<li>
<strong>a172</strong> (im going to look up those numbers)</li>
<li>
<strong>levon</strong> I haven't worked with a SmartNIC fast enough to do this well</li>
<li>
<strong>JustinAzoff</strong> We use a FPGA Nic in our products for fast packet capturing. the service that bootstraps it had an issue that caused it to log an error... for every single packet...</li>
<li>
<strong>JustinAzoff</strong> that managed to log the same error something like 250,000 times a second</li>
<li>
<strong>arjenroodselaar</strong> The problem with SmartNICs is that their power features are way less advanced than the power scaling that x86 CPUs do. So you either run them or you don't, and they come with a 50-75W penalty. Unless you can really get useful work done for that 50W budget, a x86 CPU is much more flexible.</li>
<li>
<strong>arjenroodselaar</strong> What we really want is an AMD Epyc SoC with some amount of FPGA fabric That would let you build whatever makes sense there while still having much of the flexibility with respect to how/where you consume power.</li>
<li>
<strong>a172</strong> It was enough to mess us up. 250k would have killed us even faster.</li>
<li>
<strong>JustinAzoff</strong> Yeah, it happily wrote that error message until the multi TB data array filled up. We reworked how log rate limiting and log rotation worked after that</li>
<li>
<strong>a172</strong> I was mostly amused that the process that the process that existed because snmp/syslog couldn't keep up was getting a syslog for every iteration of a loop in the process</li>
<li>
<strong>a172</strong> of course, if you are sending a packet for every packet you send, that sounds like it quickly becomes an exponential problem.</li>
<li>
<strong>JustinAzoff</strong> and to circle back around, this was code inside of the vendor SDK, that is not open source, that we couldn't fix ourselves. it's one of the only components of our system that we don't control. i wish we had our own NIC (that would probably run something like p4)</li>
<li>
<strong>levon</strong> And thus, this is how we become the way we are (at Oxide)</li>
<li>
<strong>a172</strong> ours was on production network hardware (wireless controller). There is no hope of having source or any insight true observability into it. (edit: saying there was <em>no</em> insight is a little harsh)</li>
<li>
<strong>JustinAzoff</strong> one thing that came up before was if p4 was like ebpf.. there's actually a ebpf backend for p4 that supports some of the features: <a href="https://github.com/p4lang/p4c/blob/main/backends/ebpf/README.md">https://github.com/p4lang/p4c/blob/main/backends/ebpf/README.md</a>
</li>
<li>
<strong>bcantrill</strong> Thanks, all!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Memory Safety with Yael Grauer</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>5</itunes:episode>
      <podcast:episode>5</podcast:episode>
      <itunes:title>Memory Safety with Yael Grauer</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">5776f5bd-b5d1-4079-8558-52e81cb80d91</guid>
      <link>https://share.transistor.fm/s/548eebb2</link>
      <description>
        <![CDATA[<p>Yael Grauer joined Bryan, Adam, Steve Klabnik, and the Oxide Friends to talk about her recent Consumer Reports article on memory safety and memory safe languages. How do we inform the general public? How do we persuade practitioners and companies? Thanks for joining us, Yael!</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by special guest <a href="https://mastodon.social/@yaelwrites">Yael Grauer</a>, and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them (experiment in turning the show live-chat into notes):</p><ul>
<li>
<strong>Nahum:</strong> <a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/">https://www.backblaze.com/blog/the-3-2-1-backup-strategy/</a> if anyone wants to read up on the 3-2-1 Backup strategy. 👅</li>
<li>
<strong>Cyborus:</strong> can we get a link to the talk?</li>
<li>
<strong>Nahum:</strong> <a href="https://www.youtube.com/watch?v=Q9s2NxILBK8">https://www.youtube.com/watch?v=Q9s2NxILBK8</a>
</li>
<li>
<strong>Nahum:</strong> <a href="https://digital-lab-wp.consumerreports.org/wp-content/uploads/2023/01/Memory-Safety-Convening-Report-.pdf">https://digital-lab-wp.consumerreports.org/wp-content/uploads/2023/01/Memory-Safety-Convening-Report-.pdf</a> via <a href="https://digital-lab-wp.consumerreports.org/2023/01/23/new-report-future-of-memory-safety/">https://digital-lab-wp.consumerreports.org/2023/01/23/new-report-future-of-memory-safety/</a>
</li>
<li>
<strong>Nahum:</strong> <a href="https://en.wikipedia.org/wiki/Pegasus_(spyware)">https://en.wikipedia.org/wiki/Pegasus_(spyware)</a>
</li>
<li>
<strong>Cyborus:</strong> "can we talk" =&gt; "hey. you. have a panic attack. anyways i got a cool sandwich"</li>
<li>
<strong>AaronW:</strong> "of course we should have seatbelts" 😄</li>
<li>
<strong>MattCampbell:</strong> but then you've got the C die-hards who say that Rust itself is too complex</li>
<li>
<strong>AaronW:</strong> <a href="https://twitter.com/markrussinovich/status/1571995117233504257?s=46">https://twitter.com/markrussinovich/status/1571995117233504257?s=46</a>
</li>
<li>
<strong>DanCrossNYC:</strong> People used to say the same thing about PL/I and recently the COBOL people have been saying the same thing. Nothing new under the sun.</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle">https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle</a>
</li>
<li>
<strong>DanCrossNYC:</strong> People who still want to treat C as a high-level assembler are saying the same stuff the PL/I people were saying when I was young.</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> In support of Yael, Ralph Nader wasn't/isn't an automotive engineer and he could still argue for lowering safety risks to car buyers. It's advocacy.</li>
<li>
<strong>cdaringe:</strong> As an ocaml user, i was hoping revery would take off <a href="https://github.com/revery-ui/revery">https://github.com/revery-ui/revery</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://press.princeton.edu/books/hardcover/9780691174952/the-tyranny-of-metrics">https://press.princeton.edu/books/hardcover/9780691174952/the-tyranny-of-metrics</a>
</li>
<li>
<strong>Saethlin:</strong> Wake up babe, new 0xide reading assignment dropped</li>
<li>
<strong>AaronW:</strong> Labelled like a can of pringles -- "20% more malloc() free()!"</li>
<li>
<strong>Nahum:</strong> Relevant to rules based accounting: <a href="https://www.schneier.com/blog/archives/2023/02/hacking-the-tax-code.html">https://www.schneier.com/blog/archives/2023/02/hacking-the-tax-code.html</a>
</li>
<li>
<strong>drew:</strong> Rigorous definitions of “unsafe code” just wont cut it ig</li>
<li>
<strong>ig:</strong> 40% less direct pointer arithmetic than the leading brand of operating systems</li>
<li>
<strong>a172:</strong> How does principle based accounting even work? Like, how do you define if something violates the principle or not, without just turning it back into rules based?</li>
<li>
<strong>Eden:</strong> Checkboxes are meaningful for operational checklists. Aviation and medicine use them pretty heavily. Not so meaningful for systemic work like developing a new aircraft or a new surgery.</li>
<li>
<strong>Eden:</strong> So I guess a rules-based approach works for lines of code, but breaks down for project-level decisions such as which language to use.</li>
<li>
<strong>Saethlin:</strong> The S in IoT is for security</li>
<li>
<strong>benstoltz:</strong> ifixit repairability score for HW should have an analog for SW/FW.</li>
<li>
<strong>DanCrossNYC:</strong> That's precisely what the pl/i folks acted like 25 years ago.</li>
<li>
<strong>sam801:</strong> c++ will live on thru carbon, cppfront, and val.</li>
<li>
<strong>DanCrossNYC:</strong> Prediction: carbon is doa.</li>
<li>
<strong>Saethlin:</strong> I'll believe it once anyone uses those</li>
<li>
<strong>ig:</strong> I think the other part is there's some really important pieces of software that everyone uses daily which use memory unsafe languages. Our web browsers, and our operating systems.</li>
<li>
<strong>AaronW:</strong> I live in a condo and I still unplug expensive electronics during a thunderstorm. Maybe it's because I had many electronics fried when I was young, and my first language was C++.</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> Same with answering a landline during a thunderstorm.</li>
<li>
<strong>DanCrossNYC:</strong> Had to stop training during thunderstorms in the Marines.</li>
<li>
<strong>Eden:</strong> My day job is security. 😉 I rail against compliance checklists on a regular basis because a lot of auditors insist on the checkbox rather than proper security consideration. For example, PCI-DSS requires password rotation, which everyone has known for decades leads to users picking worse passwords.</li>
<li>
<strong>alilleybrinker:</strong> <a href="https://www.usenix.org/system/files/sec22summer_alexopoulos.pdf">https://www.usenix.org/system/files/sec22summer_alexopoulos.pdf</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html">https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html</a>
</li>
<li>
<strong>a172:</strong> Google and Mozilla are making pretty good strides in migrating their browser to Rust. Still a <em>ton</em> of work to go, but entire systems have been moved to Rust.</li>
<li>
<strong>JamesBrock:</strong> "Lindy" <a href="https://en.wikipedia.org/wiki/Lindy_effect">https://en.wikipedia.org/wiki/Lindy_effect</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://security.googleblog.com/2021/04/rust-in-android-platform.html">https://security.googleblog.com/2021/04/rust-in-android-platform.html</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Another issue with C/C++ in particular is that UB causes latent bugs to surface years later.</li>
<li>
<strong>alilleybrinker:</strong> In the paper linked above, the average lifetime looks to have been about 3.5 years.</li>
<li>
<strong>Saethlin:</strong> I learned Rust faster than C++</li>
<li>
<strong>alilleybrinker:</strong> Related, you might be interested in EPSS: <a href="https://www.first.org/epss/">https://www.first.org/epss/</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Rust requires a bit of humility. For veteran C programmers, that can be a gut punch.</li>
<li>
<strong>srockets:</strong> “Compiler says no” is something that Haskell was proud of, but Rust is the first language I’ve seen that managed to get popular despite of it</li>
<li>
<strong>alilleybrinker:</strong> Humility also requires a lot of Rust <a href="https://github.com/oxidecomputer/humility">https://github.com/oxidecomputer/humility</a>
</li>
<li>
<strong>Eden:</strong> I do like the checklist item that every change must be accompanied by a ticket number. Then the company goes and changes the ticket system, and we lose all our history of why things are in place until it slowly builds up again.</li>
<li>
<strong>Eden:</strong> Seriously, checklists are great for operational tasks. Always include a ticket number. Always back up the config in this way ahead of time. Always notify these teams in this way when you're starting a change.</li>
<li>
<strong>AaronW:</strong> I have often wondered about learning multiple languages in parallel.</li>
<li>
<strong>JamesBrock:</strong> The easiest language to teach and learn will be Roc lang, too bad it's not ready yet.</li>
<li>
<strong>AaronW:</strong> A Python and Rust/Go, etc.</li>
<li>
<strong>srockets:</strong> As a first programming course?</li>
<li>
<strong>alilleybrinker:</strong> I've taught Rust to undergrads in a university Programming Languages course, which was it's own unique thing because it's about learning underlying concepts, not Rust per se.</li>
<li>
<strong>drew:</strong> We are getting dangerously close to the “teaches class in rust and then realizes it was a bad idea” prediction..!.</li>
<li>
<strong>ig:</strong> Under the "Government and Advocacy" part of the recommendations - there's probably an angle where FedRAMP Authorization could be used to drive increased usage of memory safe languages.</li>
<li>
<strong>srockets:</strong> As a first programming course I don’t think it’s going to work. As 2nd course, that would be great dedactically I think</li>
<li>
<strong>ahl:</strong> why not the SEC?</li>
<li>
<strong>statuscalamitous:</strong> everything is securities fraud</li>
<li>
<strong>alilleybrinker:</strong> Unsafe code? Securities fraud</li>
<li>
<strong>alilleybrinker:</strong> <a href="https://www.c-span.org/video/?c4808083/user-clip-rust-language-chosen">https://www.c-span.org/video/?c4808083/user-clip-rust-language-chosen</a>
</li>
<li>
<strong>alilleybrinker:</strong> Clip of that hearing.</li>
<li>
<strong>DanCrossNYC:</strong> At what point do we start putting in place Professional Engineer qualifications for software engineers, overseen by IEEE or something</li>
<li>
<strong>Eden:</strong> There are very few aircraft manufacturers and very few aircraft operators compared to software manufacturers and distributors/operators.</li>
<li>
<strong>Cyborus:</strong> "our product isn't hackable" is just seen as a challenge</li>
<li>
<strong>AaronW:</strong> Unbreakable Linux!</li>
<li>
<strong>Eden:</strong> So when there's an incident with an aircraft, the NTSB has very few people to talk to in the investigation.</li>
<li>
<strong>mxshift:</strong> "isn't hackable" usually is in the same list as "military-grade encryption"</li>
<li>
<strong>statuscalamitous:</strong> <a href="http://www.paulgraham.com/hijack.html">http://www.paulgraham.com/hijack.html</a>
</li>
<li>
<strong>Cyborus:</strong> oh that's awful</li>
<li>
<strong>alilleybrinker:</strong> Wow and it's still up</li>
<li>
<strong>Sevan:</strong> <a href="https://www.youtube.com/watch?v=vqgS4UT8Lp4">https://www.youtube.com/watch?v=vqgS4UT8Lp4</a>
</li>
<li>
<strong>ig:</strong> <a href="https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/">https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/</a> Section 4 is all about the software supply chain, and in this case it was the Secretary of Commerce and NIST was involved. Don't think it mentions memory safety, though.</li>
<li>
<strong>ahl:</strong> Klabnik 2024!</li>
<li>
<strong>ig:</strong> <a href="https://en.wikipedia.org/wiki/Iron_Ring">https://en.wikipedia.org/wiki/Iron_Ring</a>
</li>
<li>
<strong>alilleybrinker:</strong> Hey, also fun to note that the OpenSSF has an in-progress workstream (starting this week) to advocate for / advance the use of memory safe languages in open source.</li>
<li>
<strong>Saethlin:</strong> The Silicon Ring</li>
<li>
<strong>Nahum:</strong> For me the Therac 25 paper in college was really chilling.</li>
<li>
<strong>benstoltz:</strong> <a href="https://en.wikipedia.org/wiki/Therac-25">https://en.wikipedia.org/wiki/Therac-25</a>
</li>
<li>
<strong>Eden:</strong> <a href="https://en.wikipedia.org/wiki/Ritual_of_the_Calling_of_an_Engineer">https://en.wikipedia.org/wiki/Ritual_of_the_Calling_of_an_Engineer</a>
</li>
<li>
<strong>ahl:</strong> Oxide challenge coins!</li>
<li>
<strong>Dignissi:</strong> Perhaps a ring buffer?</li>
<li>
<strong>shandrew:</strong> Count me in for a challenge coin!</li>
<li>
<strong>DanCrossNYC:</strong> Challenge coins are a military thing.</li>
<li>
<strong>Nahum:</strong> <a href="https://en.wikipedia.org/wiki/Challenge_coin">https://en.wikipedia.org/wiki/Challenge_coin</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Oorah!</li>
<li>
<strong>AaronW:</strong> <a href="https://twitter.com/beaker/status/414894015926902785?s=46">https://twitter.com/beaker/status/414894015926902785?s=46</a>
</li>
<li>
<strong>DanCrossNYC:</strong> <a href="https://terminallance.com/2010/04/06/terminal-lance-27-challenge-coins-not-a-grunt-thing/">https://terminallance.com/2010/04/06/terminal-lance-27-challenge-coins-not-a-grunt-thing/</a>
</li>
<li>
<strong>alilleybrinker:</strong> It would be fun to go through the CWE (Common Weakness Enumeration) view for "Weaknesses in Software Written in C" and then characterize exactly which ones Rust stops: <a href="https://cwe.mitre.org/data/definitions/658.html">https://cwe.mitre.org/data/definitions/658.html</a>
</li>
<li>
<strong>mxshift:</strong> Taps "CVEs are a communications and coordination tool, not a quality metric" sign</li>
<li>
<strong>Nahum:</strong> <a href="https://99percentinvisible.org/episode/coin-check/">https://99percentinvisible.org/episode/coin-check/</a> was a great episode on challenge coins.</li>
<li>
<strong>shandrew:</strong> Our “moving Flickr out of yahoo” challenge coin <a href="https://flic.kr/p/2ogMSFg">https://flic.kr/p/2ogMSFg</a>
</li>
<li>
<strong>Sevan:</strong> <a href="https://twitter.com/MiodVallat/status/519065338898837505">https://twitter.com/MiodVallat/status/519065338898837505</a>
</li>
<li>
<strong>meta:</strong> thank you yael!! "- <strong>a172:</strong> I pulled this up thinking it may be a good basis for a coin design. I don't think that's actually the case, but it is cool and people here might like it: <a href="https://www.redbubble.com/i/sticker/Rust-colored-by-ShoeBill99/38427192.EJUG5">https://www.redbubble.com/i/sticker/Rust-colored-by-ShoeBill99/38427192.EJUG5</a>"</li>
<li>
<strong>AaronW:</strong> This has been fascinating, thank you &lt;@568519940550688778&gt;, Oxide, and friends.</li>
<li>
<strong>alilleybrinker:</strong> Great conversation! Thanks yael, and everyone else!</li>
<li>
<strong>od0:</strong> god bless</li>
<li>
<strong>AaronW:</strong> "Bless your heart"</li>
<li>
<strong>AaronDGoldman:</strong> Bless your heart</li>
<li>
<strong>Nahum:</strong> "Good on you" I've heard in the Australian kids TV show "Bluey"</li>
<li>
<strong>od0:</strong> bless up, Rust</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> unikernel is right out</li>
<li>
<strong>shandrew:</strong> Thanks Yael!</li>
<li>
<strong>admchl:</strong> This was so interesting, great talk</li>
<li>
<strong>AaronDGoldman:</strong> Memory safe unikurnal</li>
<li>
<strong>yael:</strong> Ha! I tried to get grad school friends off GroupMe and onto Signal but no luck</li>
<li>
<strong>bcantrill:</strong> The podcast on the Quebec Bridge collapse that I alluded to: <a href="https://huffduffer.com/adactio/513171">https://huffduffer.com/adactio/513171</a>
</li>
<li>
<strong>bcantrill:</strong> The Brady Heywood podcast is terrific -- highly recommend all of them</li>
<li>
<strong>yael:</strong> It's not Rust, but this is the intro Python course I mentioned <a href="https://www.edx.org/professional-certificate/introduction-to-python-programming">https://www.edx.org/professional-certificate/introduction-to-python-programming</a>
</li>
<li>
<strong>yael:</strong> Oh and the Digital Standard! <a href="https://thedigitalstandard.org/standard/">https://thedigitalstandard.org/standard/</a>
</li>
<li>
<strong>yael:</strong> Last thing! <a href="https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle">https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Yael Grauer joined Bryan, Adam, Steve Klabnik, and the Oxide Friends to talk about her recent Consumer Reports article on memory safety and memory safe languages. How do we inform the general public? How do we persuade practitioners and companies? Thanks for joining us, Yael!</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by special guest <a href="https://mastodon.social/@yaelwrites">Yael Grauer</a>, and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them (experiment in turning the show live-chat into notes):</p><ul>
<li>
<strong>Nahum:</strong> <a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/">https://www.backblaze.com/blog/the-3-2-1-backup-strategy/</a> if anyone wants to read up on the 3-2-1 Backup strategy. 👅</li>
<li>
<strong>Cyborus:</strong> can we get a link to the talk?</li>
<li>
<strong>Nahum:</strong> <a href="https://www.youtube.com/watch?v=Q9s2NxILBK8">https://www.youtube.com/watch?v=Q9s2NxILBK8</a>
</li>
<li>
<strong>Nahum:</strong> <a href="https://digital-lab-wp.consumerreports.org/wp-content/uploads/2023/01/Memory-Safety-Convening-Report-.pdf">https://digital-lab-wp.consumerreports.org/wp-content/uploads/2023/01/Memory-Safety-Convening-Report-.pdf</a> via <a href="https://digital-lab-wp.consumerreports.org/2023/01/23/new-report-future-of-memory-safety/">https://digital-lab-wp.consumerreports.org/2023/01/23/new-report-future-of-memory-safety/</a>
</li>
<li>
<strong>Nahum:</strong> <a href="https://en.wikipedia.org/wiki/Pegasus_(spyware)">https://en.wikipedia.org/wiki/Pegasus_(spyware)</a>
</li>
<li>
<strong>Cyborus:</strong> "can we talk" =&gt; "hey. you. have a panic attack. anyways i got a cool sandwich"</li>
<li>
<strong>AaronW:</strong> "of course we should have seatbelts" 😄</li>
<li>
<strong>MattCampbell:</strong> but then you've got the C die-hards who say that Rust itself is too complex</li>
<li>
<strong>AaronW:</strong> <a href="https://twitter.com/markrussinovich/status/1571995117233504257?s=46">https://twitter.com/markrussinovich/status/1571995117233504257?s=46</a>
</li>
<li>
<strong>DanCrossNYC:</strong> People used to say the same thing about PL/I and recently the COBOL people have been saying the same thing. Nothing new under the sun.</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle">https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle</a>
</li>
<li>
<strong>DanCrossNYC:</strong> People who still want to treat C as a high-level assembler are saying the same stuff the PL/I people were saying when I was young.</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> In support of Yael, Ralph Nader wasn't/isn't an automotive engineer and he could still argue for lowering safety risks to car buyers. It's advocacy.</li>
<li>
<strong>cdaringe:</strong> As an ocaml user, i was hoping revery would take off <a href="https://github.com/revery-ui/revery">https://github.com/revery-ui/revery</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://press.princeton.edu/books/hardcover/9780691174952/the-tyranny-of-metrics">https://press.princeton.edu/books/hardcover/9780691174952/the-tyranny-of-metrics</a>
</li>
<li>
<strong>Saethlin:</strong> Wake up babe, new 0xide reading assignment dropped</li>
<li>
<strong>AaronW:</strong> Labelled like a can of pringles -- "20% more malloc() free()!"</li>
<li>
<strong>Nahum:</strong> Relevant to rules based accounting: <a href="https://www.schneier.com/blog/archives/2023/02/hacking-the-tax-code.html">https://www.schneier.com/blog/archives/2023/02/hacking-the-tax-code.html</a>
</li>
<li>
<strong>drew:</strong> Rigorous definitions of “unsafe code” just wont cut it ig</li>
<li>
<strong>ig:</strong> 40% less direct pointer arithmetic than the leading brand of operating systems</li>
<li>
<strong>a172:</strong> How does principle based accounting even work? Like, how do you define if something violates the principle or not, without just turning it back into rules based?</li>
<li>
<strong>Eden:</strong> Checkboxes are meaningful for operational checklists. Aviation and medicine use them pretty heavily. Not so meaningful for systemic work like developing a new aircraft or a new surgery.</li>
<li>
<strong>Eden:</strong> So I guess a rules-based approach works for lines of code, but breaks down for project-level decisions such as which language to use.</li>
<li>
<strong>Saethlin:</strong> The S in IoT is for security</li>
<li>
<strong>benstoltz:</strong> ifixit repairability score for HW should have an analog for SW/FW.</li>
<li>
<strong>DanCrossNYC:</strong> That's precisely what the pl/i folks acted like 25 years ago.</li>
<li>
<strong>sam801:</strong> c++ will live on thru carbon, cppfront, and val.</li>
<li>
<strong>DanCrossNYC:</strong> Prediction: carbon is doa.</li>
<li>
<strong>Saethlin:</strong> I'll believe it once anyone uses those</li>
<li>
<strong>ig:</strong> I think the other part is there's some really important pieces of software that everyone uses daily which use memory unsafe languages. Our web browsers, and our operating systems.</li>
<li>
<strong>AaronW:</strong> I live in a condo and I still unplug expensive electronics during a thunderstorm. Maybe it's because I had many electronics fried when I was young, and my first language was C++.</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> Same with answering a landline during a thunderstorm.</li>
<li>
<strong>DanCrossNYC:</strong> Had to stop training during thunderstorms in the Marines.</li>
<li>
<strong>Eden:</strong> My day job is security. 😉 I rail against compliance checklists on a regular basis because a lot of auditors insist on the checkbox rather than proper security consideration. For example, PCI-DSS requires password rotation, which everyone has known for decades leads to users picking worse passwords.</li>
<li>
<strong>alilleybrinker:</strong> <a href="https://www.usenix.org/system/files/sec22summer_alexopoulos.pdf">https://www.usenix.org/system/files/sec22summer_alexopoulos.pdf</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html">https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html</a>
</li>
<li>
<strong>a172:</strong> Google and Mozilla are making pretty good strides in migrating their browser to Rust. Still a <em>ton</em> of work to go, but entire systems have been moved to Rust.</li>
<li>
<strong>JamesBrock:</strong> "Lindy" <a href="https://en.wikipedia.org/wiki/Lindy_effect">https://en.wikipedia.org/wiki/Lindy_effect</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://security.googleblog.com/2021/04/rust-in-android-platform.html">https://security.googleblog.com/2021/04/rust-in-android-platform.html</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Another issue with C/C++ in particular is that UB causes latent bugs to surface years later.</li>
<li>
<strong>alilleybrinker:</strong> In the paper linked above, the average lifetime looks to have been about 3.5 years.</li>
<li>
<strong>Saethlin:</strong> I learned Rust faster than C++</li>
<li>
<strong>alilleybrinker:</strong> Related, you might be interested in EPSS: <a href="https://www.first.org/epss/">https://www.first.org/epss/</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Rust requires a bit of humility. For veteran C programmers, that can be a gut punch.</li>
<li>
<strong>srockets:</strong> “Compiler says no” is something that Haskell was proud of, but Rust is the first language I’ve seen that managed to get popular despite of it</li>
<li>
<strong>alilleybrinker:</strong> Humility also requires a lot of Rust <a href="https://github.com/oxidecomputer/humility">https://github.com/oxidecomputer/humility</a>
</li>
<li>
<strong>Eden:</strong> I do like the checklist item that every change must be accompanied by a ticket number. Then the company goes and changes the ticket system, and we lose all our history of why things are in place until it slowly builds up again.</li>
<li>
<strong>Eden:</strong> Seriously, checklists are great for operational tasks. Always include a ticket number. Always back up the config in this way ahead of time. Always notify these teams in this way when you're starting a change.</li>
<li>
<strong>AaronW:</strong> I have often wondered about learning multiple languages in parallel.</li>
<li>
<strong>JamesBrock:</strong> The easiest language to teach and learn will be Roc lang, too bad it's not ready yet.</li>
<li>
<strong>AaronW:</strong> A Python and Rust/Go, etc.</li>
<li>
<strong>srockets:</strong> As a first programming course?</li>
<li>
<strong>alilleybrinker:</strong> I've taught Rust to undergrads in a university Programming Languages course, which was it's own unique thing because it's about learning underlying concepts, not Rust per se.</li>
<li>
<strong>drew:</strong> We are getting dangerously close to the “teaches class in rust and then realizes it was a bad idea” prediction..!.</li>
<li>
<strong>ig:</strong> Under the "Government and Advocacy" part of the recommendations - there's probably an angle where FedRAMP Authorization could be used to drive increased usage of memory safe languages.</li>
<li>
<strong>srockets:</strong> As a first programming course I don’t think it’s going to work. As 2nd course, that would be great dedactically I think</li>
<li>
<strong>ahl:</strong> why not the SEC?</li>
<li>
<strong>statuscalamitous:</strong> everything is securities fraud</li>
<li>
<strong>alilleybrinker:</strong> Unsafe code? Securities fraud</li>
<li>
<strong>alilleybrinker:</strong> <a href="https://www.c-span.org/video/?c4808083/user-clip-rust-language-chosen">https://www.c-span.org/video/?c4808083/user-clip-rust-language-chosen</a>
</li>
<li>
<strong>alilleybrinker:</strong> Clip of that hearing.</li>
<li>
<strong>DanCrossNYC:</strong> At what point do we start putting in place Professional Engineer qualifications for software engineers, overseen by IEEE or something</li>
<li>
<strong>Eden:</strong> There are very few aircraft manufacturers and very few aircraft operators compared to software manufacturers and distributors/operators.</li>
<li>
<strong>Cyborus:</strong> "our product isn't hackable" is just seen as a challenge</li>
<li>
<strong>AaronW:</strong> Unbreakable Linux!</li>
<li>
<strong>Eden:</strong> So when there's an incident with an aircraft, the NTSB has very few people to talk to in the investigation.</li>
<li>
<strong>mxshift:</strong> "isn't hackable" usually is in the same list as "military-grade encryption"</li>
<li>
<strong>statuscalamitous:</strong> <a href="http://www.paulgraham.com/hijack.html">http://www.paulgraham.com/hijack.html</a>
</li>
<li>
<strong>Cyborus:</strong> oh that's awful</li>
<li>
<strong>alilleybrinker:</strong> Wow and it's still up</li>
<li>
<strong>Sevan:</strong> <a href="https://www.youtube.com/watch?v=vqgS4UT8Lp4">https://www.youtube.com/watch?v=vqgS4UT8Lp4</a>
</li>
<li>
<strong>ig:</strong> <a href="https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/">https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/</a> Section 4 is all about the software supply chain, and in this case it was the Secretary of Commerce and NIST was involved. Don't think it mentions memory safety, though.</li>
<li>
<strong>ahl:</strong> Klabnik 2024!</li>
<li>
<strong>ig:</strong> <a href="https://en.wikipedia.org/wiki/Iron_Ring">https://en.wikipedia.org/wiki/Iron_Ring</a>
</li>
<li>
<strong>alilleybrinker:</strong> Hey, also fun to note that the OpenSSF has an in-progress workstream (starting this week) to advocate for / advance the use of memory safe languages in open source.</li>
<li>
<strong>Saethlin:</strong> The Silicon Ring</li>
<li>
<strong>Nahum:</strong> For me the Therac 25 paper in college was really chilling.</li>
<li>
<strong>benstoltz:</strong> <a href="https://en.wikipedia.org/wiki/Therac-25">https://en.wikipedia.org/wiki/Therac-25</a>
</li>
<li>
<strong>Eden:</strong> <a href="https://en.wikipedia.org/wiki/Ritual_of_the_Calling_of_an_Engineer">https://en.wikipedia.org/wiki/Ritual_of_the_Calling_of_an_Engineer</a>
</li>
<li>
<strong>ahl:</strong> Oxide challenge coins!</li>
<li>
<strong>Dignissi:</strong> Perhaps a ring buffer?</li>
<li>
<strong>shandrew:</strong> Count me in for a challenge coin!</li>
<li>
<strong>DanCrossNYC:</strong> Challenge coins are a military thing.</li>
<li>
<strong>Nahum:</strong> <a href="https://en.wikipedia.org/wiki/Challenge_coin">https://en.wikipedia.org/wiki/Challenge_coin</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Oorah!</li>
<li>
<strong>AaronW:</strong> <a href="https://twitter.com/beaker/status/414894015926902785?s=46">https://twitter.com/beaker/status/414894015926902785?s=46</a>
</li>
<li>
<strong>DanCrossNYC:</strong> <a href="https://terminallance.com/2010/04/06/terminal-lance-27-challenge-coins-not-a-grunt-thing/">https://terminallance.com/2010/04/06/terminal-lance-27-challenge-coins-not-a-grunt-thing/</a>
</li>
<li>
<strong>alilleybrinker:</strong> It would be fun to go through the CWE (Common Weakness Enumeration) view for "Weaknesses in Software Written in C" and then characterize exactly which ones Rust stops: <a href="https://cwe.mitre.org/data/definitions/658.html">https://cwe.mitre.org/data/definitions/658.html</a>
</li>
<li>
<strong>mxshift:</strong> Taps "CVEs are a communications and coordination tool, not a quality metric" sign</li>
<li>
<strong>Nahum:</strong> <a href="https://99percentinvisible.org/episode/coin-check/">https://99percentinvisible.org/episode/coin-check/</a> was a great episode on challenge coins.</li>
<li>
<strong>shandrew:</strong> Our “moving Flickr out of yahoo” challenge coin <a href="https://flic.kr/p/2ogMSFg">https://flic.kr/p/2ogMSFg</a>
</li>
<li>
<strong>Sevan:</strong> <a href="https://twitter.com/MiodVallat/status/519065338898837505">https://twitter.com/MiodVallat/status/519065338898837505</a>
</li>
<li>
<strong>meta:</strong> thank you yael!! "- <strong>a172:</strong> I pulled this up thinking it may be a good basis for a coin design. I don't think that's actually the case, but it is cool and people here might like it: <a href="https://www.redbubble.com/i/sticker/Rust-colored-by-ShoeBill99/38427192.EJUG5">https://www.redbubble.com/i/sticker/Rust-colored-by-ShoeBill99/38427192.EJUG5</a>"</li>
<li>
<strong>AaronW:</strong> This has been fascinating, thank you &lt;@568519940550688778&gt;, Oxide, and friends.</li>
<li>
<strong>alilleybrinker:</strong> Great conversation! Thanks yael, and everyone else!</li>
<li>
<strong>od0:</strong> god bless</li>
<li>
<strong>AaronW:</strong> "Bless your heart"</li>
<li>
<strong>AaronDGoldman:</strong> Bless your heart</li>
<li>
<strong>Nahum:</strong> "Good on you" I've heard in the Australian kids TV show "Bluey"</li>
<li>
<strong>od0:</strong> bless up, Rust</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> unikernel is right out</li>
<li>
<strong>shandrew:</strong> Thanks Yael!</li>
<li>
<strong>admchl:</strong> This was so interesting, great talk</li>
<li>
<strong>AaronDGoldman:</strong> Memory safe unikurnal</li>
<li>
<strong>yael:</strong> Ha! I tried to get grad school friends off GroupMe and onto Signal but no luck</li>
<li>
<strong>bcantrill:</strong> The podcast on the Quebec Bridge collapse that I alluded to: <a href="https://huffduffer.com/adactio/513171">https://huffduffer.com/adactio/513171</a>
</li>
<li>
<strong>bcantrill:</strong> The Brady Heywood podcast is terrific -- highly recommend all of them</li>
<li>
<strong>yael:</strong> It's not Rust, but this is the intro Python course I mentioned <a href="https://www.edx.org/professional-certificate/introduction-to-python-programming">https://www.edx.org/professional-certificate/introduction-to-python-programming</a>
</li>
<li>
<strong>yael:</strong> Oh and the Digital Standard! <a href="https://thedigitalstandard.org/standard/">https://thedigitalstandard.org/standard/</a>
</li>
<li>
<strong>yael:</strong> Last thing! <a href="https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle">https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 13 Feb 2023 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/548eebb2/0954e2c3.mp3" length="74788938" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4672</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Yael Grauer joined Bryan, Adam, Steve Klabnik, and the Oxide Friends to talk about her recent Consumer Reports article on memory safety and memory safe languages. How do we inform the general public? How do we persuade practitioners and companies? Thanks for joining us, Yael!</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by special guest <a href="https://mastodon.social/@yaelwrites">Yael Grauer</a>, and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>.</p><p>Some of the topics we hit on, in the order that we hit them (experiment in turning the show live-chat into notes):</p><ul>
<li>
<strong>Nahum:</strong> <a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/">https://www.backblaze.com/blog/the-3-2-1-backup-strategy/</a> if anyone wants to read up on the 3-2-1 Backup strategy. 👅</li>
<li>
<strong>Cyborus:</strong> can we get a link to the talk?</li>
<li>
<strong>Nahum:</strong> <a href="https://www.youtube.com/watch?v=Q9s2NxILBK8">https://www.youtube.com/watch?v=Q9s2NxILBK8</a>
</li>
<li>
<strong>Nahum:</strong> <a href="https://digital-lab-wp.consumerreports.org/wp-content/uploads/2023/01/Memory-Safety-Convening-Report-.pdf">https://digital-lab-wp.consumerreports.org/wp-content/uploads/2023/01/Memory-Safety-Convening-Report-.pdf</a> via <a href="https://digital-lab-wp.consumerreports.org/2023/01/23/new-report-future-of-memory-safety/">https://digital-lab-wp.consumerreports.org/2023/01/23/new-report-future-of-memory-safety/</a>
</li>
<li>
<strong>Nahum:</strong> <a href="https://en.wikipedia.org/wiki/Pegasus_(spyware)">https://en.wikipedia.org/wiki/Pegasus_(spyware)</a>
</li>
<li>
<strong>Cyborus:</strong> "can we talk" =&gt; "hey. you. have a panic attack. anyways i got a cool sandwich"</li>
<li>
<strong>AaronW:</strong> "of course we should have seatbelts" 😄</li>
<li>
<strong>MattCampbell:</strong> but then you've got the C die-hards who say that Rust itself is too complex</li>
<li>
<strong>AaronW:</strong> <a href="https://twitter.com/markrussinovich/status/1571995117233504257?s=46">https://twitter.com/markrussinovich/status/1571995117233504257?s=46</a>
</li>
<li>
<strong>DanCrossNYC:</strong> People used to say the same thing about PL/I and recently the COBOL people have been saying the same thing. Nothing new under the sun.</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle">https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle</a>
</li>
<li>
<strong>DanCrossNYC:</strong> People who still want to treat C as a high-level assembler are saying the same stuff the PL/I people were saying when I was young.</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> In support of Yael, Ralph Nader wasn't/isn't an automotive engineer and he could still argue for lowering safety risks to car buyers. It's advocacy.</li>
<li>
<strong>cdaringe:</strong> As an ocaml user, i was hoping revery would take off <a href="https://github.com/revery-ui/revery">https://github.com/revery-ui/revery</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://press.princeton.edu/books/hardcover/9780691174952/the-tyranny-of-metrics">https://press.princeton.edu/books/hardcover/9780691174952/the-tyranny-of-metrics</a>
</li>
<li>
<strong>Saethlin:</strong> Wake up babe, new 0xide reading assignment dropped</li>
<li>
<strong>AaronW:</strong> Labelled like a can of pringles -- "20% more malloc() free()!"</li>
<li>
<strong>Nahum:</strong> Relevant to rules based accounting: <a href="https://www.schneier.com/blog/archives/2023/02/hacking-the-tax-code.html">https://www.schneier.com/blog/archives/2023/02/hacking-the-tax-code.html</a>
</li>
<li>
<strong>drew:</strong> Rigorous definitions of “unsafe code” just wont cut it ig</li>
<li>
<strong>ig:</strong> 40% less direct pointer arithmetic than the leading brand of operating systems</li>
<li>
<strong>a172:</strong> How does principle based accounting even work? Like, how do you define if something violates the principle or not, without just turning it back into rules based?</li>
<li>
<strong>Eden:</strong> Checkboxes are meaningful for operational checklists. Aviation and medicine use them pretty heavily. Not so meaningful for systemic work like developing a new aircraft or a new surgery.</li>
<li>
<strong>Eden:</strong> So I guess a rules-based approach works for lines of code, but breaks down for project-level decisions such as which language to use.</li>
<li>
<strong>Saethlin:</strong> The S in IoT is for security</li>
<li>
<strong>benstoltz:</strong> ifixit repairability score for HW should have an analog for SW/FW.</li>
<li>
<strong>DanCrossNYC:</strong> That's precisely what the pl/i folks acted like 25 years ago.</li>
<li>
<strong>sam801:</strong> c++ will live on thru carbon, cppfront, and val.</li>
<li>
<strong>DanCrossNYC:</strong> Prediction: carbon is doa.</li>
<li>
<strong>Saethlin:</strong> I'll believe it once anyone uses those</li>
<li>
<strong>ig:</strong> I think the other part is there's some really important pieces of software that everyone uses daily which use memory unsafe languages. Our web browsers, and our operating systems.</li>
<li>
<strong>AaronW:</strong> I live in a condo and I still unplug expensive electronics during a thunderstorm. Maybe it's because I had many electronics fried when I was young, and my first language was C++.</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> Same with answering a landline during a thunderstorm.</li>
<li>
<strong>DanCrossNYC:</strong> Had to stop training during thunderstorms in the Marines.</li>
<li>
<strong>Eden:</strong> My day job is security. 😉 I rail against compliance checklists on a regular basis because a lot of auditors insist on the checkbox rather than proper security consideration. For example, PCI-DSS requires password rotation, which everyone has known for decades leads to users picking worse passwords.</li>
<li>
<strong>alilleybrinker:</strong> <a href="https://www.usenix.org/system/files/sec22summer_alexopoulos.pdf">https://www.usenix.org/system/files/sec22summer_alexopoulos.pdf</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html">https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html</a>
</li>
<li>
<strong>a172:</strong> Google and Mozilla are making pretty good strides in migrating their browser to Rust. Still a <em>ton</em> of work to go, but entire systems have been moved to Rust.</li>
<li>
<strong>JamesBrock:</strong> "Lindy" <a href="https://en.wikipedia.org/wiki/Lindy_effect">https://en.wikipedia.org/wiki/Lindy_effect</a>
</li>
<li>
<strong>statuscalamitous:</strong> <a href="https://security.googleblog.com/2021/04/rust-in-android-platform.html">https://security.googleblog.com/2021/04/rust-in-android-platform.html</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Another issue with C/C++ in particular is that UB causes latent bugs to surface years later.</li>
<li>
<strong>alilleybrinker:</strong> In the paper linked above, the average lifetime looks to have been about 3.5 years.</li>
<li>
<strong>Saethlin:</strong> I learned Rust faster than C++</li>
<li>
<strong>alilleybrinker:</strong> Related, you might be interested in EPSS: <a href="https://www.first.org/epss/">https://www.first.org/epss/</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Rust requires a bit of humility. For veteran C programmers, that can be a gut punch.</li>
<li>
<strong>srockets:</strong> “Compiler says no” is something that Haskell was proud of, but Rust is the first language I’ve seen that managed to get popular despite of it</li>
<li>
<strong>alilleybrinker:</strong> Humility also requires a lot of Rust <a href="https://github.com/oxidecomputer/humility">https://github.com/oxidecomputer/humility</a>
</li>
<li>
<strong>Eden:</strong> I do like the checklist item that every change must be accompanied by a ticket number. Then the company goes and changes the ticket system, and we lose all our history of why things are in place until it slowly builds up again.</li>
<li>
<strong>Eden:</strong> Seriously, checklists are great for operational tasks. Always include a ticket number. Always back up the config in this way ahead of time. Always notify these teams in this way when you're starting a change.</li>
<li>
<strong>AaronW:</strong> I have often wondered about learning multiple languages in parallel.</li>
<li>
<strong>JamesBrock:</strong> The easiest language to teach and learn will be Roc lang, too bad it's not ready yet.</li>
<li>
<strong>AaronW:</strong> A Python and Rust/Go, etc.</li>
<li>
<strong>srockets:</strong> As a first programming course?</li>
<li>
<strong>alilleybrinker:</strong> I've taught Rust to undergrads in a university Programming Languages course, which was it's own unique thing because it's about learning underlying concepts, not Rust per se.</li>
<li>
<strong>drew:</strong> We are getting dangerously close to the “teaches class in rust and then realizes it was a bad idea” prediction..!.</li>
<li>
<strong>ig:</strong> Under the "Government and Advocacy" part of the recommendations - there's probably an angle where FedRAMP Authorization could be used to drive increased usage of memory safe languages.</li>
<li>
<strong>srockets:</strong> As a first programming course I don’t think it’s going to work. As 2nd course, that would be great dedactically I think</li>
<li>
<strong>ahl:</strong> why not the SEC?</li>
<li>
<strong>statuscalamitous:</strong> everything is securities fraud</li>
<li>
<strong>alilleybrinker:</strong> Unsafe code? Securities fraud</li>
<li>
<strong>alilleybrinker:</strong> <a href="https://www.c-span.org/video/?c4808083/user-clip-rust-language-chosen">https://www.c-span.org/video/?c4808083/user-clip-rust-language-chosen</a>
</li>
<li>
<strong>alilleybrinker:</strong> Clip of that hearing.</li>
<li>
<strong>DanCrossNYC:</strong> At what point do we start putting in place Professional Engineer qualifications for software engineers, overseen by IEEE or something</li>
<li>
<strong>Eden:</strong> There are very few aircraft manufacturers and very few aircraft operators compared to software manufacturers and distributors/operators.</li>
<li>
<strong>Cyborus:</strong> "our product isn't hackable" is just seen as a challenge</li>
<li>
<strong>AaronW:</strong> Unbreakable Linux!</li>
<li>
<strong>Eden:</strong> So when there's an incident with an aircraft, the NTSB has very few people to talk to in the investigation.</li>
<li>
<strong>mxshift:</strong> "isn't hackable" usually is in the same list as "military-grade encryption"</li>
<li>
<strong>statuscalamitous:</strong> <a href="http://www.paulgraham.com/hijack.html">http://www.paulgraham.com/hijack.html</a>
</li>
<li>
<strong>Cyborus:</strong> oh that's awful</li>
<li>
<strong>alilleybrinker:</strong> Wow and it's still up</li>
<li>
<strong>Sevan:</strong> <a href="https://www.youtube.com/watch?v=vqgS4UT8Lp4">https://www.youtube.com/watch?v=vqgS4UT8Lp4</a>
</li>
<li>
<strong>ig:</strong> <a href="https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/">https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/</a> Section 4 is all about the software supply chain, and in this case it was the Secretary of Commerce and NIST was involved. Don't think it mentions memory safety, though.</li>
<li>
<strong>ahl:</strong> Klabnik 2024!</li>
<li>
<strong>ig:</strong> <a href="https://en.wikipedia.org/wiki/Iron_Ring">https://en.wikipedia.org/wiki/Iron_Ring</a>
</li>
<li>
<strong>alilleybrinker:</strong> Hey, also fun to note that the OpenSSF has an in-progress workstream (starting this week) to advocate for / advance the use of memory safe languages in open source.</li>
<li>
<strong>Saethlin:</strong> The Silicon Ring</li>
<li>
<strong>Nahum:</strong> For me the Therac 25 paper in college was really chilling.</li>
<li>
<strong>benstoltz:</strong> <a href="https://en.wikipedia.org/wiki/Therac-25">https://en.wikipedia.org/wiki/Therac-25</a>
</li>
<li>
<strong>Eden:</strong> <a href="https://en.wikipedia.org/wiki/Ritual_of_the_Calling_of_an_Engineer">https://en.wikipedia.org/wiki/Ritual_of_the_Calling_of_an_Engineer</a>
</li>
<li>
<strong>ahl:</strong> Oxide challenge coins!</li>
<li>
<strong>Dignissi:</strong> Perhaps a ring buffer?</li>
<li>
<strong>shandrew:</strong> Count me in for a challenge coin!</li>
<li>
<strong>DanCrossNYC:</strong> Challenge coins are a military thing.</li>
<li>
<strong>Nahum:</strong> <a href="https://en.wikipedia.org/wiki/Challenge_coin">https://en.wikipedia.org/wiki/Challenge_coin</a>
</li>
<li>
<strong>DanCrossNYC:</strong> Oorah!</li>
<li>
<strong>AaronW:</strong> <a href="https://twitter.com/beaker/status/414894015926902785?s=46">https://twitter.com/beaker/status/414894015926902785?s=46</a>
</li>
<li>
<strong>DanCrossNYC:</strong> <a href="https://terminallance.com/2010/04/06/terminal-lance-27-challenge-coins-not-a-grunt-thing/">https://terminallance.com/2010/04/06/terminal-lance-27-challenge-coins-not-a-grunt-thing/</a>
</li>
<li>
<strong>alilleybrinker:</strong> It would be fun to go through the CWE (Common Weakness Enumeration) view for "Weaknesses in Software Written in C" and then characterize exactly which ones Rust stops: <a href="https://cwe.mitre.org/data/definitions/658.html">https://cwe.mitre.org/data/definitions/658.html</a>
</li>
<li>
<strong>mxshift:</strong> Taps "CVEs are a communications and coordination tool, not a quality metric" sign</li>
<li>
<strong>Nahum:</strong> <a href="https://99percentinvisible.org/episode/coin-check/">https://99percentinvisible.org/episode/coin-check/</a> was a great episode on challenge coins.</li>
<li>
<strong>shandrew:</strong> Our “moving Flickr out of yahoo” challenge coin <a href="https://flic.kr/p/2ogMSFg">https://flic.kr/p/2ogMSFg</a>
</li>
<li>
<strong>Sevan:</strong> <a href="https://twitter.com/MiodVallat/status/519065338898837505">https://twitter.com/MiodVallat/status/519065338898837505</a>
</li>
<li>
<strong>meta:</strong> thank you yael!! "- <strong>a172:</strong> I pulled this up thinking it may be a good basis for a coin design. I don't think that's actually the case, but it is cool and people here might like it: <a href="https://www.redbubble.com/i/sticker/Rust-colored-by-ShoeBill99/38427192.EJUG5">https://www.redbubble.com/i/sticker/Rust-colored-by-ShoeBill99/38427192.EJUG5</a>"</li>
<li>
<strong>AaronW:</strong> This has been fascinating, thank you &lt;@568519940550688778&gt;, Oxide, and friends.</li>
<li>
<strong>alilleybrinker:</strong> Great conversation! Thanks yael, and everyone else!</li>
<li>
<strong>od0:</strong> god bless</li>
<li>
<strong>AaronW:</strong> "Bless your heart"</li>
<li>
<strong>AaronDGoldman:</strong> Bless your heart</li>
<li>
<strong>Nahum:</strong> "Good on you" I've heard in the Australian kids TV show "Bluey"</li>
<li>
<strong>od0:</strong> bless up, Rust</li>
<li>
<strong>Eric Likness - carpetbomberz.com:</strong> unikernel is right out</li>
<li>
<strong>shandrew:</strong> Thanks Yael!</li>
<li>
<strong>admchl:</strong> This was so interesting, great talk</li>
<li>
<strong>AaronDGoldman:</strong> Memory safe unikurnal</li>
<li>
<strong>yael:</strong> Ha! I tried to get grad school friends off GroupMe and onto Signal but no luck</li>
<li>
<strong>bcantrill:</strong> The podcast on the Quebec Bridge collapse that I alluded to: <a href="https://huffduffer.com/adactio/513171">https://huffduffer.com/adactio/513171</a>
</li>
<li>
<strong>bcantrill:</strong> The Brady Heywood podcast is terrific -- highly recommend all of them</li>
<li>
<strong>yael:</strong> It's not Rust, but this is the intro Python course I mentioned <a href="https://www.edx.org/professional-certificate/introduction-to-python-programming">https://www.edx.org/professional-certificate/introduction-to-python-programming</a>
</li>
<li>
<strong>yael:</strong> Oh and the Digital Standard! <a href="https://thedigitalstandard.org/standard/">https://thedigitalstandard.org/standard/</a>
</li>
<li>
<strong>yael:</strong> Last thing! <a href="https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle">https://blog.yossarian.net/2023/02/11/The-unsafe-language-doom-principle</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Oxide and the Chamber of Mysteries</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>4</itunes:episode>
      <podcast:episode>4</podcast:episode>
      <itunes:title>Oxide and the Chamber of Mysteries</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">49005d8c-b5a8-4ceb-8253-d44cf20dd565</guid>
      <link>https://share.transistor.fm/s/96ccbcf2</link>
      <description>
        <![CDATA[<p>Members of the Oxide team join Bryan and Adam to talk about our journey through compliance (spoiler: we passed!). </p><p><b>Oxide and Friends: February 6th, 2023 </b></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/NVZ80_tbkbc">the recording from February 6th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers on February 6th included <a href="https://octodon.social/@arjenroodselaar">Arjen Roodselaar</a>, <a href="https://hachyderm.io/@SyntheticGate">Nathanael Huffman</a>, <a href="https://mastodon.social/@refugeesus">Robert Keith</a>, <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">Eric Aasen</a>, and <a href="https://m.unix.house/@jmc">Josh Clulow</a>,</p><p>Some of the topics we hit on, in the order that we hit them:</p><p></p><p></p><p></p><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Members of the Oxide team join Bryan and Adam to talk about our journey through compliance (spoiler: we passed!). </p><p><b>Oxide and Friends: February 6th, 2023 </b></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/NVZ80_tbkbc">the recording from February 6th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers on February 6th included <a href="https://octodon.social/@arjenroodselaar">Arjen Roodselaar</a>, <a href="https://hachyderm.io/@SyntheticGate">Nathanael Huffman</a>, <a href="https://mastodon.social/@refugeesus">Robert Keith</a>, <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">Eric Aasen</a>, and <a href="https://m.unix.house/@jmc">Josh Clulow</a>,</p><p>Some of the topics we hit on, in the order that we hit them:</p><p></p><p></p><p></p><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 06 Feb 2023 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/96ccbcf2/b5d39b4f.mp3" length="96786625" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6047</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Members of the Oxide team join Bryan and Adam to talk about our journey through compliance (spoiler: we passed!). </p><p><b>Oxide and Friends: February 6th, 2023 </b></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/NVZ80_tbkbc">the recording from February 6th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers on February 6th included <a href="https://octodon.social/@arjenroodselaar">Arjen Roodselaar</a>, <a href="https://hachyderm.io/@SyntheticGate">Nathanael Huffman</a>, <a href="https://mastodon.social/@refugeesus">Robert Keith</a>, <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">Eric Aasen</a>, and <a href="https://m.unix.house/@jmc">Josh Clulow</a>,</p><p>Some of the topics we hit on, in the order that we hit them:</p><p></p><p></p><p></p><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Revisiting Unikernels</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>3</itunes:episode>
      <podcast:episode>3</podcast:episode>
      <itunes:title>Revisiting Unikernels</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">0a2f05fc-2404-48fe-82aa-3fcb26f4b3be</guid>
      <link>https://share.transistor.fm/s/af4d7b61</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends: January 23rd, 2023</b></p><p><strong>Revisiting Unikernels</strong></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/2WLhwgBH-cg">the recording from January 23rd, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers on January 23rd included <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>, <a href="https://discuss.systems/@cross">Dan Cross</a>, and others.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul><li>Bryan's 2016 blog post <a href="http://dtrace.org/blogs/bmc/2016/01/22/unikernels-are-unfit-for-production/">Unikernels are unfit for production</a>
</li></ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p><p>Give feedback</p><p><br></p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends: January 23rd, 2023</b></p><p><strong>Revisiting Unikernels</strong></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/2WLhwgBH-cg">the recording from January 23rd, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, speakers on January 23rd included <a href="https://twitter.com/steveklabnik">Steve Klabnik</a>, <a href="https://discuss.systems/@cross">Dan Cross</a>, and others.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul><li>Bryan's 2016 blog post <a href="http://dtrace.org/blogs/bmc/2016/01/22/unikernels-are-unfit-for-production/">Unikernels are unfit for production</a>
</li></ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p><p>Give feedback</p><p><br></p><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 23 Jan 2023 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/af4d7b61/50bdec53.mp3" length="79965392" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4996</itunes:duration>
      <itunes:summary>Bryan, Adam, and the Oxide Friends revisit a 7 year old blog post from Bryan regarding unikernels.</itunes:summary>
      <itunes:subtitle>Bryan, Adam, and the Oxide Friends revisit a 7 year old blog post from Bryan regarding unikernels.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Power of Proto Boards!</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>2</itunes:episode>
      <podcast:episode>2</podcast:episode>
      <itunes:title>The Power of Proto Boards!</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">17484568-1707-4399-b388-4ada67117adb</guid>
      <link>https://share.transistor.fm/s/f290b7dd</link>
      <description>
        <![CDATA[<p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/XmiWIlFvSYs">the recording from January 16th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by <a href="https://hachyderm.io/@SyntheticGate">Nathanael Huffman</a>, <a href="https://hachyderm.io/@cliffle">Cliff Biffle</a>, <a href="https://social.treehouse.systems/@mxshift">Rick Altherr</a>, <a href="https://hachyderm.io/@mjk">Matt Keeter</a>, <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">Eric Aasen</a>, and <a href="https://discuss.systems/@cross">Dan Cross</a>.</p><p>Check out the <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2023_01_16.md">show notes on github</a> to browse the images.</p><p></p><ul>
<li>(00:00) - Intro</li>
<li>(11:42) - Gemini</li>
<li>(18:33) - Root of Trust (RoT) carrier</li>
<li>(20:53) - Power</li>
<li>(23:41) - Trimmed Power</li>
<li>(28:11) - SPI MUX</li>
<li>(29:38) - SPI MUX rework</li>
<li>(33:14) - Gimletlet</li>
<li>(41:10) - Gimletlet NIC</li>
<li>(46:28) - DIMMlet</li>
<li>(56:39) - Gimletlet mk2</li>
<li>(58:27) - Adapters</li>
<li>(59:54) - Adapters zoom</li>
<li>(01:01:47) - Ignition (FPGA)</li>
<li>(01:04:40) - Gimletlet peripherals</li>
<li>(01:06:12) - Gimletlet with management switch (1/2)</li>
<li>(01:07:22) - Gimletlet with management switch (2/2)</li>
<li>(01:09:21) - Kludge.2 (K.2)</li>
<li>(01:16:23) - Donglet</li>
<li>(01:25:49) - RoT carrier carrier</li>
<li>(01:26:17) - Tranceiver load tester</li>
<li>(01:29:06) - Load slammer for Tofino 2</li>
<li>(01:31:30) - Power (improved)</li>
<li>(01:32:08) - Part Toaster</li>
<li>(01:33:28) - K.2r2</li>
</ul><br><p>Images of each proto board:</p><ul>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=702">@11:42</a> Gemini </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1113">@18:33</a> Root of Trust (RoT) carrier </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1253">@20:53</a> Power </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1421">@23:41</a> Trimmed Power </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1691">@28:11</a> SPI MUX </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1778">@29:38</a> SPI MUX rework </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1994">@33:14</a> Gimletlet </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=2470">@41:10</a> Gimletlet NIC </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=2788">@46:28</a> DIMMlet </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3399">@56:39</a> Gimletlet mk2 </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3507">@58:27</a> Adapter zoom </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3594">@59:54</a> Adapters zoom </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3707">@1:01:47</a> Ignition (FPGA) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3880">@1:04:40</a> Gimletlet peripherals </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3972">@1:06:12</a> Gimletlet with management switch (1/2) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=4042">@1:07:22</a> Gimletlet with management switch (2/2) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=4161">@1:09:21</a> Kludge.2 (K.2) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=4583">@1:16:23</a> Donglet </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5149">@1:25:49</a> RoT carrier carrier </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5177">@1:26:17</a> Transceiver load tester </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5346">@1:29:06</a> Load Slammer for Tofino 2  </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5490">@1:31:30</a> Power (improved) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5528">@1:32:08</a> Part Toaster </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5608">@1:33:28</a> K.2r2 </li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/XmiWIlFvSYs">the recording from January 16th, 2023</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, we were joined by <a href="https://hachyderm.io/@SyntheticGate">Nathanael Huffman</a>, <a href="https://hachyderm.io/@cliffle">Cliff Biffle</a>, <a href="https://social.treehouse.systems/@mxshift">Rick Altherr</a>, <a href="https://hachyderm.io/@mjk">Matt Keeter</a>, <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">Eric Aasen</a>, and <a href="https://discuss.systems/@cross">Dan Cross</a>.</p><p>Check out the <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2023_01_16.md">show notes on github</a> to browse the images.</p><p></p><ul>
<li>(00:00) - Intro</li>
<li>(11:42) - Gemini</li>
<li>(18:33) - Root of Trust (RoT) carrier</li>
<li>(20:53) - Power</li>
<li>(23:41) - Trimmed Power</li>
<li>(28:11) - SPI MUX</li>
<li>(29:38) - SPI MUX rework</li>
<li>(33:14) - Gimletlet</li>
<li>(41:10) - Gimletlet NIC</li>
<li>(46:28) - DIMMlet</li>
<li>(56:39) - Gimletlet mk2</li>
<li>(58:27) - Adapters</li>
<li>(59:54) - Adapters zoom</li>
<li>(01:01:47) - Ignition (FPGA)</li>
<li>(01:04:40) - Gimletlet peripherals</li>
<li>(01:06:12) - Gimletlet with management switch (1/2)</li>
<li>(01:07:22) - Gimletlet with management switch (2/2)</li>
<li>(01:09:21) - Kludge.2 (K.2)</li>
<li>(01:16:23) - Donglet</li>
<li>(01:25:49) - RoT carrier carrier</li>
<li>(01:26:17) - Tranceiver load tester</li>
<li>(01:29:06) - Load slammer for Tofino 2</li>
<li>(01:31:30) - Power (improved)</li>
<li>(01:32:08) - Part Toaster</li>
<li>(01:33:28) - K.2r2</li>
</ul><br><p>Images of each proto board:</p><ul>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=702">@11:42</a> Gemini </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1113">@18:33</a> Root of Trust (RoT) carrier </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1253">@20:53</a> Power </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1421">@23:41</a> Trimmed Power </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1691">@28:11</a> SPI MUX </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1778">@29:38</a> SPI MUX rework </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=1994">@33:14</a> Gimletlet </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=2470">@41:10</a> Gimletlet NIC </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=2788">@46:28</a> DIMMlet </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3399">@56:39</a> Gimletlet mk2 </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3507">@58:27</a> Adapter zoom </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3594">@59:54</a> Adapters zoom </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3707">@1:01:47</a> Ignition (FPGA) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3880">@1:04:40</a> Gimletlet peripherals </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=3972">@1:06:12</a> Gimletlet with management switch (1/2) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=4042">@1:07:22</a> Gimletlet with management switch (2/2) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=4161">@1:09:21</a> Kludge.2 (K.2) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=4583">@1:16:23</a> Donglet </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5149">@1:25:49</a> RoT carrier carrier </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5177">@1:26:17</a> Transceiver load tester </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5346">@1:29:06</a> Load Slammer for Tofino 2  </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5490">@1:31:30</a> Power (improved) </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5528">@1:32:08</a> Part Toaster </li>
<li>
<a href="https://youtu.be/A5BXMILt49s?t=5608">@1:33:28</a> K.2r2 </li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 16 Jan 2023 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/f290b7dd/73164514.mp3" length="181538576" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6092</itunes:duration>
      <itunes:summary>Bryan and Adam are joined by members of the Oxide hardware team to talk about proto boards--smaller boards, rapidly designed and delivered that have been instrumental to building the larger boards and the product generally.</itunes:summary>
      <itunes:subtitle>Bryan and Adam are joined by members of the Oxide hardware team to talk about proto boards--smaller boards, rapidly designed and delivered that have been instrumental to building the larger boards and the product generally.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <podcast:chapters url="https://share.transistor.fm/s/f290b7dd/chapters.json" type="application/json+chapters"/>
    </item>
    <item>
      <title>Predictions 2023!</title>
      <itunes:season>3</itunes:season>
      <podcast:season>3</podcast:season>
      <itunes:episode>1</itunes:episode>
      <podcast:episode>1</podcast:episode>
      <itunes:title>Predictions 2023!</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">d67f0420-b51c-4fee-bff7-94eb6ecd7c87</guid>
      <link>https://share.transistor.fm/s/6359aabd</link>
      <description>
        <![CDATA[<p>See <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2023_01_09.md">github for the list of predictions</a> (and add your own!)</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>See <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master/2023_01_09.md">github for the list of predictions</a> (and add your own!)</p>]]>
      </content:encoded>
      <pubDate>Mon, 09 Jan 2023 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/6359aabd/fc0ea651.mp3" length="93358400" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5833</itunes:duration>
      <itunes:summary>Bryan, Adam, and the Oxide Friends review last year's predictions and look ahead 1, 3, and 6 years into the future. What's in store for Rust? Will ChatGPT boom or bust? Will Bryan's prediction of the demise of the term "Artificial Intelligence" come to fruition (finally!)?</itunes:summary>
      <itunes:subtitle>Bryan, Adam, and the Oxide Friends review last year's predictions and look ahead 1, 3, and 6 years into the future. What's in store for Rust? Will ChatGPT boom or bust? Will Bryan's prediction of the demise of the term "Artificial Intelligence" come to fr</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Breaking it down with Ian Brown</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>39</itunes:episode>
      <podcast:episode>39</podcast:episode>
      <itunes:title>Breaking it down with Ian Brown</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">46eef5d1-1df9-4a9a-921d-c0e9be2fdd86</guid>
      <link>https://share.transistor.fm/s/7b0f3d75</link>
      <description>
        <![CDATA[<p><strong>Break it down with Ian Brown<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/AD7F1Y-pga0">the recording from December 26th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/ahl">Adam Leventhal</a>, our special guest was <a href="https://mastodon.hccp.org/@igb">Ian Brown</a>.</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><strong>Break it down with Ian Brown<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/AD7F1Y-pga0">the recording from December 26th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/ahl">Adam Leventhal</a>, our special guest was <a href="https://mastodon.hccp.org/@igb">Ian Brown</a>.</p>]]>
      </content:encoded>
      <pubDate>Mon, 26 Dec 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/7b0f3d75/a0304a56.mp3" length="81851324" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5114</itunes:duration>
      <itunes:summary>On December 20th, former Tweep, Ian Brown, joined a Twitter Space about Twitter's architecture. He was surprised when the head Tweep himself joined.. and more surprised when Elon responded to his questions about a proposed rewrite by calling Ian a jackass! The Oxide Friends talk about architecture, rewrites, hubris, fear, curiosity, and safety.</itunes:summary>
      <itunes:subtitle>On December 20th, former Tweep, Ian Brown, joined a Twitter Space about Twitter's architecture. He was surprised when the head Tweep himself joined.. and more surprised when Elon responded to his questions about a proposed rewrite by calling Ian a jackass</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>A Debugging Odyssey</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>38</itunes:episode>
      <podcast:episode>38</podcast:episode>
      <itunes:title>A Debugging Odyssey</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">785c45b8-0fc3-40a4-96ab-8f0df6772807</guid>
      <link>https://share.transistor.fm/s/8488f6b6</link>
      <description>
        <![CDATA[<p><strong>A Debugging Odyssey<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/TulG3yTrLEE">the recording from December 19th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/ahl">Adam Leventhal</a>, our special guest was <a href="https://hachyderm.io/@dap">Dave Pacheco</a>. </p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><strong>A Debugging Odyssey<br></strong><br></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/TulG3yTrLEE">the recording from December 19th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/ahl">Adam Leventhal</a>, our special guest was <a href="https://hachyderm.io/@dap">Dave Pacheco</a>. </p>]]>
      </content:encoded>
      <pubDate>Mon, 19 Dec 2022 15:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/8488f6b6/b294272d.mp3" length="91429396" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5713</itunes:duration>
      <itunes:summary>Oxide colleague, Dave Pacheco, joins Adam and Bryan to talk about an epic debugging journey. Everyone had something to learn from the struggle to find random data corruption in the Go allocator--Dave included!</itunes:summary>
      <itunes:subtitle>Oxide colleague, Dave Pacheco, joins Adam and Bryan to talk about an epic debugging journey. Everyone had something to learn from the struggle to find random data corruption in the Go allocator--Dave included!</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Podcasts for Podcast-Lovers</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>37</itunes:episode>
      <podcast:episode>37</podcast:episode>
      <itunes:title>Podcasts for Podcast-Lovers</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">75f3637d-4642-462f-ba02-8d8ac02b9f9c</guid>
      <link>https://share.transistor.fm/s/c3c219c7</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends: December 12th, 2022</b></p><p><strong>Podcasts for Podcast-Lovers</strong></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/aJDIhNsS9kM">the recording from December 12th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/ahl">Adam Leventhal</a>, speakers on MM DD included <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">XXX</a>, and <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">YY</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Podcasts mentioned on the show</p><ul>
<li><a href="https://ziadeford.com/">Ziade&amp;Ford Advisors</a></li>
<li><a href="https://www.bradyheywood.com.au/podcasts/">Brady Heywood</a></li>
<li>
<a href="https://www.econtalk.org/">EconTalk</a><ul><li><a href="https://www.econtalk.org/lamorna-ash-on-dark-salt-clear/">Lamorna Ash on Dark, Salt, Clear</a></li></ul>
</li>
<li><a href="https://theamphour.com/">The Amp Hour Electronics Podcast</a></li>
<li><a href="https://www.notion.so/blog/topic/podcast">Tools &amp; Craft</a></li>
<li><a href="https://resilientwebdesign.com/">Resilient web design</a></li>
<li><a href="https://www.softwaredefinedtalk.com/">Software Defined Talk</a></li>
<li>
<a href="https://www.youtube.com/watch?v=BE77h7dmoQU">Kubernetes: The Documentary part 1</a> and <a href="https://www.youtube.com/watch?v=318elIq37PE">part 2</a>
</li>
<li><a href="https://devtools.fm/">devtools FM</a></li>
<li><a href="https://art19.com/shows/science-and-futurism">Science and Futurism with Isaac Arthur</a></li>
<li><a href="https://anchor.fm/astheicecreamchurns">As the Ice Cream Churns</a></li>
<li><a href="https://www.spreaker.com/show/lost-terminal">Lost Terminal</a></li>
<li><a href="https://www.cbc.ca/listen/cbc-podcasts/1061-let-s-make-a-sci-fi">Let's Make A Sci-Fi</a></li>
<li>
<a href="https://podcasts.apple.com/us/podcast/invest-like-the-best-with-patrick-oshaughnessy/id1154105909">Invest Like the Best: Shane Battier</a><ul><li><a href="https://www.nytimes.com/2009/02/15/magazine/15Battier-t.html">New York Times: The No-Stats All-Star</a></li></ul>
</li>
<li><a href="https://soundcloud.com/markandcarrie">Mark and Carrie</a></li>
<li><a href="https://open.spotify.com/episode/0erUH7oqqbW5HDUjcnK6cb?si=p1kA5nW7REiNWv9Qmpe3Mg">NerdOut@Spotify: Open Source Work Is Work</a></li>
<li><a href="https://maximumfun.org/podcasts/flop-house/">The Flop House</a></li>
<li><a href="https://themoth.org/podcast">The Moth</a></li>
<li><a href="https://www.iheart.com/podcast/1119-it-could-happen-here-30717896/">It Could Happen Here</a></li>
<li><a href="https://podcast.play.date/">Playdate Podcast</a></li>
<li><a href="https://www.podbean.com/podcast-detail/u249z-8de2a/The-Chernobyl-Podcast">The Chernobyl Podcast</a></li>
<li><a href="https://www.iheart.com/podcast/105-behind-the-bastards-29236323/">Behind the Bastards</a></li>
<li><a href="https://www.iheart.com/podcast/1119-behind-the-police-63877803/">Behind the Police</a></li>
<li><a href="https://anchor.fm/terrorism-bad">Terrorism Bad</a></li>
<li><a href="https://luminarypodcasts.com/listen/corinne-fisher-and-krystyna-hutchinson/guys-we-f-d/61ef47bf-07ce-4c3e-b175-e846e8f5707f?_branch_match_id=1131034464914672027&amp;_branch_referrer=H4sIAAAAAAAAA8soKSkottLXzynNzcxLLKrUy8nMy9bPCskNTXSJLC9LSwIADNz7%2ByEAAAA%3D&amp;country=US">Guys We F****d</a></li>
<li><a href="https://omny.fm/shows/how-did-this-get-made/holy-matrimony-live">How Did This Get Made: Holy Matrimony</a></li>
<li><a href="https://gimletmedia.com/shows/startup/6nh3zg">Startup: How Not to Pitch a Billionaire</a></li>
<li><a href="https://podnews.net/podcast/i4a38">Boom / Bust HQ Trivia</a></li>
<li><a href="https://www.acquired.fm/episodes/tsmc">Acquired: TSMC</a></li>
<li><a href="https://www.thepitch.show/">The Pitch Show</a></li>
<li><a href="https://www.wsj.com/podcasts/bad-bets">Bad Bets</a></li>
</ul><p>Tools</p><ul>
<li><a href="https://embedded.fm/">Embedded.fm</a></li>
<li><a href="https://huffduffer.com/">Huff Duffer</a></li>
</ul><p>Other links from the audience</p><ul>
<li><a href="https://www.bsdnow.tv/">BSD Now</a></li>
<li><a href="https://www.dancarlin.com/hardcore-history-series/">Hardcore History</a></li>
<li>
<a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">EMCrit Podcast</a><a href="https://podcasts.google.com/feed/aHR0cHM6Ly9lbWNyaXQub3JnL2ZlZWQvcG9kY2FzdC8?sa=X&amp;ved=0CAMQ4aUDahcKEwiIuNvvuPX7AhUAAAAAHQAAAAAQAQ&amp;hl=en">https://podcasts.google.com/feed/aHR0cHM6Ly9lbWNyaXQub3JnL2ZlZWQvcG9kY2FzdC8?sa=X&amp;ved=0CAMQ4aUDahcKEwiIuNvvuPX7AhUAAAAAHQAAAAAQAQ&amp;hl=en</a>
</li>
<li><a href="https://podcasts.apple.com/us/podcast/if-books-could-kill/id1651876897">https://podcasts.apple.com/us/podcast/if-books-could-kill/id1651876897</a></li>
<li><a href="https://www.popsci.com/category/weirdest-thing-i-learned-this-week/">The Weirdest Thing I Learned This Week</a></li>
<li><a href="https://99percentinvisible.org/about/the-show/">https://99percentinvisible.org/about/the-show/</a></li>
<li><a href="https://intel.com/aipodcast">https://intel.com/aipodcast</a></li>
<li><a href="https://nextcloud.com/podcast/">https://nextcloud.com/podcast/</a></li>
<li><a href="https://gzmshows.com/shows/listing/the-big-fib/">https://gzmshows.com/shows/listing/the-big-fib/</a></li>
<li><a href="http://wandb.com/podcast">http://wandb.com/podcast</a></li>
<li><a href="https://feeds.captivate.fm/gradient-dissent/">https://feeds.captivate.fm/gradient-dissent/</a></li>
<li><a href="https://blart.libsyn.com/">https://blart.libsyn.com/</a></li>
<li><a href="https://darknetdiaries.com/">https://darknetdiaries.com/</a></li>
<li><a href="https://theretrohour.com/">https://theretrohour.com/</a></li>
<li><a href="https://www.youtube.com/channel/UCPxHg4192hLDpTI2w7F9rPg">https://www.youtube.com/channel/UCPxHg4192hLDpTI2w7F9rPg</a></li>
<li><a href="https://reasonablysound.com/">https://reasonablysound.com</a></li>
<li><a href="https://www.youtube.com/@NoBoilerplate">https://www.youtube.com/@NoBoilerplate</a></li>
<li><a href="https://www.youtube.com/@Namtao">https://www.youtube.com/@Namtao</a></li>
<li><a href="https://signalsandthreads.com/">https://signalsandthreads.com/</a></li>
<li><a href="https://www.bbc.co.uk/programmes/w13xtvg9/episodes/downloads">https://www.bbc.co.uk/programmes/w13xtvg9/episodes/downloads</a></li>
<li><a href="https://darknetdiaries.com/">https://darknetdiaries.com/</a></li>
<li><a href="https://blog.mainframe.dev/">https://blog.mainframe.dev/</a></li>
<li><a href="https://podcasts.apple.com/us/podcast/revolutions/id703889772">https://podcasts.apple.com/us/podcast/revolutions/id703889772</a></li>
<li><a href="https://gimletmedia.com/shows/mystery-show">https://gimletmedia.com/shows/mystery-show</a></li>
<li><a href="https://mast.hpc.social/@freemin7">https://mast.hpc.social/@freemin7</a></li>
<li><a href="https://feeds.megaphone.fm/uncivil">https://feeds.megaphone.fm/uncivil</a></li>
<li><a href="https://open.spotify.com/episode/4cJ7NqRen0OSJ2a4Wg4uaO?si=XYNwryI0Sc6MeYRboeUcgA">https://open.spotify.com/episode/4cJ7NqRen0OSJ2a4Wg4uaO?si=XYNwryI0Sc6MeYRboeUcgA</a></li>
<li><a href="https://mango.pdf.zone/finding-former-australian-prime-minister-tony-abbotts-passport-number-on-instagram">https://mango.pdf.zone/finding-former-australian-prime-minister-tony-abbotts-passport-number-on-instagram</a></li>
<li><a href="https://open.spotify.com/episode/5EUBBoQVZtQMkhTjfSIvzu?si=j9wcHSKGSfCiP2khHsWBug">https://open.spotify.com/episode/5EUBBoQVZtQMkhTjfSIvzu?si=j9wcHSKGSfCiP2khHsWBug</a></li>
<li><a href="http://www.autonocast.com/">http://www.autonocast.com</a></li>
<li><a href="https://risky.biz/">https://risky.biz</a></li>
<li><a href="https://share.transistor.fm/s/7809611e">https://share.transistor.fm/s/7809611e</a></li>
<li><a href="https://share.transistor.fm/s/375557ff">https://share.transistor.fm/s/375557ff</a></li>
<li><a href="https://www.nytimes.com/2020/04/22/podcasts/rabbit-hole-prologue.html">https://www.nytimes.com/2020/04/22/podcasts/rabbit-hole-prologue.html</a></li>
<li><a href="https://lavaforgood.com/bone-valley/">https://lavaforgood.com/bone-valley/</a></li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends: December 12th, 2022</b></p><p><strong>Podcasts for Podcast-Lovers</strong></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/aJDIhNsS9kM">the recording from December 12th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/ahl">Adam Leventhal</a>, speakers on MM DD included <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">XXX</a>, and <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">YY</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Podcasts mentioned on the show</p><ul>
<li><a href="https://ziadeford.com/">Ziade&amp;Ford Advisors</a></li>
<li><a href="https://www.bradyheywood.com.au/podcasts/">Brady Heywood</a></li>
<li>
<a href="https://www.econtalk.org/">EconTalk</a><ul><li><a href="https://www.econtalk.org/lamorna-ash-on-dark-salt-clear/">Lamorna Ash on Dark, Salt, Clear</a></li></ul>
</li>
<li><a href="https://theamphour.com/">The Amp Hour Electronics Podcast</a></li>
<li><a href="https://www.notion.so/blog/topic/podcast">Tools &amp; Craft</a></li>
<li><a href="https://resilientwebdesign.com/">Resilient web design</a></li>
<li><a href="https://www.softwaredefinedtalk.com/">Software Defined Talk</a></li>
<li>
<a href="https://www.youtube.com/watch?v=BE77h7dmoQU">Kubernetes: The Documentary part 1</a> and <a href="https://www.youtube.com/watch?v=318elIq37PE">part 2</a>
</li>
<li><a href="https://devtools.fm/">devtools FM</a></li>
<li><a href="https://art19.com/shows/science-and-futurism">Science and Futurism with Isaac Arthur</a></li>
<li><a href="https://anchor.fm/astheicecreamchurns">As the Ice Cream Churns</a></li>
<li><a href="https://www.spreaker.com/show/lost-terminal">Lost Terminal</a></li>
<li><a href="https://www.cbc.ca/listen/cbc-podcasts/1061-let-s-make-a-sci-fi">Let's Make A Sci-Fi</a></li>
<li>
<a href="https://podcasts.apple.com/us/podcast/invest-like-the-best-with-patrick-oshaughnessy/id1154105909">Invest Like the Best: Shane Battier</a><ul><li><a href="https://www.nytimes.com/2009/02/15/magazine/15Battier-t.html">New York Times: The No-Stats All-Star</a></li></ul>
</li>
<li><a href="https://soundcloud.com/markandcarrie">Mark and Carrie</a></li>
<li><a href="https://open.spotify.com/episode/0erUH7oqqbW5HDUjcnK6cb?si=p1kA5nW7REiNWv9Qmpe3Mg">NerdOut@Spotify: Open Source Work Is Work</a></li>
<li><a href="https://maximumfun.org/podcasts/flop-house/">The Flop House</a></li>
<li><a href="https://themoth.org/podcast">The Moth</a></li>
<li><a href="https://www.iheart.com/podcast/1119-it-could-happen-here-30717896/">It Could Happen Here</a></li>
<li><a href="https://podcast.play.date/">Playdate Podcast</a></li>
<li><a href="https://www.podbean.com/podcast-detail/u249z-8de2a/The-Chernobyl-Podcast">The Chernobyl Podcast</a></li>
<li><a href="https://www.iheart.com/podcast/105-behind-the-bastards-29236323/">Behind the Bastards</a></li>
<li><a href="https://www.iheart.com/podcast/1119-behind-the-police-63877803/">Behind the Police</a></li>
<li><a href="https://anchor.fm/terrorism-bad">Terrorism Bad</a></li>
<li><a href="https://luminarypodcasts.com/listen/corinne-fisher-and-krystyna-hutchinson/guys-we-f-d/61ef47bf-07ce-4c3e-b175-e846e8f5707f?_branch_match_id=1131034464914672027&amp;_branch_referrer=H4sIAAAAAAAAA8soKSkottLXzynNzcxLLKrUy8nMy9bPCskNTXSJLC9LSwIADNz7%2ByEAAAA%3D&amp;country=US">Guys We F****d</a></li>
<li><a href="https://omny.fm/shows/how-did-this-get-made/holy-matrimony-live">How Did This Get Made: Holy Matrimony</a></li>
<li><a href="https://gimletmedia.com/shows/startup/6nh3zg">Startup: How Not to Pitch a Billionaire</a></li>
<li><a href="https://podnews.net/podcast/i4a38">Boom / Bust HQ Trivia</a></li>
<li><a href="https://www.acquired.fm/episodes/tsmc">Acquired: TSMC</a></li>
<li><a href="https://www.thepitch.show/">The Pitch Show</a></li>
<li><a href="https://www.wsj.com/podcasts/bad-bets">Bad Bets</a></li>
</ul><p>Tools</p><ul>
<li><a href="https://embedded.fm/">Embedded.fm</a></li>
<li><a href="https://huffduffer.com/">Huff Duffer</a></li>
</ul><p>Other links from the audience</p><ul>
<li><a href="https://www.bsdnow.tv/">BSD Now</a></li>
<li><a href="https://www.dancarlin.com/hardcore-history-series/">Hardcore History</a></li>
<li>
<a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">EMCrit Podcast</a><a href="https://podcasts.google.com/feed/aHR0cHM6Ly9lbWNyaXQub3JnL2ZlZWQvcG9kY2FzdC8?sa=X&amp;ved=0CAMQ4aUDahcKEwiIuNvvuPX7AhUAAAAAHQAAAAAQAQ&amp;hl=en">https://podcasts.google.com/feed/aHR0cHM6Ly9lbWNyaXQub3JnL2ZlZWQvcG9kY2FzdC8?sa=X&amp;ved=0CAMQ4aUDahcKEwiIuNvvuPX7AhUAAAAAHQAAAAAQAQ&amp;hl=en</a>
</li>
<li><a href="https://podcasts.apple.com/us/podcast/if-books-could-kill/id1651876897">https://podcasts.apple.com/us/podcast/if-books-could-kill/id1651876897</a></li>
<li><a href="https://www.popsci.com/category/weirdest-thing-i-learned-this-week/">The Weirdest Thing I Learned This Week</a></li>
<li><a href="https://99percentinvisible.org/about/the-show/">https://99percentinvisible.org/about/the-show/</a></li>
<li><a href="https://intel.com/aipodcast">https://intel.com/aipodcast</a></li>
<li><a href="https://nextcloud.com/podcast/">https://nextcloud.com/podcast/</a></li>
<li><a href="https://gzmshows.com/shows/listing/the-big-fib/">https://gzmshows.com/shows/listing/the-big-fib/</a></li>
<li><a href="http://wandb.com/podcast">http://wandb.com/podcast</a></li>
<li><a href="https://feeds.captivate.fm/gradient-dissent/">https://feeds.captivate.fm/gradient-dissent/</a></li>
<li><a href="https://blart.libsyn.com/">https://blart.libsyn.com/</a></li>
<li><a href="https://darknetdiaries.com/">https://darknetdiaries.com/</a></li>
<li><a href="https://theretrohour.com/">https://theretrohour.com/</a></li>
<li><a href="https://www.youtube.com/channel/UCPxHg4192hLDpTI2w7F9rPg">https://www.youtube.com/channel/UCPxHg4192hLDpTI2w7F9rPg</a></li>
<li><a href="https://reasonablysound.com/">https://reasonablysound.com</a></li>
<li><a href="https://www.youtube.com/@NoBoilerplate">https://www.youtube.com/@NoBoilerplate</a></li>
<li><a href="https://www.youtube.com/@Namtao">https://www.youtube.com/@Namtao</a></li>
<li><a href="https://signalsandthreads.com/">https://signalsandthreads.com/</a></li>
<li><a href="https://www.bbc.co.uk/programmes/w13xtvg9/episodes/downloads">https://www.bbc.co.uk/programmes/w13xtvg9/episodes/downloads</a></li>
<li><a href="https://darknetdiaries.com/">https://darknetdiaries.com/</a></li>
<li><a href="https://blog.mainframe.dev/">https://blog.mainframe.dev/</a></li>
<li><a href="https://podcasts.apple.com/us/podcast/revolutions/id703889772">https://podcasts.apple.com/us/podcast/revolutions/id703889772</a></li>
<li><a href="https://gimletmedia.com/shows/mystery-show">https://gimletmedia.com/shows/mystery-show</a></li>
<li><a href="https://mast.hpc.social/@freemin7">https://mast.hpc.social/@freemin7</a></li>
<li><a href="https://feeds.megaphone.fm/uncivil">https://feeds.megaphone.fm/uncivil</a></li>
<li><a href="https://open.spotify.com/episode/4cJ7NqRen0OSJ2a4Wg4uaO?si=XYNwryI0Sc6MeYRboeUcgA">https://open.spotify.com/episode/4cJ7NqRen0OSJ2a4Wg4uaO?si=XYNwryI0Sc6MeYRboeUcgA</a></li>
<li><a href="https://mango.pdf.zone/finding-former-australian-prime-minister-tony-abbotts-passport-number-on-instagram">https://mango.pdf.zone/finding-former-australian-prime-minister-tony-abbotts-passport-number-on-instagram</a></li>
<li><a href="https://open.spotify.com/episode/5EUBBoQVZtQMkhTjfSIvzu?si=j9wcHSKGSfCiP2khHsWBug">https://open.spotify.com/episode/5EUBBoQVZtQMkhTjfSIvzu?si=j9wcHSKGSfCiP2khHsWBug</a></li>
<li><a href="http://www.autonocast.com/">http://www.autonocast.com</a></li>
<li><a href="https://risky.biz/">https://risky.biz</a></li>
<li><a href="https://share.transistor.fm/s/7809611e">https://share.transistor.fm/s/7809611e</a></li>
<li><a href="https://share.transistor.fm/s/375557ff">https://share.transistor.fm/s/375557ff</a></li>
<li><a href="https://www.nytimes.com/2020/04/22/podcasts/rabbit-hole-prologue.html">https://www.nytimes.com/2020/04/22/podcasts/rabbit-hole-prologue.html</a></li>
<li><a href="https://lavaforgood.com/bone-valley/">https://lavaforgood.com/bone-valley/</a></li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 12 Dec 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/c3c219c7/dff34fa5.mp3" length="85161146" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5321</itunes:duration>
      <itunes:summary>The Oxide Friends bring their podcast recommendations. PCBs, game consoles, sci-fi, business failures, to bad movies--there was a lot of range.</itunes:summary>
      <itunes:subtitle>The Oxide Friends bring their podcast recommendations. PCBs, game consoles, sci-fi, business failures, to bad movies--there was a lot of range.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Leaving Twitter with Tim Bray</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>36</itunes:episode>
      <podcast:episode>36</podcast:episode>
      <itunes:title>Leaving Twitter with Tim Bray</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">267ce149-b79c-4c14-a2c6-70ccc504904d</guid>
      <link>https://share.transistor.fm/s/ed378548</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends: November 28th, 2022</b></p><p><strong>Leaving Twitter with Tim Bray</strong></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/GZF96XmmJg8">the recording from November 28th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/ahl">Adam Leventhal</a>, our special guest was <a href="https://mastodon.cloud/@timbray">Tim Bray</a>. Other speakers on November 28th included <a href="https://hachyderm.io/@adamhjk">Adam Jacob</a>, <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">Toasterson</a>, and <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">raggi</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://www.tbray.org/ongoing/When/202x/2022/11/26/Bye-Twitter">Bye, Twitter</a> by Tim Bray</li>
<li><a href="https://www.jwz.org/blog/2022/11/psa-do-not-use-services-that-hate-the-internet/">jwz: PSA: Do Not Use Services That Hate The Internet</a></li>
<li>
<a href="https://www.jwz.org/blog/2022/11/mastodon-stampede/">jwz: Mastodon stampede</a> <em>"Federation" now apparently means "DDoS yourself."</em>
</li>
<li>Tim Bray <a href="http://www.tbray.org/ongoing/When/202x/2022/11/28/On-Algorithms">On Algorithms</a>
</li>
<li>On terrible Twitter ads: <a href="https://twitter.com/intelnews/status/1579366123421810689">@intelnews: "Moore’s Law only stops when innovation stops.”</a>
</li>
<li>PRs needed!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends: November 28th, 2022</b></p><p><strong>Leaving Twitter with Tim Bray</strong></p><p>We've been hosting a live show weekly on Mondays at 5p for about an hour, and recording them all; here is <a href="https://youtu.be/GZF96XmmJg8">the recording from November 28th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/ahl">Adam Leventhal</a>, our special guest was <a href="https://mastodon.cloud/@timbray">Tim Bray</a>. Other speakers on November 28th included <a href="https://hachyderm.io/@adamhjk">Adam Jacob</a>, <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">Toasterson</a>, and <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">raggi</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://www.tbray.org/ongoing/When/202x/2022/11/26/Bye-Twitter">Bye, Twitter</a> by Tim Bray</li>
<li><a href="https://www.jwz.org/blog/2022/11/psa-do-not-use-services-that-hate-the-internet/">jwz: PSA: Do Not Use Services That Hate The Internet</a></li>
<li>
<a href="https://www.jwz.org/blog/2022/11/mastodon-stampede/">jwz: Mastodon stampede</a> <em>"Federation" now apparently means "DDoS yourself."</em>
</li>
<li>Tim Bray <a href="http://www.tbray.org/ongoing/When/202x/2022/11/28/On-Algorithms">On Algorithms</a>
</li>
<li>On terrible Twitter ads: <a href="https://twitter.com/intelnews/status/1579366123421810689">@intelnews: "Moore’s Law only stops when innovation stops.”</a>
</li>
<li>PRs needed!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next show will likely be on Monday at 5p Pacific Time on our Discord server; stay tuned to our Mastodon feeds for details, or <a href="https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics">subscribe to this calendar</a>. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 28 Nov 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/ed378548/44c5a0aa.mp3" length="69748510" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4358</itunes:duration>
      <itunes:summary>Tim Bray joins the Oxide Friends to talk about leaving Twitter as a user as Bryan and Adam host their first live show on Discord (adios, Twitter Spaces!).</itunes:summary>
      <itunes:subtitle>Tim Bray joins the Oxide Friends to talk about leaving Twitter as a user as Bryan and Adam host their first live show on Discord (adios, Twitter Spaces!).</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Mastodon with Kris Nova</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>35</itunes:episode>
      <podcast:episode>35</podcast:episode>
      <itunes:title>Mastodon with Kris Nova</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">d16bab8b-dc59-493a-b9d9-d6234507effd</guid>
      <link>https://share.transistor.fm/s/910a12d1</link>
      <description>
        <![CDATA[<p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/2YvLYUYKEAs">the recording for our Twitter Space for November 14th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, our special guest was <a href="https://hachyderm.io/@nova">Kris Nova</a>. Other speakers on November 14th included <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">XXX</a>, and <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">YY</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/2YvLYUYKEAs">the recording for our Twitter Space for November 14th, 2022</a>.</p><p>In addition to <a href="https://mastodon.social/@bcantrill">Bryan Cantrill</a> and <a href="https://mastodon.social/@ahl">Adam Leventhal</a>, our special guest was <a href="https://hachyderm.io/@nova">Kris Nova</a>. Other speakers on November 14th included <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">XXX</a>, and <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">YY</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p>]]>
      </content:encoded>
      <pubDate>Mon, 14 Nov 2022 09:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/910a12d1/f252bba1.mp3" length="87134802" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5444</itunes:duration>
      <itunes:summary>Kris Nova joins Bryan, Adam, and the Oxide Friends to talk about Mastodon. Kris runs Hachyderm, a Mastodon server. She shares her experience with Mastodon and the Fediverse.</itunes:summary>
      <itunes:subtitle>Kris Nova joins Bryan, Adam, and the Oxide Friends to talk about Mastodon. Kris runs Hachyderm, a Mastodon server. She shares her experience with Mastodon and the Fediverse.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Tech Layoffs</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>34</itunes:episode>
      <podcast:episode>34</podcast:episode>
      <itunes:title>Tech Layoffs</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">9d0c5216-917f-4976-8e4a-8a3a4f967216</guid>
      <link>https://share.transistor.fm/s/c443798f</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 7th, 2022</b></p><p><strong>Tech Layoffs</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/oBTMUc1Q5vY">the recording for our Twitter Space for November 7th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 7th included <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">XXX</a>, and <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">YY</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 7th, 2022</b></p><p><strong>Tech Layoffs</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/oBTMUc1Q5vY">the recording for our Twitter Space for November 7th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 7th included <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">XXX</a>, and <a href="https://github.com/oxidecomputer/oxide-and-friends/blob/master">YY</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 07 Nov 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/c443798f/5ef085c8.mp3" length="95688456" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5979</itunes:duration>
      <itunes:summary>Bryan, Adam, and the Oxide Friends talk about the recent spate of layoffs in tech--the good, the bad, and the ugly. We stumbled into a discussion of the acute impact to those on visas with some great contributions from those who joined us live!</itunes:summary>
      <itunes:subtitle>Bryan, Adam, and the Oxide Friends talk about the recent spate of layoffs in tech--the good, the bad, and the ugly. We stumbled into a discussion of the acute impact to those on visas with some great contributions from those who joined us live!</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Open Source Firmware</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>33</itunes:episode>
      <podcast:episode>33</podcast:episode>
      <itunes:title>Open Source Firmware</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">f4f47719-fafe-4b62-a7f3-c0436c447a7b</guid>
      <link>https://share.transistor.fm/s/ba861b24</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 31st, 2022</b></p><p><strong>Open Source Firmware</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/QAhHkz76NbI">the recording for our Twitter Space for October 31st, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guests were <a href="https://twitter.com/nablahero">Christian Walker</a> and <a href="https://twitter.com/_zaolin_">Philipp Deppenwiese</a>. </p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 31st, 2022</b></p><p><strong>Open Source Firmware</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/QAhHkz76NbI">the recording for our Twitter Space for October 31st, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guests were <a href="https://twitter.com/nablahero">Christian Walker</a> and <a href="https://twitter.com/_zaolin_">Philipp Deppenwiese</a>. </p><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 31 Oct 2022 09:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/ba861b24/1a883a47.mp3" length="81294234" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5079</itunes:duration>
      <itunes:summary>Christian Walker and Philipp Deppenwiese join Bryan, Adam, and the Oxide Friends to talk about open firmware, the Open Firmware Conference, and the Open Firmware Foundation.</itunes:summary>
      <itunes:subtitle>Christian Walker and Philipp Deppenwiese join Bryan, Adam, and the Oxide Friends to talk about open firmware, the Open Firmware Conference, and the Open Firmware Foundation.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Let That Sink In! (Whither Twitter?)</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>32</itunes:episode>
      <podcast:episode>32</podcast:episode>
      <itunes:title>Let That Sink In! (Whither Twitter?)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">2225efe0-467c-4059-ac5d-7f6e64210f7b</guid>
      <link>https://share.transistor.fm/s/ac362832</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 27th, 2022</b></p><p><strong>Let That Sink In! (Whither Twitter?)</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/RhXYXtyPz3Y">the recording for our Twitter Space for October 27th, 2022</a>.</p><p>In this special, breaking news edition of Oxide and Friends, <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> was joined by <a href="https://twitter.com/jmclulow">Joshua M. Clulow</a>, <a href="https://twitter.com/mipsytipsy">Charity Majors</a>, <a href="https://twitter.com/evilbits">mick</a>, <a href="https://twitter.com/therishidesai">Rishi Desai</a>, <a href="https://twitter.com/l_i_n_e_a_r">linear cannon</a>, <a href="https://twitter.com/ignaloidas">ignaloidas</a>, <a href="https://twitter.com/CraigTraynor1">Craig Traynor</a>, <a href="https://twitter.com/whisk">Cargo Occultist</a>, and <a href="https://twitter.com/AaronDGoldman">Aaron David Goldman</a>.</p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 27th, 2022</b></p><p><strong>Let That Sink In! (Whither Twitter?)</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/RhXYXtyPz3Y">the recording for our Twitter Space for October 27th, 2022</a>.</p><p>In this special, breaking news edition of Oxide and Friends, <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> was joined by <a href="https://twitter.com/jmclulow">Joshua M. Clulow</a>, <a href="https://twitter.com/mipsytipsy">Charity Majors</a>, <a href="https://twitter.com/evilbits">mick</a>, <a href="https://twitter.com/therishidesai">Rishi Desai</a>, <a href="https://twitter.com/l_i_n_e_a_r">linear cannon</a>, <a href="https://twitter.com/ignaloidas">ignaloidas</a>, <a href="https://twitter.com/CraigTraynor1">Craig Traynor</a>, <a href="https://twitter.com/whisk">Cargo Occultist</a>, and <a href="https://twitter.com/AaronDGoldman">Aaron David Goldman</a>.</p><p><br></p>]]>
      </content:encoded>
      <pubDate>Thu, 27 Oct 2022 19:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/ac362832/32e24347.mp3" length="99195018" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6198</itunes:duration>
      <itunes:summary>As the acquisition of Twitter closed, Bryan called an emergency, one-off session of the Oxide Friends to discuss. Make your own predictions to play along at home.</itunes:summary>
      <itunes:subtitle>As the acquisition of Twitter closed, Bryan called an emergency, one-off session of the Oxide Friends to discuss. Make your own predictions to play along at home.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Open Source Inside Baseball (with Stephen O'Grady)</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>31</itunes:episode>
      <podcast:episode>31</podcast:episode>
      <itunes:title>Open Source Inside Baseball (with Stephen O'Grady)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">c0ea01b8-3b6b-4dd2-a634-a9ddf0728267</guid>
      <link>https://share.transistor.fm/s/bde1469b</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 24th, 2022</b></p><p><strong>Open Source Inside Baseball</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/UygfNt5oLmM">the recording for our Twitter Space for October 24th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was dear friend-of-Oxide, <a href="https://twitter.com/sogrady">Stephen O'Grady</a>. </p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>For non-American and/or non-baseball fans "inside baseball" is an idiom meaning "an expert's take or opinion"</li>
<li>Also, Stephen, Bryan, and Adam love actual baseball so there was quite a bit of that as well...</li>
<li>For the baseball fans, <a href="https://www.youtube.com/watch?v=efDLfPEn07s">the Bryce Harper at bat</a> we were so excited about</li>
<li>The main event: Stephen's <a href="https://redmonk.com/sogrady/2022/09/23/dead-end/">The Dead End</a>
</li>
</ul><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 24th, 2022</b></p><p><strong>Open Source Inside Baseball</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/UygfNt5oLmM">the recording for our Twitter Space for October 24th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was dear friend-of-Oxide, <a href="https://twitter.com/sogrady">Stephen O'Grady</a>. </p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>For non-American and/or non-baseball fans "inside baseball" is an idiom meaning "an expert's take or opinion"</li>
<li>Also, Stephen, Bryan, and Adam love actual baseball so there was quite a bit of that as well...</li>
<li>For the baseball fans, <a href="https://www.youtube.com/watch?v=efDLfPEn07s">the Bryce Harper at bat</a> we were so excited about</li>
<li>The main event: Stephen's <a href="https://redmonk.com/sogrady/2022/09/23/dead-end/">The Dead End</a>
</li>
</ul><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 24 Oct 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/bde1469b/7c868a15.mp3" length="68609115" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4286</itunes:duration>
      <itunes:summary>Stephen O'Grady of RedMonk joins Bryan, Adam, and the Oxide Friends to talk about the dead end of proprietary software masquerading as open source that the industry is drifting into. We walk inside baseball including some coordination on the part of offenders. We also talk some actual baseball... but only for about 12:40.</itunes:summary>
      <itunes:subtitle>Stephen O'Grady of RedMonk joins Bryan, Adam, and the Oxide Friends to talk about the dead end of proprietary software masquerading as open source that the industry is drifting into. We walk inside baseball including some coordination on the part of offen</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Holistic Boot</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>30</itunes:episode>
      <podcast:episode>30</podcast:episode>
      <itunes:title>Holistic Boot</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">3e6f3373-a0b0-4adc-834f-d8599c60fb2d</guid>
      <link>https://share.transistor.fm/s/24beb248</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 10th, 2022</b></p><p><strong>Holistic Boot</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/KItJzncvjFk">the recording for our Twitter Space for October 10th, 2022</a>.</p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 10th, 2022</b></p><p><strong>Holistic Boot</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/KItJzncvjFk">the recording for our Twitter Space for October 10th, 2022</a>.</p><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 10 Oct 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/24beb248/122bcd88.mp3" length="87642600" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5476</itunes:duration>
      <itunes:summary>Bryan and Adam talk about how Oxide boots its systems--no BIOS, no BMC. A modern server unlike any other server in the market all of which carry 40+ years of the PC legacy.</itunes:summary>
      <itunes:subtitle>Bryan and Adam talk about how Oxide boots its systems--no BIOS, no BMC. A modern server unlike any other server in the market all of which carry 40+ years of the PC legacy.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Engineering Incentives... and Misincentives</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>29</itunes:episode>
      <podcast:episode>29</podcast:episode>
      <itunes:title>Engineering Incentives... and Misincentives</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">a4f198d5-e683-40d4-a254-7ff26a14a867</guid>
      <link>https://share.transistor.fm/s/2c3f8df8</link>
      <description>
        <![CDATA[Inspired by the incentives at Google that apparently promote launching--but not sustaining--new products, Bryan, Adam and the Oxide Friends discuss the efficacy of various incentives... and the incentives that can lead to unintended and negative outcomes.]]>
      </description>
      <content:encoded>
        <![CDATA[Inspired by the incentives at Google that apparently promote launching--but not sustaining--new products, Bryan, Adam and the Oxide Friends discuss the efficacy of various incentives... and the incentives that can lead to unintended and negative outcomes.]]>
      </content:encoded>
      <pubDate>Mon, 03 Oct 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/2c3f8df8/0de5ad1b.mp3" length="62936841" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3932</itunes:duration>
      <itunes:summary>Inspired by the incentives at Google that apparently promote launching--but not sustaining--new products, Bryan, Adam and the Oxide Friends discuss the efficacy of various incentives... and the incentives that can lead to unintended and negative outcomes.</itunes:summary>
      <itunes:subtitle>Inspired by the incentives at Google that apparently promote launching--but not sustaining--new products, Bryan, Adam and the Oxide Friends discuss the efficacy of various incentives... and the incentives that can lead to unintended and negative outcomes.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Losing the Signal with Sean Silcoff</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>28</itunes:episode>
      <podcast:episode>28</podcast:episode>
      <itunes:title>Losing the Signal with Sean Silcoff</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">45c94823-35fc-4b6f-b21a-961f13e1104f</guid>
      <link>https://share.transistor.fm/s/e501a98c</link>
      <description>
        <![CDATA[<p>Bryan and Adam interview Sean Silcoff, co-author of "Losing the Signal: The Untold Story Behind the Extraordinary Rise and Spectacular Fall of BlackBerry"... Soon to be a major motion picture! <br><strong><br>Losing the Signal with Sean Silcoff (The Rise and Fall of BlackBerry)<br></strong><br></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/68TVcHeBsBU">the recording for our Twitter Space for September 26th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our esteemed guest was one of the authors of Losing the Signal, <a href="https://twitter.com/SeanSilcoff">Sean Silcoff</a>.</p><p>Not many links, mostly anecdotes from <a href="https://www.amazon.com/Losing-Signal-Extraordinary-Spectacular-BlackBerry-ebook/dp/B00Q20ASVS">Losing the Signal: The Untold Story Behind the Extraordinary Rise and Spectacular Fall of BlackBerry</a>, the book Sean co-wrote with Jacquie McNish</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=301">@05:01</a> <em>The aha moment for BBM</em>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=582">@09:42</a> <em>Ruffled feathers from partner interactions</em><ul>
<li>Bell South thought they had an exlusive deal and they didn't</li>
<li>Years later, people didn't seem to hold it against them</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=760">@12:40</a> <em>Brian's anecdote about a meeting with Balsillie and Lazaridis</em>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=930">@15:30</a> <em>Lost opportunities to course-correct</em><ul><li>The touch screen button</li></ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=1200">@20:00</a> <em>The Blackberry Storm</em><ul>
<li>Potentially rushed to market when it was not up to standards</li>
<li>RIM's own testing lab found serious problems but shipped it anyway</li>
<li>RIM was a great innovator and a terrible follower, some have said that of Apple, though</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=1540">@25:40</a> <em>Lazaridis as the product guy</em><ul>
<li>This I get (keypad), this I don't get (touchscreen)</li>
<li>Story on the way up is as important as on the way down</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=1820">@30:20</a> <em>Parallels with DEC</em><ul>
<li>Amazing rise</li>
<li>Failure to pass control</li>
<li>co-CEO model at RIM - worked really well until it didn't</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=2059">@34:19</a> <em>NTP Patent case</em><ul>
<li><a href="https://www.lexisnexis.com/community/casebrief/p/casebrief-ntp-inc-v-research-in-motion-ltd">Case brief</a></li>
<li>Jury selection was weighed incredibly far towards lay folks with very little technical understanding</li>
<li>Technical demonstration goes sideways</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=2710">@45:10</a> <em>Trusting the other co-CEO and the option backdating scandal</em><ul>
<li>Lazaridis didn't really understand the options stuff and felt Balsillie had put the company at risk</li>
<li>Kept their fights private, but people could tell "mom and dad weren't getting along"</li>
<li>Is it right or wrong if everyone was doing it?</li>
<li>They left an extensive digital paper trail making it easy to make a case</li>
<li>Thanks to Tom for the clarification - options backdating was okay, failing to report it was not</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=3170">@52:50</a> <em>Larry Conlee</em><ul>
<li>Fire and brimstone, had a pocket veto, spoke with the voice of the CEOs</li>
<li>Co COOs!</li>
<li>Carriers were afraid of becoming dumb pipes, so were anti-app store</li>
<li>Blackberry didn't care about doing an app store, then AT&amp;T bent to Apple and allowed them to have an app store</li>
<li>RIM did not believe that Silicon Valley would be let in the front door at the carriers</li>
<li>RIM would talk about Apple as "the toy company" while being actively devoured</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Bryan and Adam interview Sean Silcoff, co-author of "Losing the Signal: The Untold Story Behind the Extraordinary Rise and Spectacular Fall of BlackBerry"... Soon to be a major motion picture! <br><strong><br>Losing the Signal with Sean Silcoff (The Rise and Fall of BlackBerry)<br></strong><br></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/68TVcHeBsBU">the recording for our Twitter Space for September 26th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our esteemed guest was one of the authors of Losing the Signal, <a href="https://twitter.com/SeanSilcoff">Sean Silcoff</a>.</p><p>Not many links, mostly anecdotes from <a href="https://www.amazon.com/Losing-Signal-Extraordinary-Spectacular-BlackBerry-ebook/dp/B00Q20ASVS">Losing the Signal: The Untold Story Behind the Extraordinary Rise and Spectacular Fall of BlackBerry</a>, the book Sean co-wrote with Jacquie McNish</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=301">@05:01</a> <em>The aha moment for BBM</em>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=582">@09:42</a> <em>Ruffled feathers from partner interactions</em><ul>
<li>Bell South thought they had an exlusive deal and they didn't</li>
<li>Years later, people didn't seem to hold it against them</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=760">@12:40</a> <em>Brian's anecdote about a meeting with Balsillie and Lazaridis</em>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=930">@15:30</a> <em>Lost opportunities to course-correct</em><ul><li>The touch screen button</li></ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=1200">@20:00</a> <em>The Blackberry Storm</em><ul>
<li>Potentially rushed to market when it was not up to standards</li>
<li>RIM's own testing lab found serious problems but shipped it anyway</li>
<li>RIM was a great innovator and a terrible follower, some have said that of Apple, though</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=1540">@25:40</a> <em>Lazaridis as the product guy</em><ul>
<li>This I get (keypad), this I don't get (touchscreen)</li>
<li>Story on the way up is as important as on the way down</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=1820">@30:20</a> <em>Parallels with DEC</em><ul>
<li>Amazing rise</li>
<li>Failure to pass control</li>
<li>co-CEO model at RIM - worked really well until it didn't</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=2059">@34:19</a> <em>NTP Patent case</em><ul>
<li><a href="https://www.lexisnexis.com/community/casebrief/p/casebrief-ntp-inc-v-research-in-motion-ltd">Case brief</a></li>
<li>Jury selection was weighed incredibly far towards lay folks with very little technical understanding</li>
<li>Technical demonstration goes sideways</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=2710">@45:10</a> <em>Trusting the other co-CEO and the option backdating scandal</em><ul>
<li>Lazaridis didn't really understand the options stuff and felt Balsillie had put the company at risk</li>
<li>Kept their fights private, but people could tell "mom and dad weren't getting along"</li>
<li>Is it right or wrong if everyone was doing it?</li>
<li>They left an extensive digital paper trail making it easy to make a case</li>
<li>Thanks to Tom for the clarification - options backdating was okay, failing to report it was not</li>
</ul>
</li>
<li>
<a href="https://youtu.be/68TVcHeBsBU?t=3170">@52:50</a> <em>Larry Conlee</em><ul>
<li>Fire and brimstone, had a pocket veto, spoke with the voice of the CEOs</li>
<li>Co COOs!</li>
<li>Carriers were afraid of becoming dumb pipes, so were anti-app store</li>
<li>Blackberry didn't care about doing an app store, then AT&amp;T bent to Apple and allowed them to have an app store</li>
<li>RIM did not believe that Silicon Valley would be let in the front door at the carriers</li>
<li>RIM would talk about Apple as "the toy company" while being actively devoured</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p><p><br></p>]]>
      </content:encoded>
      <pubDate>Mon, 26 Sep 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/e501a98c/3d561b82.mp3" length="65766724" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4109</itunes:duration>
      <itunes:summary>Sean Silcoff, one of the authors of Losing the Signal, joins the Oxide Friends to discuss his book, the rise and fall of RIM / BlackBerry, and some of his favorite passages. Thanks to Sean for joining us!</itunes:summary>
      <itunes:subtitle>Sean Silcoff, one of the authors of Losing the Signal, joins the Oxide Friends to discuss his book, the rise and fall of RIM / BlackBerry, and some of his favorite passages. Thanks to Sean for joining us!</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Threads, async/await, Promises, Futures</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>27</itunes:episode>
      <podcast:episode>27</podcast:episode>
      <itunes:title>Threads, async/await, Promises, Futures</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">b2dd413d-cbd9-4836-9898-50aadec09d3f</guid>
      <link>https://share.transistor.fm/s/9dafc631</link>
      <description>
        <![CDATA[A problem has been eating at Adam: we use async/await in many languages and yet we're not so good at explaining the moving parts. Bryan and the Oxide Friends therapeutically explore the space.]]>
      </description>
      <content:encoded>
        <![CDATA[A problem has been eating at Adam: we use async/await in many languages and yet we're not so good at explaining the moving parts. Bryan and the Oxide Friends therapeutically explore the space.]]>
      </content:encoded>
      <pubDate>Mon, 12 Sep 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/9dafc631/2de91fe3.mp3" length="72147273" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4508</itunes:duration>
      <itunes:summary>A problem has been eating at Adam: we use async/await in many languages and yet we're not so good at explaining the moving parts. Bryan and the Oxide Friends therapeutically explore the space.</itunes:summary>
      <itunes:subtitle>A problem has been eating at Adam: we use async/await in many languages and yet we're not so good at explaining the moving parts. Bryan and the Oxide Friends therapeutically explore the space.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Potpourri: Product, Platform, Paravirtualization</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>26</itunes:episode>
      <podcast:episode>26</podcast:episode>
      <itunes:title>Potpourri: Product, Platform, Paravirtualization</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">6b36d0be-330a-461a-8aa6-a1a0da27de55</guid>
      <link>https://share.transistor.fm/s/1ba5b018</link>
      <description>
        <![CDATA[]]>
      </description>
      <content:encoded>
        <![CDATA[]]>
      </content:encoded>
      <pubDate>Mon, 05 Sep 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/1ba5b018/45c79440.mp3" length="104786163" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6547</itunes:duration>
      <itunes:summary>
        <![CDATA[]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Oxide Supply Chain</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>25</itunes:episode>
      <podcast:episode>25</podcast:episode>
      <itunes:title>The Oxide Supply Chain</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">d541a64d-1a32-4b2b-a1d7-b3c68abe1422</guid>
      <link>https://share.transistor.fm/s/dd64f79a</link>
      <description>
        <![CDATA[Kate Hicks from Oxide operations joins to talk about the supply chain meltdown, war stories from the past, and the innovative ways she and her team have charted a steady course through these turbulent waters]]>
      </description>
      <content:encoded>
        <![CDATA[Kate Hicks from Oxide operations joins to talk about the supply chain meltdown, war stories from the past, and the innovative ways she and her team have charted a steady course through these turbulent waters]]>
      </content:encoded>
      <pubDate>Mon, 29 Aug 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/dd64f79a/67693cfc.mp3" length="66738042" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4169</itunes:duration>
      <itunes:summary>Kate Hicks from Oxide operations joins to talk about the supply chain meltdown, war stories from the past, and the innovative ways she and her team have charted a steady course through these turbulent waters</itunes:summary>
      <itunes:subtitle>Kate Hicks from Oxide operations joins to talk about the supply chain meltdown, war stories from the past, and the innovative ways she and her team have charted a steady course through these turbulent waters</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Bringup Lab Chronicles: A Measurement Two Years in the Making</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>24</itunes:episode>
      <podcast:episode>24</podcast:episode>
      <itunes:title>Bringup Lab Chronicles: A Measurement Two Years in the Making</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">4495d612-5fe8-4550-9547-4377e1f743c8</guid>
      <link>https://share.transistor.fm/s/65a10522</link>
      <description>
        <![CDATA[The Oxide electrical engineers share their experience bringing up a 100Gb link--it's got everything from a purpose-built probing station to a 100Ω resistor that proved to be the difference between life and death (of the company)]]>
      </description>
      <content:encoded>
        <![CDATA[The Oxide electrical engineers share their experience bringing up a 100Gb link--it's got everything from a purpose-built probing station to a 100Ω resistor that proved to be the difference between life and death (of the company)]]>
      </content:encoded>
      <pubDate>Mon, 22 Aug 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/65a10522/19e69a93.mp3" length="91142380" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5695</itunes:duration>
      <itunes:summary>The Oxide electrical engineers share their experience bringing up a 100Gb link--it's got everything from a purpose-built probing station to a 100Ω resistor that proved to be the difference between life and death (of the company)</itunes:summary>
      <itunes:subtitle>The Oxide electrical engineers share their experience bringing up a 100Gb link--it's got everything from a purpose-built probing station to a 100Ω resistor that proved to be the difference between life and death (of the company)</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Surviving Conventional Wisdom</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>23</itunes:episode>
      <podcast:episode>23</podcast:episode>
      <itunes:title>Surviving Conventional Wisdom</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">95d60072-a1d0-40dc-b7cd-58690dc5bd3d</guid>
      <link>https://share.transistor.fm/s/bc70d708</link>
      <description>
        <![CDATA[Bryan, Adam, and Steve consider nuggets of conventional wisdom that turn out to be turds.]]>
      </description>
      <content:encoded>
        <![CDATA[Bryan, Adam, and Steve consider nuggets of conventional wisdom that turn out to be turds.]]>
      </content:encoded>
      <pubDate>Mon, 15 Aug 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/bc70d708/a3bd381a.mp3" length="78427720" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4899</itunes:duration>
      <itunes:summary>Bryan, Adam, and Steve consider nuggets of conventional wisdom that turn out to be turds.</itunes:summary>
      <itunes:subtitle>Bryan, Adam, and Steve consider nuggets of conventional wisdom that turn out to be turds.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>RIP Optane</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>22</itunes:episode>
      <podcast:episode>22</podcast:episode>
      <itunes:title>RIP Optane</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">d3df3050-0915-4893-8bd1-b9e133264795</guid>
      <link>https://share.transistor.fm/s/f2c3465b</link>
      <description>
        <![CDATA[The Oxide Friends pour one out for Optane, Intel's great hope that never managed to find traction.]]>
      </description>
      <content:encoded>
        <![CDATA[The Oxide Friends pour one out for Optane, Intel's great hope that never managed to find traction.]]>
      </content:encoded>
      <pubDate>Mon, 08 Aug 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/f2c3465b/a332e2b6.mp3" length="99122949" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6193</itunes:duration>
      <itunes:summary>The Oxide Friends pour one out for Optane, Intel's great hope that never managed to find traction.</itunes:summary>
      <itunes:subtitle>The Oxide Friends pour one out for Optane, Intel's great hope that never managed to find traction.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Deep Tech Investing</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>21</itunes:episode>
      <podcast:episode>21</podcast:episode>
      <itunes:title>Deep Tech Investing</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">89c63adc-58f8-4f0e-93de-4fda7cb83d3c</guid>
      <link>https://share.transistor.fm/s/d2617506</link>
      <description>
        <![CDATA[Seth Winterroth and Ian Rountree join Bryan, Adam, and the Oxide Friends to talk about investing in deep tech / hard tech.]]>
      </description>
      <content:encoded>
        <![CDATA[Seth Winterroth and Ian Rountree join Bryan, Adam, and the Oxide Friends to talk about investing in deep tech / hard tech.]]>
      </content:encoded>
      <pubDate>Mon, 01 Aug 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/d2617506/f0640c92.mp3" length="72063083" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4501</itunes:duration>
      <itunes:summary>Seth Winterroth and Ian Rountree join Bryan, Adam, and the Oxide Friends to talk about investing in deep tech / hard tech.</itunes:summary>
      <itunes:subtitle>Seth Winterroth and Ian Rountree join Bryan, Adam, and the Oxide Friends to talk about investing in deep tech / hard tech.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Across the Chasm with Rust</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>20</itunes:episode>
      <podcast:episode>20</podcast:episode>
      <itunes:title>Across the Chasm with Rust</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">92a63de2-2408-40e1-ae21-61e09e27ecbe</guid>
      <link>https://share.transistor.fm/s/a620f3ea</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 18th, 2022</b></p><p><strong>Across the Chasm with Rust</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/OqyqzFiP1P0">the recording for our Twitter Space for July 18th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guests were <a href="https://twitter.com/steveklabnik">Steve Klabnik</a> and <a href="https://twitter.com/luqma_">Luqman Aden</a>. Other speakers included <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/timClicks">Tim McNamara</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/OqyqzFiP1P0?t=27">@0:27</a> <em>let_chains are stable in Rust 1.64</em><ul>
<li><a href="https://twitter.com/ahl/status/1548680684796911616">Adam's tweet</a></li>
<li>
<a href="https://github.com/rust-lang/rust/pull/94927#event-7007028976">The stabilization PR</a>, with the full saga leading up to stabilization</li>
<li>As Steve mentions, the feature dates <a href="https://github.com/rust-lang/rfcs/pull/2260">all the way back to 2017</a> and extends the <a href="https://github.com/rust-lang/rfcs/pull/160">Swift-inspired if let expressions</a> Rust has had for a while</li>
<li>Some Rust features, like <a href="https://rust-lang.github.io/rfcs/3185-static-async-fn-in-trait.html">async functions in traits</a>, are <a href="https://github.com/rust-lang/rfcs/pull/3185">huge</a> rabbit <a href="http://www.smallcultfollowing.com/babysteps/blog/2019/10/26/async-fn-in-traits-are-hard/">holes</a>
</li>
<li>Discussion about Rust's commitment to stability and how it's <a href="https://brson.github.io/2017/07/10/how-rust-is-tested">enforced</a> with things like <a href="https://github.com/rust-lang/crater">crater</a>
</li>
<li>As an example of the <em>process</em> leading to burnout in programming language communities: Guido <a href="https://lwn.net/Articles/759654/">stepping down as BDFL</a> after <a href="https://peps.python.org/pep-0572/">PEP 572</a> (Assignment Expressions, <em>"the walrus operator"</em>)</li>
<li>Discussion about Ruby also taking stability seriously: <a href="https://docs.ruby-lang.org/en/master/syntax/control_expressions_rdoc.html#label-Flip-Flop">flip-flops</a> <a href="https://bugs.ruby-lang.org/issues/5400"><em>weren't</em> removed in Ruby 2.0</a> in part because of <a href="https://bugs.ruby-lang.org/issues/5400#note-3">this pretty incredible snippet</a> from <a href="https://github.com/mame">Yusuke Endoh</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Quine_%28computing%29">Quines</a> and <a href="https://en.wikipedia.org/wiki/Quine_(computing)#Ouroboros_programs">variations</a>, <a href="https://github.com/mame">Yusuke Endoh</a>'s <a href="https://mamememo.blogspot.com/2010/09/qlobe.html">Qlobe</a> (reproduced <a href="https://github.com/knoxknox/qlobe">here</a>), their infamous <a href="https://github.com/mame/quine-relay">quine-relay</a>, and their <a href="https://www.youtube.com/watch?v=6K7EmeptEHo">other projects</a>
</li>
<li>The <a href="https://pt.wikipedia.org/wiki/G-Portugol">G-Portugol</a> programming language</li>
<li>
<a href="https://doc.rust-lang.org/book/appendix-07-nightly-rust.html#unstable-features">The unstable features mechanism</a> in Rust ("first class support for experimental features") and how this allows for user experimentation</li>
<li>
<a href="https://github.com/rust-lang/rust/issues/37854">Exclusive range patterns</a> in Rust and some of their <a href="https://github.com/rust-lang/rust/issues/37854#issuecomment-575292595">perils</a>, specifically <a href="https://github.com/tock/tock/issues/1544">in tock</a>
</li>
<li>Contrasting the Rust unstable feature mechanism with <a href="https://wiki.haskell.org/Language_Pragmas">Haskell language pragmas</a>: the former requires a nightly compiler to use, the latter does not</li>
</ul>
</li>
<li>
<a href="https://youtu.be/OqyqzFiP1P0?t=1101">@18:20</a> <em>Discussion about the Rust process; going from RFC to stable Rust</em><ul>
<li>The Rust <a href="https://doc.rust-lang.org/reference/inline-assembly.html">inline assembly feature</a> (<a href="https://github.com/rust-lang/rfcs/pull/2873">tracking issue</a>)</li>
<li>The <a href="https://github.com/rust-lang/rfcs">Rust RFC repo</a>
</li>
<li>The <a href="https://rust-lang.github.io/rfcs/1598-generic_associated_types.html">Generic Associated Types (GATs) Rust RFC</a>
</li>
<li>
<a href="https://github.com/oxidecomputer/hubris">hubris</a> is <a href="https://github.com/oxidecomputer/hubris/blob/875c53d3de2f26b3e0382343ed8556f92e40a0ba/rust-toolchain.toml#L2">on nightly Rust</a> but with an <a href="https://github.com/oxidecomputer/hubris/commit/e3f699d534aa52567182718352af51af5b0de37f">allow list of features</a>
</li>
<li>
<a href="https://github.com/rust-lang/rfcs/blob/master/text/1201-naked-fns.md">Naked functions in Rust</a> (<a href="https://github.com/rust-lang/rust/issues/32408">tracking issue</a>), <a href="https://rust-lang.github.io/rfcs/2909-destructuring-assignment.html">Destructuring assignments</a>, <a href="https://github.com/rust-lang/rust/issues/75835">#[cmse_nonsecure_entry]</a>
</li>
<li>Talking about <a href="https://lwn.net/">LWN</a>-style reports and <em>curation</em> as a way to lessen the pain of using Zulip style chat platforms for discussion</li>
<li>LWN is <a href="https://lwn.net/Articles/895695/">hiring</a>, looking for someone to keep up with Rust development, among other things</li>
</ul>
</li>
<li>[[partial notes]]</li>
</ul>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 18th, 2022</b></p><p><strong>Across the Chasm with Rust</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/OqyqzFiP1P0">the recording for our Twitter Space for July 18th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guests were <a href="https://twitter.com/steveklabnik">Steve Klabnik</a> and <a href="https://twitter.com/luqma_">Luqman Aden</a>. Other speakers included <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/timClicks">Tim McNamara</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/OqyqzFiP1P0?t=27">@0:27</a> <em>let_chains are stable in Rust 1.64</em><ul>
<li><a href="https://twitter.com/ahl/status/1548680684796911616">Adam's tweet</a></li>
<li>
<a href="https://github.com/rust-lang/rust/pull/94927#event-7007028976">The stabilization PR</a>, with the full saga leading up to stabilization</li>
<li>As Steve mentions, the feature dates <a href="https://github.com/rust-lang/rfcs/pull/2260">all the way back to 2017</a> and extends the <a href="https://github.com/rust-lang/rfcs/pull/160">Swift-inspired if let expressions</a> Rust has had for a while</li>
<li>Some Rust features, like <a href="https://rust-lang.github.io/rfcs/3185-static-async-fn-in-trait.html">async functions in traits</a>, are <a href="https://github.com/rust-lang/rfcs/pull/3185">huge</a> rabbit <a href="http://www.smallcultfollowing.com/babysteps/blog/2019/10/26/async-fn-in-traits-are-hard/">holes</a>
</li>
<li>Discussion about Rust's commitment to stability and how it's <a href="https://brson.github.io/2017/07/10/how-rust-is-tested">enforced</a> with things like <a href="https://github.com/rust-lang/crater">crater</a>
</li>
<li>As an example of the <em>process</em> leading to burnout in programming language communities: Guido <a href="https://lwn.net/Articles/759654/">stepping down as BDFL</a> after <a href="https://peps.python.org/pep-0572/">PEP 572</a> (Assignment Expressions, <em>"the walrus operator"</em>)</li>
<li>Discussion about Ruby also taking stability seriously: <a href="https://docs.ruby-lang.org/en/master/syntax/control_expressions_rdoc.html#label-Flip-Flop">flip-flops</a> <a href="https://bugs.ruby-lang.org/issues/5400"><em>weren't</em> removed in Ruby 2.0</a> in part because of <a href="https://bugs.ruby-lang.org/issues/5400#note-3">this pretty incredible snippet</a> from <a href="https://github.com/mame">Yusuke Endoh</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Quine_%28computing%29">Quines</a> and <a href="https://en.wikipedia.org/wiki/Quine_(computing)#Ouroboros_programs">variations</a>, <a href="https://github.com/mame">Yusuke Endoh</a>'s <a href="https://mamememo.blogspot.com/2010/09/qlobe.html">Qlobe</a> (reproduced <a href="https://github.com/knoxknox/qlobe">here</a>), their infamous <a href="https://github.com/mame/quine-relay">quine-relay</a>, and their <a href="https://www.youtube.com/watch?v=6K7EmeptEHo">other projects</a>
</li>
<li>The <a href="https://pt.wikipedia.org/wiki/G-Portugol">G-Portugol</a> programming language</li>
<li>
<a href="https://doc.rust-lang.org/book/appendix-07-nightly-rust.html#unstable-features">The unstable features mechanism</a> in Rust ("first class support for experimental features") and how this allows for user experimentation</li>
<li>
<a href="https://github.com/rust-lang/rust/issues/37854">Exclusive range patterns</a> in Rust and some of their <a href="https://github.com/rust-lang/rust/issues/37854#issuecomment-575292595">perils</a>, specifically <a href="https://github.com/tock/tock/issues/1544">in tock</a>
</li>
<li>Contrasting the Rust unstable feature mechanism with <a href="https://wiki.haskell.org/Language_Pragmas">Haskell language pragmas</a>: the former requires a nightly compiler to use, the latter does not</li>
</ul>
</li>
<li>
<a href="https://youtu.be/OqyqzFiP1P0?t=1101">@18:20</a> <em>Discussion about the Rust process; going from RFC to stable Rust</em><ul>
<li>The Rust <a href="https://doc.rust-lang.org/reference/inline-assembly.html">inline assembly feature</a> (<a href="https://github.com/rust-lang/rfcs/pull/2873">tracking issue</a>)</li>
<li>The <a href="https://github.com/rust-lang/rfcs">Rust RFC repo</a>
</li>
<li>The <a href="https://rust-lang.github.io/rfcs/1598-generic_associated_types.html">Generic Associated Types (GATs) Rust RFC</a>
</li>
<li>
<a href="https://github.com/oxidecomputer/hubris">hubris</a> is <a href="https://github.com/oxidecomputer/hubris/blob/875c53d3de2f26b3e0382343ed8556f92e40a0ba/rust-toolchain.toml#L2">on nightly Rust</a> but with an <a href="https://github.com/oxidecomputer/hubris/commit/e3f699d534aa52567182718352af51af5b0de37f">allow list of features</a>
</li>
<li>
<a href="https://github.com/rust-lang/rfcs/blob/master/text/1201-naked-fns.md">Naked functions in Rust</a> (<a href="https://github.com/rust-lang/rust/issues/32408">tracking issue</a>), <a href="https://rust-lang.github.io/rfcs/2909-destructuring-assignment.html">Destructuring assignments</a>, <a href="https://github.com/rust-lang/rust/issues/75835">#[cmse_nonsecure_entry]</a>
</li>
<li>Talking about <a href="https://lwn.net/">LWN</a>-style reports and <em>curation</em> as a way to lessen the pain of using Zulip style chat platforms for discussion</li>
<li>LWN is <a href="https://lwn.net/Articles/895695/">hiring</a>, looking for someone to keep up with Rust development, among other things</li>
</ul>
</li>
<li>[[partial notes]]</li>
</ul>]]>
      </content:encoded>
      <pubDate>Mon, 18 Jul 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/a620f3ea/e1b7819e.mp3" length="100256530" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6263</itunes:duration>
      <itunes:summary>Bryan and Adam talk with Steve Klabnik and Luqman Aden about their deep, abiding love for Rust... despite a rocky start.</itunes:summary>
      <itunes:subtitle>Bryan and Adam talk with Steve Klabnik and Luqman Aden about their deep, abiding love for Rust... despite a rocky start.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Integrating Hardware and Software Teams</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>19</itunes:episode>
      <podcast:episode>19</podcast:episode>
      <itunes:title>Integrating Hardware and Software Teams</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">eb3a825f-e6d4-4f5e-a901-06ed181ff100</guid>
      <link>https://share.transistor.fm/s/44bc17c3</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 11th, 2022</b></p><p><strong>Integrating Hardware and Software Teams</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/jsdj8gqLRJc">the recording for our Twitter Space for July 11th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our esteemed guest was <a href="https://twitter.com/jonmasters">Jon Masters</a>. Other speakers included <a href="https://twitter.com/SyntheticGate">Nathaneal Huffman</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/mxshift">Rick Altherr</a>, <a href="https://twitter.com/impraxical">Matt Keeter</a>, <a href="https://twitter.com/PeterCorless">Peter Corless</a>, <a href="https://twitter.com/timonsku">Timon</a>, <a href="https://twitter.com/s14joshi">Siddharth Joshi</a>, <a href="https://twitter.com/c50bae86ae1b461">Bob Mader</a>, <a href="https://twitter.com/AaronDGoldman">Aaron David Goldman</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/taktoa1">Remy Goldschmidt</a>, and <a href="https://twitter.com/MattSci2">MattSci</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=272">@4:32</a> <em>Fostering of mutual hatred between hardware and software people</em><ul><li>Huge difference in cost of errors in both time and money</li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=578">@9:38</a> <em>Dealing with perishable pre-preg material Tachyon 100G</em><ul><li><a href="https://www.isola-group.com/wp-content/uploads/data-sheets/tachyon-100g-laminate-and-prepreg.pdf?t=2116403728">Tachyon 100G</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=906">@15:06</a> <em>The black magic that is DDR</em><ul><li><a href="https://www.youtube.com/watch?v=K5nKFwmv-rk">DIMM training demo</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=1318">@21:58</a> <em>Open source tooling for EEs</em><ul>
<li><a href="https://github.com/YosysHQ/oss-cad-suite-build">Open FPGA tooling</a></li>
<li><a href="https://openrisc.io/">Open RISC</a></li>
<li><a href="https://en.wikipedia.org/wiki/RISC-V">RISC V</a></li>
<li><a href="https://www.zerotoasiccourse.com/matt_venn/">Zero to ASIC course</a></li>
<li><a href="https://www.linuxfromscratch.org/">Linux from scratch</a></li>
<li><a href="https://eater.net/8bit/">Ben Eater's 8bit computer</a></li>
<li><a href="https://www.youtube.com/watch?v=aVUqaB0IMh4">Phil's lab, KiCad 6 PCB design walkthough</a></li>
<li><a href="https://www.youtube.com/watch?v=PMEpQZ90f34">Phil's lab, Altium Designer PCB design walkthough</a></li>
</ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=1998">@33:18</a> <em>Matt Keeter's take on ECAD tools</em><ul>
<li><a href="https://en.wikipedia.org/wiki/EAGLE_(program)">Eagle CAD</a></li>
<li>Smaller breakout boards made with <a href="https://www.kicad.org/">KiCad</a> for unit testing</li>
</ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=2215">@36:55</a> <em>Timon's take on EE curriculum</em><ul>
<li>Math-heavy electrical engineering curriculum</li>
<li><a href="https://en.wikipedia.org/wiki/The_Art_of_Electronics">Arts of Electronics</a></li>
<li>Knowing at least basics of adjacent disciplines goes a long way</li>
</ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=2943">@49:03</a> <em>Software shouldn't pierce abstractions in order to work reliably, but people should to deepen their knowledge</em>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=3894">@1:04:54</a> <em>Making microchips at home</em><ul>
<li><a href="http://sam.zeloof.xyz/maskless-photolithography/">Sam Zeloof, maskless-photolithography</a></li>
<li><a href="https://www.youtube.com/watch?v=PdcKwOo7dmM">Jeri Elseworth, making microchips at home</a></li>
</ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=3965">@1:06:05</a> <em>Oxide gets a Pick'n'Place machine?</em><ul><li><a href="https://opulo.io/">Open Hardware Pick'n'Place machine</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=4180">@1:09:40</a> <em>Bob's take on silos</em><ul><li><a href="https://en.wikipedia.org/wiki/System_Management_Mode">SMM, System Management Mode</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=4935">@1:22:15</a> <em>Vintage gaming as an intro into embedded software</em><ul><li><a href="https://www.youtube.com/watch?v=QS4fzElm8zk">WiFi Game Boy Cartridge</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=5174">@1:26:14</a> <em>Fabs at UNI</em>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=5380">@1:29:40</a> <em>Intel Tofino (TM) Series Programmable Ethernet Switch ASIC</em><ul><li><a href="https://www.intel.com/content/www/us/en/products/network-io/programmable-ethernet-switch/tofino-series.html">Intel Tofino</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=5473">@1:31:13</a> <em>Google's open source high level synth. (HLS) tool XLS</em><ul>
<li><a href="https://github.com/google/xls">XLS</a></li>
<li><a href="https://bluespec.com/">Bluespec</a></li>
<li><a href="https://www.chisel-lang.org/">Chisel</a></li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 11th, 2022</b></p><p><strong>Integrating Hardware and Software Teams</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/jsdj8gqLRJc">the recording for our Twitter Space for July 11th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our esteemed guest was <a href="https://twitter.com/jonmasters">Jon Masters</a>. Other speakers included <a href="https://twitter.com/SyntheticGate">Nathaneal Huffman</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/mxshift">Rick Altherr</a>, <a href="https://twitter.com/impraxical">Matt Keeter</a>, <a href="https://twitter.com/PeterCorless">Peter Corless</a>, <a href="https://twitter.com/timonsku">Timon</a>, <a href="https://twitter.com/s14joshi">Siddharth Joshi</a>, <a href="https://twitter.com/c50bae86ae1b461">Bob Mader</a>, <a href="https://twitter.com/AaronDGoldman">Aaron David Goldman</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/taktoa1">Remy Goldschmidt</a>, and <a href="https://twitter.com/MattSci2">MattSci</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=272">@4:32</a> <em>Fostering of mutual hatred between hardware and software people</em><ul><li>Huge difference in cost of errors in both time and money</li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=578">@9:38</a> <em>Dealing with perishable pre-preg material Tachyon 100G</em><ul><li><a href="https://www.isola-group.com/wp-content/uploads/data-sheets/tachyon-100g-laminate-and-prepreg.pdf?t=2116403728">Tachyon 100G</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=906">@15:06</a> <em>The black magic that is DDR</em><ul><li><a href="https://www.youtube.com/watch?v=K5nKFwmv-rk">DIMM training demo</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=1318">@21:58</a> <em>Open source tooling for EEs</em><ul>
<li><a href="https://github.com/YosysHQ/oss-cad-suite-build">Open FPGA tooling</a></li>
<li><a href="https://openrisc.io/">Open RISC</a></li>
<li><a href="https://en.wikipedia.org/wiki/RISC-V">RISC V</a></li>
<li><a href="https://www.zerotoasiccourse.com/matt_venn/">Zero to ASIC course</a></li>
<li><a href="https://www.linuxfromscratch.org/">Linux from scratch</a></li>
<li><a href="https://eater.net/8bit/">Ben Eater's 8bit computer</a></li>
<li><a href="https://www.youtube.com/watch?v=aVUqaB0IMh4">Phil's lab, KiCad 6 PCB design walkthough</a></li>
<li><a href="https://www.youtube.com/watch?v=PMEpQZ90f34">Phil's lab, Altium Designer PCB design walkthough</a></li>
</ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=1998">@33:18</a> <em>Matt Keeter's take on ECAD tools</em><ul>
<li><a href="https://en.wikipedia.org/wiki/EAGLE_(program)">Eagle CAD</a></li>
<li>Smaller breakout boards made with <a href="https://www.kicad.org/">KiCad</a> for unit testing</li>
</ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=2215">@36:55</a> <em>Timon's take on EE curriculum</em><ul>
<li>Math-heavy electrical engineering curriculum</li>
<li><a href="https://en.wikipedia.org/wiki/The_Art_of_Electronics">Arts of Electronics</a></li>
<li>Knowing at least basics of adjacent disciplines goes a long way</li>
</ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=2943">@49:03</a> <em>Software shouldn't pierce abstractions in order to work reliably, but people should to deepen their knowledge</em>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=3894">@1:04:54</a> <em>Making microchips at home</em><ul>
<li><a href="http://sam.zeloof.xyz/maskless-photolithography/">Sam Zeloof, maskless-photolithography</a></li>
<li><a href="https://www.youtube.com/watch?v=PdcKwOo7dmM">Jeri Elseworth, making microchips at home</a></li>
</ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=3965">@1:06:05</a> <em>Oxide gets a Pick'n'Place machine?</em><ul><li><a href="https://opulo.io/">Open Hardware Pick'n'Place machine</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=4180">@1:09:40</a> <em>Bob's take on silos</em><ul><li><a href="https://en.wikipedia.org/wiki/System_Management_Mode">SMM, System Management Mode</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=4935">@1:22:15</a> <em>Vintage gaming as an intro into embedded software</em><ul><li><a href="https://www.youtube.com/watch?v=QS4fzElm8zk">WiFi Game Boy Cartridge</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=5174">@1:26:14</a> <em>Fabs at UNI</em>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=5380">@1:29:40</a> <em>Intel Tofino (TM) Series Programmable Ethernet Switch ASIC</em><ul><li><a href="https://www.intel.com/content/www/us/en/products/network-io/programmable-ethernet-switch/tofino-series.html">Intel Tofino</a></li></ul>
</li>
<li>
<a href="https://youtu.be/jsdj8gqLRJc?t=5473">@1:31:13</a> <em>Google's open source high level synth. (HLS) tool XLS</em><ul>
<li><a href="https://github.com/google/xls">XLS</a></li>
<li><a href="https://bluespec.com/">Bluespec</a></li>
<li><a href="https://www.chisel-lang.org/">Chisel</a></li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 11 Jul 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/44bc17c3/5618f8f4.mp3" length="99010286" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6186</itunes:duration>
      <itunes:summary>Jon Masters joins the Oxide and friends to talk about the benefits of having hardware and software engineers working together... and the peril of separating them!</itunes:summary>
      <itunes:subtitle>Jon Masters joins the Oxide and friends to talk about the benefits of having hardware and software engineers working together... and the peril of separating them!</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Books in the box redux</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>18</itunes:episode>
      <podcast:episode>18</podcast:episode>
      <itunes:title>Books in the box redux</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">cb7179e9-4d27-4306-b1e2-8e2ad23c929a</guid>
      <link>https://share.transistor.fm/s/375557ff</link>
      <description>
        <![CDATA[<p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/V85oeH4Byy0">the recording for our Twitter Space for June 27th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/fuzzygroup">Scott Johnson</a>. Other speakers included <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">XX</a> and <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">YY</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=120s">@2:00</a> <a href="https://www.oreilly.com/library/view/beautiful-c-30/9780137647767/">Beautiful C++</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=825s">@13:45</a> <a href="https://www.oreilly.com/library/view/dec-is-dead/9781605094083/">DEC is Dead, Long Live DEC</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=900s">@15:00</a> <a href="https://www.goodreads.com/book/show/2091881.Almost_Perfect">Almost Perfect</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=1040s">@17:20</a> <a href="http://friendlyorangeglow.com/">The Friendly Orange Glow</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=1090s">@18:10</a> <a href="https://www.goodreads.com/en/book/show/226316.Steve_Jobs_the_NeXT_Big_Thing">Steve Jobs &amp; the NeXT Big Thing</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=1130s">@18:50</a> <a href="https://www.goodreads.com/book/show/7090.The_Soul_of_a_New_Machine">The Soul of a New Machine</a>
</li>
<li>
<a href="https://youtu.be/V85oeH4Byy0?t=2168">@36:08</a> <a href="https://www.goodreads.com/book/show/93462.Reinventing_the_Wheel">Reinventing the Wheel</a>
</li>
<li>
<a href="https://youtu.be/V85oeH4Byy0?t=2293">@38:13</a> <a href="https://www.goodreads.com/book/show/3176553-creative-capital">Creative Capital</a>
</li>
</ul>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/V85oeH4Byy0">the recording for our Twitter Space for June 27th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/fuzzygroup">Scott Johnson</a>. Other speakers included <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">XX</a> and <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">YY</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=120s">@2:00</a> <a href="https://www.oreilly.com/library/view/beautiful-c-30/9780137647767/">Beautiful C++</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=825s">@13:45</a> <a href="https://www.oreilly.com/library/view/dec-is-dead/9781605094083/">DEC is Dead, Long Live DEC</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=900s">@15:00</a> <a href="https://www.goodreads.com/book/show/2091881.Almost_Perfect">Almost Perfect</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=1040s">@17:20</a> <a href="http://friendlyorangeglow.com/">The Friendly Orange Glow</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=1090s">@18:10</a> <a href="https://www.goodreads.com/en/book/show/226316.Steve_Jobs_the_NeXT_Big_Thing">Steve Jobs &amp; the NeXT Big Thing</a>
</li>
<li>
<a href="https://www.youtube.com/watch?v=V85oeH4Byy0&amp;t=1130s">@18:50</a> <a href="https://www.goodreads.com/book/show/7090.The_Soul_of_a_New_Machine">The Soul of a New Machine</a>
</li>
<li>
<a href="https://youtu.be/V85oeH4Byy0?t=2168">@36:08</a> <a href="https://www.goodreads.com/book/show/93462.Reinventing_the_Wheel">Reinventing the Wheel</a>
</li>
<li>
<a href="https://youtu.be/V85oeH4Byy0?t=2293">@38:13</a> <a href="https://www.goodreads.com/book/show/3176553-creative-capital">Creative Capital</a>
</li>
</ul>]]>
      </content:encoded>
      <pubDate>Mon, 27 Jun 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/375557ff/5df5a358.mp3" length="99398336" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6210</itunes:duration>
      <itunes:summary>Scott Johnson shares his library of tech/business/culture books</itunes:summary>
      <itunes:subtitle>Scott Johnson shares his library of tech/business/culture books</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Paths into Systems Programming</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>17</itunes:episode>
      <podcast:episode>17</podcast:episode>
      <itunes:title>Paths into Systems Programming</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">cbf69bb4-1943-401b-b57c-f0950326e388</guid>
      <link>https://share.transistor.fm/s/7430f114</link>
      <description>
        <![CDATA[<p>pending</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>pending</p>]]>
      </content:encoded>
      <pubDate>Mon, 20 Jun 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/7430f114/ecbf8ac2.mp3" length="103074569" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6440</itunes:duration>
      <itunes:summary>Bryan, Adam, and the Oxide Friends tackle the question of how to break into systems programming.. with only some philosophizing on the nature of systems programming... and the nature of software.</itunes:summary>
      <itunes:subtitle>Bryan, Adam, and the Oxide Friends tackle the question of how to break into systems programming.. with only some philosophizing on the nature of systems programming... and the nature of software.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Rise and Fall of DEC</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>16</itunes:episode>
      <podcast:episode>16</podcast:episode>
      <itunes:title>The Rise and Fall of DEC</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">a1e5fd1c-d609-4dbb-bf5a-d683f4ced5dd</guid>
      <link>https://share.transistor.fm/s/0b5553f5</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: June 13th, 2022</b></p><p><strong>The Rise and Fall of DEC</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/-m6GFs3GuU0">the recording for our Twitter Space for June 13th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on June 13th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/timbray">Tim Bray</a>, <a href="https://twitter.com/iangrunert">Ian Grunert</a>, and <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">XXX</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="https://twitter.com/bcantrill/status/1536405966886801408">Pronunciation and mispronunciation</a></li>
<li>Bryan's DEC reading list:<ul>
<li><a href="https://www.goodreads.com/en/book/show/1720422.The_Ultimate_Entrepreneur">The Ultimate Entrepreneur by Glenn Rifkin, George Harrar</a></li>
<li><a href="https://www.goodreads.com/book/show/29333778-learn-earn-return---my-life-as-a-computer-pioneer">Learn, Earn &amp; Return - My Life as a Computer Pioneer by Harlan Anderson</a></li>
<li><a href="https://www.goodreads.com/en/book/show/1096858.High_tech_Ventures">High-tech Ventures: The Guide For Entrepreneurial Success by C. Gordon Bell, John McNamara</a></li>
<li><a href="https://www.goodreads.com/en/book/show/2228124.Computer_engineering">Computer engineering: A DEC view of hardware systems design by C. Gordon Bell, J. Craig Mudge, John McNamara</a></li>
<li><a href="https://www.goodreads.com/en/book/show/3176553-creative-capital">Creative Capital: Georges Doriot and the Birth of Venture Capital by Spencer E. Ante</a></li>
<li><a href="https://www.goodreads.com/book/show/341220.DEC_Is_Dead_Long_Live_DEC">DEC Is Dead, Long Live DEC: The Lasting Legacy of Digital Equipment Corporation by Edgar H. Schein, Paul J. Kampas, Michael M. Sonduck, Peter S. Delisi</a></li>
</ul>
</li>
<li>
<a href="https://youtu.be/-m6GFs3GuU0?t=5345">@1:29:05</a> Ian mentions Computer History Museum's <a href="https://www.computerhistory.org/collections/oralhistories">oral history program</a> prompting strong recommendations:<ul>
<li>Ian: <a href="https://www.computerhistory.org/collections/catalog/102740460">Bernie Lacroute</a>
</li>
<li>Adam: <a href="https://www.computerhistory.org/collections/catalog/102738292">Pierre Lamond</a>
</li>
<li>Bryan: <a href="https://www.computerhistory.org/collections/catalog/102717162">Dave Cutler</a>
</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: June 13th, 2022</b></p><p><strong>The Rise and Fall of DEC</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/-m6GFs3GuU0">the recording for our Twitter Space for June 13th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on June 13th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/timbray">Tim Bray</a>, <a href="https://twitter.com/iangrunert">Ian Grunert</a>, and <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">XXX</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="https://twitter.com/bcantrill/status/1536405966886801408">Pronunciation and mispronunciation</a></li>
<li>Bryan's DEC reading list:<ul>
<li><a href="https://www.goodreads.com/en/book/show/1720422.The_Ultimate_Entrepreneur">The Ultimate Entrepreneur by Glenn Rifkin, George Harrar</a></li>
<li><a href="https://www.goodreads.com/book/show/29333778-learn-earn-return---my-life-as-a-computer-pioneer">Learn, Earn &amp; Return - My Life as a Computer Pioneer by Harlan Anderson</a></li>
<li><a href="https://www.goodreads.com/en/book/show/1096858.High_tech_Ventures">High-tech Ventures: The Guide For Entrepreneurial Success by C. Gordon Bell, John McNamara</a></li>
<li><a href="https://www.goodreads.com/en/book/show/2228124.Computer_engineering">Computer engineering: A DEC view of hardware systems design by C. Gordon Bell, J. Craig Mudge, John McNamara</a></li>
<li><a href="https://www.goodreads.com/en/book/show/3176553-creative-capital">Creative Capital: Georges Doriot and the Birth of Venture Capital by Spencer E. Ante</a></li>
<li><a href="https://www.goodreads.com/book/show/341220.DEC_Is_Dead_Long_Live_DEC">DEC Is Dead, Long Live DEC: The Lasting Legacy of Digital Equipment Corporation by Edgar H. Schein, Paul J. Kampas, Michael M. Sonduck, Peter S. Delisi</a></li>
</ul>
</li>
<li>
<a href="https://youtu.be/-m6GFs3GuU0?t=5345">@1:29:05</a> Ian mentions Computer History Museum's <a href="https://www.computerhistory.org/collections/oralhistories">oral history program</a> prompting strong recommendations:<ul>
<li>Ian: <a href="https://www.computerhistory.org/collections/catalog/102740460">Bernie Lacroute</a>
</li>
<li>Adam: <a href="https://www.computerhistory.org/collections/catalog/102738292">Pierre Lamond</a>
</li>
<li>Bryan: <a href="https://www.computerhistory.org/collections/catalog/102717162">Dave Cutler</a>
</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 13 Jun 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/0b5553f5/259024cd.mp3" length="107468092" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6714</itunes:duration>
      <itunes:summary>After Bryan's binge reading of all things DEC (Digital Equipment Corporation), the Oxide and Friends talk through the its meteoric rise and slow descent into ... Compaq.</itunes:summary>
      <itunes:subtitle>After Bryan's binge reading of all things DEC (Digital Equipment Corporation), the Oxide and Friends talk through the its meteoric rise and slow descent into ... Compaq.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Surviving the Dot-Com Bust</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>15</itunes:episode>
      <podcast:episode>15</podcast:episode>
      <itunes:title>Surviving the Dot-Com Bust</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">fa5394d4-44b2-4086-8f24-08caa5b882cc</guid>
      <link>https://share.transistor.fm/s/24fc5695</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 23rd, 2022</b></p><p><strong>Surviving the Dot-Com Bust</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/hEIoCeqMbWU">the recording for our Twitter Space for May 23rd, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on May 23rd included <a href="https://twitter.com/danmcd">Dan McDonald</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a> and <a href="https://twitter.com/postwait">Theo Schlossnagle</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=97">@1:37</a> Pick and shovels story circulating at Sun<ul>
<li>Oakes Ames "King of Spades", pbs <a href="https://www.pbs.org/wgbh/americanexperience/features/tcrr-ames/">article</a>, <a href="https://en.wikipedia.org/wiki/Oakes_Ames">wiki</a>
</li>
<li>boo.com <a href="https://en.wikipedia.org/wiki/Boo.com">wiki</a>
</li>
<li>pets.com <a href="https://en.wikipedia.org/wiki/Pets.com">wiki</a>
</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=660">@11:00</a> IPOs and public exposure<ul><li>theGlobe.com <a href="https://en.wikipedia.org/wiki/TheGlobe.com">wiki</a>
</li></ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=1100">@18:20</a> "The Correction"<ul>
<li>Feasting like 19th century robber barons</li>
<li>Nov 2000, free fall</li>
<li>Trilogy, Inc <a href="https://en.wikipedia.org/wiki/Trilogy_(company)">wiki</a>
</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=1729">@28:49</a> Students looking for placement<ul><li>Clarity of the bust</li></ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=2195">@36:35</a> Billboards on the 101<ul><li>garden.com, cnn <a href="https://money.cnn.com/galleries/2010/technology/1003/gallery.dot_com_busts/10.html">blurb</a>
</li></ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=2353">@39:13</a> Theo's story, roulette at Trilogy</li>
<li>Expansion and contraction of CS student enrollment</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=2780">@46:20</a> Matt's memories<ul>
<li>AllAdvantage <a href="https://en.wikipedia.org/wiki/AllAdvantage">wiki</a>
</li>
<li>Excite@Home <a href="https://en.wikipedia.org/wiki/Excite_(web_portal)#Excite@Home">wiki</a>
</li>
</ul>
</li>
<li>John Talbott "The Fall of Silicon Graphics" <a href="https://www.triplepundit.com/story/2012/fall-silicon-graphics/61346">article</a>
</li>
<li>Fucked Company <a href="https://en.wikipedia.org/wiki/Fucked_Company">wiki</a>
</li>
<li>Camaraderie over watching your companies imploding</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=3219">@53:39</a> Looking towards the looming housing bubble<ul><li>During Oxide raise, race against time for VC funding</li></ul>
</li>
<li>Pandemic<ul>
<li>Hot venture environment, over-valued companies</li>
<li>Stimulus, spending on non-essentials, exacerbating income inequality</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=3536">@58:56</a> Differences from the dot-com era, more defined revenue models?<ul>
<li>Food delivery services, harbingers of bust?</li>
<li>Steve anecdote: Dellionaires, margin call day, layoffs</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=4092">@1:08:12</a> Dan's second startup experience<ul><li>Windows on the World <a href="https://en.wikipedia.org/wiki/Windows_on_the_World">wiki</a>
</li></ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=4215">@1:10:15</a> Matt's question: can Oxide weather a tech bust?<ul>
<li>Adam: downturn can motivate seeking value, looking away from (stable, pricey) incumbents to (riskier, cheaper) new offerings</li>
<li>Bryan: dot com bust pushed us toward open-source, for economic reasons.</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=4551">@1:15:51</a> Are we headed for a bust? How deep?<ul>
<li>How does a company survive the lean times?</li>
<li>Negative human consequences</li>
<li>mammon (money, material wealth) <a href="https://en.wikipedia.org/wiki/Mammon">wiki</a>
</li>
<li>Advice for practitioners?</li>
</ul>
</li>
<li>Dan McDonald: controlling inflation, starting companies</li>
<li>Theo: downturn will hit industries differently, concerns over global supply chain</li>
<li>Adam: don't forget about helping others, looking out for other people, for the future of our world.</li>
<li>Dan Cross: if it looks to good to be true, it probably is.</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 23rd, 2022</b></p><p><strong>Surviving the Dot-Com Bust</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/hEIoCeqMbWU">the recording for our Twitter Space for May 23rd, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on May 23rd included <a href="https://twitter.com/danmcd">Dan McDonald</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a> and <a href="https://twitter.com/postwait">Theo Schlossnagle</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=97">@1:37</a> Pick and shovels story circulating at Sun<ul>
<li>Oakes Ames "King of Spades", pbs <a href="https://www.pbs.org/wgbh/americanexperience/features/tcrr-ames/">article</a>, <a href="https://en.wikipedia.org/wiki/Oakes_Ames">wiki</a>
</li>
<li>boo.com <a href="https://en.wikipedia.org/wiki/Boo.com">wiki</a>
</li>
<li>pets.com <a href="https://en.wikipedia.org/wiki/Pets.com">wiki</a>
</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=660">@11:00</a> IPOs and public exposure<ul><li>theGlobe.com <a href="https://en.wikipedia.org/wiki/TheGlobe.com">wiki</a>
</li></ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=1100">@18:20</a> "The Correction"<ul>
<li>Feasting like 19th century robber barons</li>
<li>Nov 2000, free fall</li>
<li>Trilogy, Inc <a href="https://en.wikipedia.org/wiki/Trilogy_(company)">wiki</a>
</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=1729">@28:49</a> Students looking for placement<ul><li>Clarity of the bust</li></ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=2195">@36:35</a> Billboards on the 101<ul><li>garden.com, cnn <a href="https://money.cnn.com/galleries/2010/technology/1003/gallery.dot_com_busts/10.html">blurb</a>
</li></ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=2353">@39:13</a> Theo's story, roulette at Trilogy</li>
<li>Expansion and contraction of CS student enrollment</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=2780">@46:20</a> Matt's memories<ul>
<li>AllAdvantage <a href="https://en.wikipedia.org/wiki/AllAdvantage">wiki</a>
</li>
<li>Excite@Home <a href="https://en.wikipedia.org/wiki/Excite_(web_portal)#Excite@Home">wiki</a>
</li>
</ul>
</li>
<li>John Talbott "The Fall of Silicon Graphics" <a href="https://www.triplepundit.com/story/2012/fall-silicon-graphics/61346">article</a>
</li>
<li>Fucked Company <a href="https://en.wikipedia.org/wiki/Fucked_Company">wiki</a>
</li>
<li>Camaraderie over watching your companies imploding</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=3219">@53:39</a> Looking towards the looming housing bubble<ul><li>During Oxide raise, race against time for VC funding</li></ul>
</li>
<li>Pandemic<ul>
<li>Hot venture environment, over-valued companies</li>
<li>Stimulus, spending on non-essentials, exacerbating income inequality</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=3536">@58:56</a> Differences from the dot-com era, more defined revenue models?<ul>
<li>Food delivery services, harbingers of bust?</li>
<li>Steve anecdote: Dellionaires, margin call day, layoffs</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=4092">@1:08:12</a> Dan's second startup experience<ul><li>Windows on the World <a href="https://en.wikipedia.org/wiki/Windows_on_the_World">wiki</a>
</li></ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=4215">@1:10:15</a> Matt's question: can Oxide weather a tech bust?<ul>
<li>Adam: downturn can motivate seeking value, looking away from (stable, pricey) incumbents to (riskier, cheaper) new offerings</li>
<li>Bryan: dot com bust pushed us toward open-source, for economic reasons.</li>
</ul>
</li>
<li>
<a href="https://youtu.be/hEIoCeqMbWU?t=4551">@1:15:51</a> Are we headed for a bust? How deep?<ul>
<li>How does a company survive the lean times?</li>
<li>Negative human consequences</li>
<li>mammon (money, material wealth) <a href="https://en.wikipedia.org/wiki/Mammon">wiki</a>
</li>
<li>Advice for practitioners?</li>
</ul>
</li>
<li>Dan McDonald: controlling inflation, starting companies</li>
<li>Theo: downturn will hit industries differently, concerns over global supply chain</li>
<li>Adam: don't forget about helping others, looking out for other people, for the future of our world.</li>
<li>Dan Cross: if it looks to good to be true, it probably is.</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 23 May 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/24fc5695/233df8e5.mp3" length="87910630" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5492</itunes:duration>
      <itunes:summary>Signs are pointing to another tech bust, and we've been through this before. Oxide and Friends reminisce about the 2001 dot-com bust, from layoffs and bankruptcies to shortened commutes and bleak tidings on billboards.</itunes:summary>
      <itunes:subtitle>Signs are pointing to another tech bust, and we've been through this before. Oxide and Friends reminisce about the 2001 dot-com bust, from layoffs and bankruptcies to shortened commutes and bleak tidings on billboards.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Debugging Methodologies</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>14</itunes:episode>
      <podcast:episode>14</podcast:episode>
      <itunes:title>Debugging Methodologies</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">4a657d04-dc26-43d8-a0fa-49aacb92b0c8</guid>
      <link>https://share.transistor.fm/s/a1821af0</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 16th, 2022</b></p><p><strong>Debugging Methodologies</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/7B2y0-t0SKI">the recording for our Twitter Space for May 16th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guests on May 16th were <a href="https://twitter.com/itsajordansystm">Jordan Hendricks</a> and <a href="https://twitter.com/luqma_">Luqman Aden</a>. Other speakers included <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a> and <a href="https://twitter.com/Saythlin">Ben Kimock</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Green Room <a href="https://en.wikipedia.org/wiki/Green_room">wiki</a>
</li>
<li>NVMe <a href="https://en.wikipedia.org/wiki/NVM_Express">wiki</a> (Non-Volatile Memory. PCI Express)</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=218">@3:38</a> Jordan's story<ul>
<li>Jordan's thorough bug <a href="https://www.illumos.org/issues/14541#note-2">write-up</a>, (reported by Josh Clulow as "nvme_quiesce() can hang preventing reboot")</li>
<li>Non-maskable interrupt <a href="https://en.wikipedia.org/wiki/Non-maskable_interrupt">wiki</a>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=484">@8:04</a> Adam interrupts a box with a kitchen knife</li>
<li>kmdb <a href="https://illumos.org/man/1/kmdb">man page</a> and page in the mdb <a href="https://illumos.org/books/mdb/chp-kmdb.html">book</a>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=851">@14:11</a> Josh recites a poem about timeouts</li>
<li>Avoiding getting stuck, experimenting</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=1210">@20:10</a> A previous encounter with NVMe/PCIe issues (see also: Jordan's NVMe Hotplug discussion <a href="https://youtu.be/UICLVrtHOUc">video</a> ~26mins)</li>
<li>mdb format character "j" (for Jordan!) (and jazzed-up) <a href="https://www.illumos.org/issues/11208">feature</a>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=1610">@26:50</a> Normal and abrupt shutdown notification, breakthrough, writing up a narrative</li>
</ul>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=1947">@32:27</a> Luqman's story<ul>
<li>The blog <a href="https://luqman.ca/blog/achievement-unlocked-rustc-segfault/">post</a> "Achievement Unlocked: rustc segfault"</li>
<li>dtrace <a href="https://illumos.org/books/dtrace/chp-usdt.html">usdt</a>
</li>
<li>cscope, rust analyzer</li>
</ul>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=2630">@43:50</a> Inspecting LLVM IR, RustC MIR<ul>
<li>async blocks, inline assembly</li>
<li>boiling down reproducible cases</li>
<li>making quality write-ups, telling a story, teaching debugging</li>
<li>popular on Hacker News</li>
<li>dead reproducible?</li>
</ul>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=3782">@1:03:02</a> Bugs: psychotic, non reproducible<ul>
<li>Debugging mindset</li>
<li>Different tools and methodologies for different problems</li>
<li>anonymous tracing <a href="https://illumos.org/books/dtrace/chp-anon.html">book page</a>, speculative tracing <a href="https://illumos.org/books/dtrace/chp-spec.html">page</a>
</li>
</ul>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=4203">@1:10:03</a> Jason: number literal formats with underscores, now in mdb</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=4355">@1:12:35</a> Ben prompts a debugging story, checking conditions in debug, program abort on error<ul>
<li>
<a href="https://www.felixcloutier.com/x86/ud">ud2</a> instruction</li>
<li>Rick describes the Oxide boot loader</li>
<li>XMODEM <a href="https://en.wikipedia.org/wiki/XMODEM">wiki</a>
</li>
<li>Triple fault <a href="https://en.wikipedia.org/wiki/Triple_fault">wiki</a>
</li>
<li>Rust "heapless" <a href="https://docs.rs/heapless/latest/heapless/">crate</a>
</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 16th, 2022</b></p><p><strong>Debugging Methodologies</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/7B2y0-t0SKI">the recording for our Twitter Space for May 16th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guests on May 16th were <a href="https://twitter.com/itsajordansystm">Jordan Hendricks</a> and <a href="https://twitter.com/luqma_">Luqman Aden</a>. Other speakers included <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a> and <a href="https://twitter.com/Saythlin">Ben Kimock</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Green Room <a href="https://en.wikipedia.org/wiki/Green_room">wiki</a>
</li>
<li>NVMe <a href="https://en.wikipedia.org/wiki/NVM_Express">wiki</a> (Non-Volatile Memory. PCI Express)</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=218">@3:38</a> Jordan's story<ul>
<li>Jordan's thorough bug <a href="https://www.illumos.org/issues/14541#note-2">write-up</a>, (reported by Josh Clulow as "nvme_quiesce() can hang preventing reboot")</li>
<li>Non-maskable interrupt <a href="https://en.wikipedia.org/wiki/Non-maskable_interrupt">wiki</a>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=484">@8:04</a> Adam interrupts a box with a kitchen knife</li>
<li>kmdb <a href="https://illumos.org/man/1/kmdb">man page</a> and page in the mdb <a href="https://illumos.org/books/mdb/chp-kmdb.html">book</a>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=851">@14:11</a> Josh recites a poem about timeouts</li>
<li>Avoiding getting stuck, experimenting</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=1210">@20:10</a> A previous encounter with NVMe/PCIe issues (see also: Jordan's NVMe Hotplug discussion <a href="https://youtu.be/UICLVrtHOUc">video</a> ~26mins)</li>
<li>mdb format character "j" (for Jordan!) (and jazzed-up) <a href="https://www.illumos.org/issues/11208">feature</a>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=1610">@26:50</a> Normal and abrupt shutdown notification, breakthrough, writing up a narrative</li>
</ul>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=1947">@32:27</a> Luqman's story<ul>
<li>The blog <a href="https://luqman.ca/blog/achievement-unlocked-rustc-segfault/">post</a> "Achievement Unlocked: rustc segfault"</li>
<li>dtrace <a href="https://illumos.org/books/dtrace/chp-usdt.html">usdt</a>
</li>
<li>cscope, rust analyzer</li>
</ul>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=2630">@43:50</a> Inspecting LLVM IR, RustC MIR<ul>
<li>async blocks, inline assembly</li>
<li>boiling down reproducible cases</li>
<li>making quality write-ups, telling a story, teaching debugging</li>
<li>popular on Hacker News</li>
<li>dead reproducible?</li>
</ul>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=3782">@1:03:02</a> Bugs: psychotic, non reproducible<ul>
<li>Debugging mindset</li>
<li>Different tools and methodologies for different problems</li>
<li>anonymous tracing <a href="https://illumos.org/books/dtrace/chp-anon.html">book page</a>, speculative tracing <a href="https://illumos.org/books/dtrace/chp-spec.html">page</a>
</li>
</ul>
</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=4203">@1:10:03</a> Jason: number literal formats with underscores, now in mdb</li>
<li>
<a href="https://youtu.be/7B2y0-t0SKI?t=4355">@1:12:35</a> Ben prompts a debugging story, checking conditions in debug, program abort on error<ul>
<li>
<a href="https://www.felixcloutier.com/x86/ud">ud2</a> instruction</li>
<li>Rick describes the Oxide boot loader</li>
<li>XMODEM <a href="https://en.wikipedia.org/wiki/XMODEM">wiki</a>
</li>
<li>Triple fault <a href="https://en.wikipedia.org/wiki/Triple_fault">wiki</a>
</li>
<li>Rust "heapless" <a href="https://docs.rs/heapless/latest/heapless/">crate</a>
</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 16 May 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/a1821af0/39001032.mp3" length="86830023" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5424</itunes:duration>
      <itunes:summary>Jordan Hendricks and Luqman Aden join Bryan and Adam to talk about two terrifying bugs and their commensurately terrific analyses.</itunes:summary>
      <itunes:subtitle>Jordan Hendricks and Luqman Aden join Bryan and Adam to talk about two terrifying bugs and their commensurately terrific analyses.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Fail Whaling</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>13</itunes:episode>
      <podcast:episode>13</podcast:episode>
      <itunes:title>Fail Whaling</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">38bd3b40-d617-4fdd-b8d8-de6ae4bf541d</guid>
      <link>https://share.transistor.fm/s/f06dd3dd</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: April 25th, 2022</b></p><p><strong>Fail Whaling</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/rSVhwjFOIyU">the recording for our Twitter Space for April 25th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/jasonh">Jason Hoffman</a>. Other speakers included <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a> and <a href="https://twitter.com/iangrunert">Ian</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Debugging Rails</li>
<li>Jason walks chain of events leading to "twttr"</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=646">@10:46</a> The first mock up, SMS</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=822">@13:42</a> Twitter goes live, early days<ul><li>
<a href="https://en.wikipedia.org/wiki/Tcl">Tcl</a>, <a href="https://en.wikipedia.org/wiki/Mongrel_(web_server)">Mongrel</a>, <a href="https://en.wikipedia.org/wiki/LiteSpeed_Web_Server">LiteSpeed</a>
</li></ul>
</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=1170">@19:30</a> First problems<ul>
<li>Bryan's debugging story, exceptions and backtraces, index out of bounds</li>
<li>Discovery of the problem was not met with gratitude</li>
</ul>
</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=1793">@29:53</a> Jason tells another problem story, production directories full of junk test files</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=2310">@38:30</a> Story of the first Hadoop cluster</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=2542">@42:22</a> Matt's comment on directory limits</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=2795">@46:35</a> Companies growing up, on-prem and cloud infrastructure</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=2966">@49:26</a> The Fail Whale<ul>
<li>Ruby runtime, Ryan Dahl</li>
<li>Moved to Java, Scala eventually</li>
<li>DTrace and dynamic languages</li>
<li>
<a href="https://en.wikipedia.org/wiki/Raku_(programming_language)">Raku</a>, <a href="https://en.wikipedia.org/wiki/Parrot_virtual_machine">Parrot VM</a>, <a href="https://en.wikipedia.org/wiki/MoarVM">MoarVM</a>
</li>
</ul>
</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=3593">@59:53</a> Changing language and hardware landscapes, video presentation sharing, short social media handles, ahl, getting into hockey</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=4350">@1:12:30</a> Billionaire's playground?<ul>
<li>Quick diversion, history trivia bet</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=4723">@1:18:43</a> Moderation</li>
<li>Microsoft Tay <a href="https://en.wikipedia.org/wiki/Tay_(bot)">bot</a> (shutdown 16 hours after launch)</li>
<li>Can anything kill Twitter?</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=5366">@1;29:26</a> Matt: what replaces Spaces?</li>
<li>How could an alternative be built? What would it look like?</li>
<li>Bryan predicts: change of headquarters, "burning the flag"</li>
<li>Adam predicts: resale or IPO within 3 years</li>
</ul>
</li>
<li>See also: Jason Hoffman and Bryan Cantrill <em>CTO vs VP Engineering</em> <a href="https://youtu.be/Gx7xnYIgK7Y">video</a> ~45mins (audio is rough, content is good)</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: April 25th, 2022</b></p><p><strong>Fail Whaling</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/rSVhwjFOIyU">the recording for our Twitter Space for April 25th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/jasonh">Jason Hoffman</a>. Other speakers included <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a> and <a href="https://twitter.com/iangrunert">Ian</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Debugging Rails</li>
<li>Jason walks chain of events leading to "twttr"</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=646">@10:46</a> The first mock up, SMS</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=822">@13:42</a> Twitter goes live, early days<ul><li>
<a href="https://en.wikipedia.org/wiki/Tcl">Tcl</a>, <a href="https://en.wikipedia.org/wiki/Mongrel_(web_server)">Mongrel</a>, <a href="https://en.wikipedia.org/wiki/LiteSpeed_Web_Server">LiteSpeed</a>
</li></ul>
</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=1170">@19:30</a> First problems<ul>
<li>Bryan's debugging story, exceptions and backtraces, index out of bounds</li>
<li>Discovery of the problem was not met with gratitude</li>
</ul>
</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=1793">@29:53</a> Jason tells another problem story, production directories full of junk test files</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=2310">@38:30</a> Story of the first Hadoop cluster</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=2542">@42:22</a> Matt's comment on directory limits</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=2795">@46:35</a> Companies growing up, on-prem and cloud infrastructure</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=2966">@49:26</a> The Fail Whale<ul>
<li>Ruby runtime, Ryan Dahl</li>
<li>Moved to Java, Scala eventually</li>
<li>DTrace and dynamic languages</li>
<li>
<a href="https://en.wikipedia.org/wiki/Raku_(programming_language)">Raku</a>, <a href="https://en.wikipedia.org/wiki/Parrot_virtual_machine">Parrot VM</a>, <a href="https://en.wikipedia.org/wiki/MoarVM">MoarVM</a>
</li>
</ul>
</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=3593">@59:53</a> Changing language and hardware landscapes, video presentation sharing, short social media handles, ahl, getting into hockey</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=4350">@1:12:30</a> Billionaire's playground?<ul>
<li>Quick diversion, history trivia bet</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=4723">@1:18:43</a> Moderation</li>
<li>Microsoft Tay <a href="https://en.wikipedia.org/wiki/Tay_(bot)">bot</a> (shutdown 16 hours after launch)</li>
<li>Can anything kill Twitter?</li>
<li>
<a href="https://youtu.be/rSVhwjFOIyU?t=5366">@1;29:26</a> Matt: what replaces Spaces?</li>
<li>How could an alternative be built? What would it look like?</li>
<li>Bryan predicts: change of headquarters, "burning the flag"</li>
<li>Adam predicts: resale or IPO within 3 years</li>
</ul>
</li>
<li>See also: Jason Hoffman and Bryan Cantrill <em>CTO vs VP Engineering</em> <a href="https://youtu.be/Gx7xnYIgK7Y">video</a> ~45mins (audio is rough, content is good)</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 25 Apr 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/f06dd3dd/d975ac35.mp3" length="97982584" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6121</itunes:duration>
      <itunes:summary>Joined by Json Hoffman, formerly founder of Joyent, the cloud platform on which Twitter was initially hosted, the Oxide friends reminisce about debugging early issues with Twitter and consider its pending Elonification.</itunes:summary>
      <itunes:subtitle>Joined by Json Hoffman, formerly founder of Joyent, the cloud platform on which Twitter was initially hosted, the Oxide friends reminisce about debugging early issues with Twitter and consider its pending Elonification.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>Yes</itunes:explicit>
    </item>
    <item>
      <title>More Tales from the Bringup Lab</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>12</itunes:episode>
      <podcast:episode>12</podcast:episode>
      <itunes:title>More Tales from the Bringup Lab</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">6e91b77b-ab60-4c2a-9d7e-5895418aecac</guid>
      <link>https://share.transistor.fm/s/4fd8383d</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: April 18th, 2022</b></p><p><strong>More Tales from the Bringup Lab</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/HCkuCkp3Zoo">the recording for our Twitter Space for April 18th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, we were joined by members of the Oxide team: <a href="https://twitter.com/arjenroodselaar">Arjen Roodselaar</a>, <a href="https://twitter.com/SyntheticGate">Nathaneal Huffman</a>, <a href="https://twitter.com/rmustacc">Robert Mustacchi</a>, <a href="https://twitter.com/AaronHartwig1">Aaron Hartwig</a>, <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/impraxical">Matt Keeter</a>, <a href="https://twitter.com/random_enginerd">Eric Aasen</a>, <a href="https://twitter.com/mxshift">Rick Altherr</a>, and <a href="https://twitter.com/RobertFKeith">RFK</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=145">@2:25</a> <em>Overview of upcoming themes related to the bringup lab</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=268">@4:28</a> <em>Defining the different terms and code-names of the hardware in development at oxide</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=280">@4:40</a> <em>Gimlet, the compute node</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=310">@5:10</a> <em>Sidecar, a board based on a switching ASIC from Intel</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=444">@7:24</a> <em>Arjen's twitter thread with details related to the bringup and Eric's description of the challenges in designing the PDN (Power Delivery Network)</em> <a href="https://twitter.com/arjenroodselaar/status/1516165893146898432">ATT</a>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=934">@15:34</a> <em>The load-slammer, an electronic load to simulate the power draw of an ASIC / BGA-part</em> <a href="https://loadslammer.com/product/lsp1000rs/">LS</a>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=1146">@19:06</a> <em>Bouncing supply cables on load steps</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=1347">@22:27</a> <em>FPGA that controls everything on the Sidecar board</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=1445">@24:05</a> <em>TOML's unstable table order made the team pop a couple ICs off the board searching for bugs</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=1901">@31:41</a> <em>Brown-out in the hotel during first bringup session from a blown bus duct</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=2025">@33:45</a> <em>Debugging ground bounce issues while testing the PDN with the load-slammer (phantom over/undershoot)</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=2415">@40:15</a> <em>Hardware team pranks the management during a meeting with a potential investor</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=2600">@43:20</a> <em>Chonky heat sink that weighs 8 pounds / moment arm crisis</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=2899">@48:19</a> <em>First time powering up, checking temperature with thermal camera, learning about "puppy dog warm"</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3132">@52:12</a> <em>Matt talks about the second, "lesser" network switch on the Sidecar board</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3448">@57:28</a> <em>Secret 8051 cores, slew-rate woes: impedance missmatch on SPI traces that manifested in unreliable communication in full bandwidth mode of the SPI/GPIO driver</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3799">@1:03:19</a> <em>PLL config issues and Matt's verbose config tool to fix them</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3866">@1:04:26</a> <em>Load-bearing dongles</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3997">@1:06:37</a> <em>Debugging PCIe link, Arjen's Frankenstein PCIe analyzer/exerciser</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=4956">@1:22:36</a> <em>Gimlet, stumbling blocks found in January</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=5408">@1:30:08</a> <em>Arjen's big breakthrough on the Sidecar, shouting at the T6</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=5528">@1:32:08</a> <em>Cursed pull-downs, Rick's remote hardware debugging support by incrementally breaking his T6 boards to find issue with the DUT</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=5784">@1:36:24</a> <em>T6 finally comes out of reset, "we're gonna live! we're gonna live!"</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=6066">@1:41:06</a> <em>Rick reworks gnarly footprint error, on multiple ICs, to verify design for Rev. B - dead bug style.</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=6792">@1:53:12</a> <em>Sidecar progress continuation, cable oupsi, off-by-one error</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=7182">@1:59:42</a> <em>Dedicated support by IC vendor with very understanding wives</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=7280">@2:01:20</a> <em>Summary and parting thoughts</em>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: April 18th, 2022</b></p><p><strong>More Tales from the Bringup Lab</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/HCkuCkp3Zoo">the recording for our Twitter Space for April 18th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, we were joined by members of the Oxide team: <a href="https://twitter.com/arjenroodselaar">Arjen Roodselaar</a>, <a href="https://twitter.com/SyntheticGate">Nathaneal Huffman</a>, <a href="https://twitter.com/rmustacc">Robert Mustacchi</a>, <a href="https://twitter.com/AaronHartwig1">Aaron Hartwig</a>, <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/impraxical">Matt Keeter</a>, <a href="https://twitter.com/random_enginerd">Eric Aasen</a>, <a href="https://twitter.com/mxshift">Rick Altherr</a>, and <a href="https://twitter.com/RobertFKeith">RFK</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=145">@2:25</a> <em>Overview of upcoming themes related to the bringup lab</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=268">@4:28</a> <em>Defining the different terms and code-names of the hardware in development at oxide</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=280">@4:40</a> <em>Gimlet, the compute node</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=310">@5:10</a> <em>Sidecar, a board based on a switching ASIC from Intel</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=444">@7:24</a> <em>Arjen's twitter thread with details related to the bringup and Eric's description of the challenges in designing the PDN (Power Delivery Network)</em> <a href="https://twitter.com/arjenroodselaar/status/1516165893146898432">ATT</a>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=934">@15:34</a> <em>The load-slammer, an electronic load to simulate the power draw of an ASIC / BGA-part</em> <a href="https://loadslammer.com/product/lsp1000rs/">LS</a>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=1146">@19:06</a> <em>Bouncing supply cables on load steps</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=1347">@22:27</a> <em>FPGA that controls everything on the Sidecar board</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=1445">@24:05</a> <em>TOML's unstable table order made the team pop a couple ICs off the board searching for bugs</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=1901">@31:41</a> <em>Brown-out in the hotel during first bringup session from a blown bus duct</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=2025">@33:45</a> <em>Debugging ground bounce issues while testing the PDN with the load-slammer (phantom over/undershoot)</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=2415">@40:15</a> <em>Hardware team pranks the management during a meeting with a potential investor</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=2600">@43:20</a> <em>Chonky heat sink that weighs 8 pounds / moment arm crisis</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=2899">@48:19</a> <em>First time powering up, checking temperature with thermal camera, learning about "puppy dog warm"</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3132">@52:12</a> <em>Matt talks about the second, "lesser" network switch on the Sidecar board</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3448">@57:28</a> <em>Secret 8051 cores, slew-rate woes: impedance missmatch on SPI traces that manifested in unreliable communication in full bandwidth mode of the SPI/GPIO driver</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3799">@1:03:19</a> <em>PLL config issues and Matt's verbose config tool to fix them</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3866">@1:04:26</a> <em>Load-bearing dongles</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=3997">@1:06:37</a> <em>Debugging PCIe link, Arjen's Frankenstein PCIe analyzer/exerciser</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=4956">@1:22:36</a> <em>Gimlet, stumbling blocks found in January</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=5408">@1:30:08</a> <em>Arjen's big breakthrough on the Sidecar, shouting at the T6</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=5528">@1:32:08</a> <em>Cursed pull-downs, Rick's remote hardware debugging support by incrementally breaking his T6 boards to find issue with the DUT</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=5784">@1:36:24</a> <em>T6 finally comes out of reset, "we're gonna live! we're gonna live!"</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=6066">@1:41:06</a> <em>Rick reworks gnarly footprint error, on multiple ICs, to verify design for Rev. B - dead bug style.</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=6792">@1:53:12</a> <em>Sidecar progress continuation, cable oupsi, off-by-one error</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=7182">@1:59:42</a> <em>Dedicated support by IC vendor with very understanding wives</em>
</li>
<li>
<a href="https://youtu.be/HCkuCkp3Zoo?t=7280">@2:01:20</a> <em>Summary and parting thoughts</em>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 18 Apr 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/4fd8383d/64c5244a.mp3" length="122115020" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>7630</itunes:duration>
      <itunes:summary>Members of the Oxide hardware team talk about their recent bringup struggles and triumphs with the server sled (Gimlet) and rack switch (Sidecar)</itunes:summary>
      <itunes:subtitle>Members of the Oxide hardware team talk about their recent bringup struggles and triumphs with the server sled (Gimlet) and rack switch (Sidecar)</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Another LPC55 ROM Vulnerability</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>11</itunes:episode>
      <podcast:episode>11</podcast:episode>
      <itunes:title>Another LPC55 ROM Vulnerability</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">c4a1627a-6fe2-4e58-a689-c3a0d182b891</guid>
      <link>https://share.transistor.fm/s/56d64baa</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: April 4th, 2022</b></p><p><strong>Another LPC55 ROM Vulnerability</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/mi_NKpwIrfI">the recording for our Twitter Space for April 4th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/openlabbott">Laura Abbott</a>.</p><p>Other speakers on April 4th included <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/tgamblin">Todd Gamblin?</a>, <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">Ben ?</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/jasonbking">jasonbking</a> and <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">Evan?</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Jonathan Goldstein's <a href="https://gimletmedia.com/shows/heavyweight">Heavyweight</a> podcast</li>
<li>Oxide and Friends podcast<ul><li>
<a href="https://oxide-and-friends.transistor.fm/">transistor.fm</a> launch point, has links to Spotify, Google, Amazon etc players</li></ul>
</li>
<li>Laura did talk about the first LPC55 vulnerability in the May 3, 2021 space, but the recording for that day missed it.<ul><li>Laura Abbott (30 April, 2021) <em>Exploiting Undocumented Hardware Blocks in the LPC55S69</em> <a href="https://oxide.computer/blog/lpc55">write-up</a><ul><li>And DEF CON <a href="https://youtu.be/eKKgaGbcq4o">talk</a> with Rick Altherr</li></ul>
</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=241">@4:01</a> Today's topic: Laura Abbott (23 March 2022) <em>Another vulnerability in the LPC55S69 ROM</em> <a href="https://oxide.computer/blog/another-vulnerability-in-the-lpc55s69-rom">write up</a><ul><li>How do you brick a chip?</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=440">@7:20</a> The spreadsheet, ROM patch after boot<ul>
<li>Company dismisses or downplays vulnerabilities</li>
<li>Sees CVEs as optional??</li>
</ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=919">@15:19</a> CVEs as more software focused. What does a CVE for hardware even mean?<ul><li>NXP doesn't want to open their software</li></ul>
</li>
<li>"Even though we are not believers in security by obscurity, the product specific ROM code is not open to external parties except for approved test labs for vulnerability reviews"</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=1183">@19:43</a> The story of the current vulnerability<ul><li><a href="https://ghidra-sre.org/">Ghidra</a></li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=1646">@27:26</a> Picking apart the code<ul>
<li>Bounds checks, writing outside the bounds of the buffer</li>
<li>
<a href="https://trustedcomputinggroup.org/work-groups/dice-architectures/">DICE</a> by Trusted Computing Group</li>
<li>Request for Discussion</li>
<li>Evaluating potential chips when building a product</li>
</ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=2469">@41:09</a> Secure hardware, work around potential pitfalls<ul><li>Open source would help</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=2737">@45:37</a> Disclosed to NXP, more receptive this time<ul>
<li>Discussion on <a href="https://news.ycombinator.com/item?id=30778778">HN</a>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=3261">@54:21</a> Security review industry</li>
</ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=3431">@57:11</a> Ian: building up your own (open) documentation on LPC55?</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=3691">@1:01:31</a> Jason: questionable definitions of "open" source<ul><li>Access to source as building confidence in the product</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=3920">@1:05:20</a> Todd: securing supply chain for code in large scale projects with lots of contributors<ul><li>Vulnerabilities can occur so easily</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=4134">@1:08:54</a> Ben: custom setups abound. Hard to trust a whole stack of assembled pieces</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=4336">@1:12:16</a> Matt: what is the ROM doing? Assembly or C? Could the provider's hands be tied as far as releasing proprietary code?</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=4639">@1:17:19</a> Jason: <a href="https://en.wikipedia.org/wiki/X.509">X.509</a> parsing as a good place to look for vulnerabilities?</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=4705">@1:18:25</a> Evan: encouragement around fuzzing X.509</li>
<li>Next time: more tales from the bringup lab!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: April 4th, 2022</b></p><p><strong>Another LPC55 ROM Vulnerability</strong></p><p>We've been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it's not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/mi_NKpwIrfI">the recording for our Twitter Space for April 4th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/openlabbott">Laura Abbott</a>.</p><p>Other speakers on April 4th included <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/tgamblin">Todd Gamblin?</a>, <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">Ben ?</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/jasonbking">jasonbking</a> and <a href="https://github.com/oxidecomputer/twitter-spaces/blob/master">Evan?</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Jonathan Goldstein's <a href="https://gimletmedia.com/shows/heavyweight">Heavyweight</a> podcast</li>
<li>Oxide and Friends podcast<ul><li>
<a href="https://oxide-and-friends.transistor.fm/">transistor.fm</a> launch point, has links to Spotify, Google, Amazon etc players</li></ul>
</li>
<li>Laura did talk about the first LPC55 vulnerability in the May 3, 2021 space, but the recording for that day missed it.<ul><li>Laura Abbott (30 April, 2021) <em>Exploiting Undocumented Hardware Blocks in the LPC55S69</em> <a href="https://oxide.computer/blog/lpc55">write-up</a><ul><li>And DEF CON <a href="https://youtu.be/eKKgaGbcq4o">talk</a> with Rick Altherr</li></ul>
</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=241">@4:01</a> Today's topic: Laura Abbott (23 March 2022) <em>Another vulnerability in the LPC55S69 ROM</em> <a href="https://oxide.computer/blog/another-vulnerability-in-the-lpc55s69-rom">write up</a><ul><li>How do you brick a chip?</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=440">@7:20</a> The spreadsheet, ROM patch after boot<ul>
<li>Company dismisses or downplays vulnerabilities</li>
<li>Sees CVEs as optional??</li>
</ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=919">@15:19</a> CVEs as more software focused. What does a CVE for hardware even mean?<ul><li>NXP doesn't want to open their software</li></ul>
</li>
<li>"Even though we are not believers in security by obscurity, the product specific ROM code is not open to external parties except for approved test labs for vulnerability reviews"</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=1183">@19:43</a> The story of the current vulnerability<ul><li><a href="https://ghidra-sre.org/">Ghidra</a></li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=1646">@27:26</a> Picking apart the code<ul>
<li>Bounds checks, writing outside the bounds of the buffer</li>
<li>
<a href="https://trustedcomputinggroup.org/work-groups/dice-architectures/">DICE</a> by Trusted Computing Group</li>
<li>Request for Discussion</li>
<li>Evaluating potential chips when building a product</li>
</ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=2469">@41:09</a> Secure hardware, work around potential pitfalls<ul><li>Open source would help</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=2737">@45:37</a> Disclosed to NXP, more receptive this time<ul>
<li>Discussion on <a href="https://news.ycombinator.com/item?id=30778778">HN</a>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=3261">@54:21</a> Security review industry</li>
</ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=3431">@57:11</a> Ian: building up your own (open) documentation on LPC55?</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=3691">@1:01:31</a> Jason: questionable definitions of "open" source<ul><li>Access to source as building confidence in the product</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=3920">@1:05:20</a> Todd: securing supply chain for code in large scale projects with lots of contributors<ul><li>Vulnerabilities can occur so easily</li></ul>
</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=4134">@1:08:54</a> Ben: custom setups abound. Hard to trust a whole stack of assembled pieces</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=4336">@1:12:16</a> Matt: what is the ROM doing? Assembly or C? Could the provider's hands be tied as far as releasing proprietary code?</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=4639">@1:17:19</a> Jason: <a href="https://en.wikipedia.org/wiki/X.509">X.509</a> parsing as a good place to look for vulnerabilities?</li>
<li>
<a href="https://youtu.be/Q0rguwyay_0?t=4705">@1:18:25</a> Evan: encouragement around fuzzing X.509</li>
<li>Next time: more tales from the bringup lab!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We'd love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 04 Apr 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/56d64baa/0547fcbf.mp3" length="78118038" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4880</itunes:duration>
      <itunes:summary>Laura Abbott joins Bryan and Adam to talk about **another** vulnerability she uncovered in the LPC55</itunes:summary>
      <itunes:subtitle>Laura Abbott joins Bryan and Adam to talk about **another** vulnerability she uncovered in the LPC55</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Time, Timezones, Metric Time, Losing and Saving</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>10</itunes:episode>
      <podcast:episode>10</podcast:episode>
      <itunes:title>Time, Timezones, Metric Time, Losing and Saving</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">55703087-a80e-4d8b-9bdd-c21d3751bc51</guid>
      <link>https://share.transistor.fm/s/be87fdb1</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: March 28th, 2022</b></p><p>Time, Timezones, Metric Time, Losing and Saving</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/BHtfqleSHAs">the recording for our Twitter Space for March 28th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on March 28th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/akshayk">Akshay Kumar</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a> and <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@8:07](https://youtu.be/BHtfqleSHAs?t=487) Y2K, leap years <ul>
<li><a href="https://indianajones.fandom.com/wiki/Headpiece_to_the_Staff_of_Ra">The Staff of Ra</a></li>
<li>“at” <a href="https://en.wikipedia.org/wiki/At_(command)">command</a>
</li>
</ul>
</li>
<li>[@15:28](https://youtu.be/BHtfqleSHAs?t=928) Matt’s stories <ul><li><a href="https://en.wikipedia.org/wiki/Elm_(email_client)">elm email</a></li></ul>
</li>
<li>[@23:29](https://youtu.be/BHtfqleSHAs?t=1409) Jason: daylight saving time in Indiana <ul><li>“Time in Indiana” <a href="https://en.wikipedia.org/wiki/Time_in_Indiana">wiki</a>
</li></ul>
</li>
<li>[@26:31](https://youtu.be/BHtfqleSHAs?t=1591) Time zone database <ul>
<li>John Bemelmans Marciano (2014) <em>Whatever Happened to the Metric System? How America Kept Its Feet</em> <a href="https://www.google.com/books/edition/Whatever_Happened_to_the_Metric_System/KDkkAwAAQBAJ">book</a>
</li>
<li>Geopolitical aspects of time</li>
<li>Eastman plan <a href="https://en.wikipedia.org/wiki/International_Fixed_Calendar">calendar</a>
</li>
</ul>
</li>
<li>[@32:23](https://youtu.be/BHtfqleSHAs?t=1943) Aaron’s stories, setting clocks back, Leap Day</li>
<li>[@35:54](https://youtu.be/BHtfqleSHAs?t=2154) Akshay: Ken Thompson’s six day work week?</li>
<li>Leap seconds <ul><li>Time of day hardware bug</li></ul>
</li>
<li>[@48:54](https://youtu.be/BHtfqleSHAs?t=2934) 2038 - the end of time <ul>
<li>Y2K problems</li>
<li>GPS week number rollover <a href="https://en.wikipedia.org/wiki/GPS_week_number_rollover">wiki</a>
</li>
</ul>
</li>
<li>[@57:58](https://youtu.be/BHtfqleSHAs?t=3478) Matt: Cory Doctorow’s “Epoch” short story <a href="https://craphound.com/littlebrother/2009/11/09/epoch-podcast-complete/">podcast</a> commissioned by Mark Shuttleworth</li>
<li>[@1:00:28](https://youtu.be/BHtfqleSHAs?t=3628) Ultimate, penultimate, antepenultimate</li>
<li>Oxide and Friends podcast!! <ul><li>
<a href="https://oxide-and-friends.transistor.fm/">transistor.fm</a> launch point, has links to Spotify, Google, Amazon etc players</li></ul>
</li>
<li>Laura Abbott (23 March 2022) <em>Another vulnerability in the LPC55S69 ROM</em> <a href="https://oxide.computer/blog/another-vulnerability-in-the-lpc55s69-rom">write up</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: March 28th, 2022</b></p><p>Time, Timezones, Metric Time, Losing and Saving</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/BHtfqleSHAs">the recording for our Twitter Space for March 28th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on March 28th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/akshayk">Akshay Kumar</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a> and <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@8:07](https://youtu.be/BHtfqleSHAs?t=487) Y2K, leap years <ul>
<li><a href="https://indianajones.fandom.com/wiki/Headpiece_to_the_Staff_of_Ra">The Staff of Ra</a></li>
<li>“at” <a href="https://en.wikipedia.org/wiki/At_(command)">command</a>
</li>
</ul>
</li>
<li>[@15:28](https://youtu.be/BHtfqleSHAs?t=928) Matt’s stories <ul><li><a href="https://en.wikipedia.org/wiki/Elm_(email_client)">elm email</a></li></ul>
</li>
<li>[@23:29](https://youtu.be/BHtfqleSHAs?t=1409) Jason: daylight saving time in Indiana <ul><li>“Time in Indiana” <a href="https://en.wikipedia.org/wiki/Time_in_Indiana">wiki</a>
</li></ul>
</li>
<li>[@26:31](https://youtu.be/BHtfqleSHAs?t=1591) Time zone database <ul>
<li>John Bemelmans Marciano (2014) <em>Whatever Happened to the Metric System? How America Kept Its Feet</em> <a href="https://www.google.com/books/edition/Whatever_Happened_to_the_Metric_System/KDkkAwAAQBAJ">book</a>
</li>
<li>Geopolitical aspects of time</li>
<li>Eastman plan <a href="https://en.wikipedia.org/wiki/International_Fixed_Calendar">calendar</a>
</li>
</ul>
</li>
<li>[@32:23](https://youtu.be/BHtfqleSHAs?t=1943) Aaron’s stories, setting clocks back, Leap Day</li>
<li>[@35:54](https://youtu.be/BHtfqleSHAs?t=2154) Akshay: Ken Thompson’s six day work week?</li>
<li>Leap seconds <ul><li>Time of day hardware bug</li></ul>
</li>
<li>[@48:54](https://youtu.be/BHtfqleSHAs?t=2934) 2038 - the end of time <ul>
<li>Y2K problems</li>
<li>GPS week number rollover <a href="https://en.wikipedia.org/wiki/GPS_week_number_rollover">wiki</a>
</li>
</ul>
</li>
<li>[@57:58](https://youtu.be/BHtfqleSHAs?t=3478) Matt: Cory Doctorow’s “Epoch” short story <a href="https://craphound.com/littlebrother/2009/11/09/epoch-podcast-complete/">podcast</a> commissioned by Mark Shuttleworth</li>
<li>[@1:00:28](https://youtu.be/BHtfqleSHAs?t=3628) Ultimate, penultimate, antepenultimate</li>
<li>Oxide and Friends podcast!! <ul><li>
<a href="https://oxide-and-friends.transistor.fm/">transistor.fm</a> launch point, has links to Spotify, Google, Amazon etc players</li></ul>
</li>
<li>Laura Abbott (23 March 2022) <em>Another vulnerability in the LPC55S69 ROM</em> <a href="https://oxide.computer/blog/another-vulnerability-in-the-lpc55s69-rom">write up</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 28 Mar 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/be87fdb1/e4416240.mp3" length="63193813" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3947</itunes:duration>
      <itunes:summary>Time is the bane of programmers and the villain for far too many operator horror stories. Oxide and Friends discuss time, timezones, standard time, daylight time, leap seconds, and how it all can go so so SO wrong.</itunes:summary>
      <itunes:subtitle>Time is the bane of programmers and the villain for far too many operator horror stories. Oxide and Friends discuss time, timezones, standard time, daylight time, leap seconds, and how it all can go so so SO wrong.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Trolltron, Assemble!</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>9</itunes:episode>
      <podcast:episode>9</podcast:episode>
      <itunes:title>Trolltron, Assemble!</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">92e1c4ea-2b05-4be4-bc32-1ccd4e206939</guid>
      <link>https://share.transistor.fm/s/0f781683</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: March 21st, 2022</b></p><p>Trolltron, Assemble!</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/WrEef_bsWas">the recording for our Twitter Space for March 21st, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on March 21st included <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/quasarken">Ken</a> and <a href="https://twitter.com/drewonpaper">Drew Vogel</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@9:23](https://youtu.be/WrEef_bsWas?t=563) I was learning from people who were further down the track than I was <ul><li>Startups can have problems when founders fail to learn from the experiences of others</li></ul>
</li>
<li>[@12:43](https://youtu.be/WrEef_bsWas?t=763) Dan: hubris of youth is an age old problem, see middle ages nobility</li>
<li>For some “child wonders”, their childhood is effectively sacrificed because their adulthood arrives too early</li>
<li>[@16:22](https://youtu.be/WrEef_bsWas?t=982) When I went to school, there was a math prodigy.. <ul><li>Challenging operating system course</li></ul>
</li>
<li>[@25:44](https://youtu.be/WrEef_bsWas?t=1544) Ian: for early accelerated learners, the work is easy until it isn’t. They didn’t need to spend long hours studying, so they didn’t practice it. &gt; You have to take that youthful ego, and gently massacre it. Then build them up</li>
<li>
<a href="https://en.wikipedia.org/wiki/The_Dropout_(miniseries)">The Dropout</a> series, premiered March 2022</li>
<li>[@31:26](https://youtu.be/WrEef_bsWas?t=1886) Jason O: praising ability vs effort, negative effects</li>
<li>[@34:55](https://youtu.be/WrEef_bsWas?t=2095) 30 under 30, and such things</li>
<li>Empathy, learning to compromise, learning from being a parent</li>
<li>[@41:04](https://youtu.be/WrEef_bsWas?t=2464) How venture views human capital <ul>
<li>Student loans, (some predatory lenders)</li>
<li>Does making a young person comfy lead to their best work?</li>
<li>Taking a share of future earnings, kinda demotivating. Misaligned incentives</li>
<li>Lambda school, coding bootcamps. Fixed costs and incoming sharing</li>
</ul>
</li>
<li>[@50:17](https://youtu.be/WrEef_bsWas?t=3017) Sourcing these kids? <ul><li>“You’re a baseball card for someone” story, why are these kids at this party??</li></ul>
</li>
<li>[@57:40](https://youtu.be/WrEef_bsWas?t=3460) Sometimes kids who are extremely comfortable aren’t terribly motivated to put in the hours</li>
<li>[@59:25](https://youtu.be/WrEef_bsWas?t=3565) Drew: Income sharing and other schemes to pay for education <ul><li>Ken: doesn’t feel like kids would be set up for success</li></ul>
</li>
<li>[@1:04:07](https://youtu.be/WrEef_bsWas?t=3847) Background beef leading to this hairy scheme <ul>
<li>Some entrepreneurs have trouble seeing the role of luck in their success</li>
<li>Thiel Fellowship <a href="https://en.wikipedia.org/wiki/Thiel_Fellowship">wiki</a>
</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: March 21st, 2022</b></p><p>Trolltron, Assemble!</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/WrEef_bsWas">the recording for our Twitter Space for March 21st, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on March 21st included <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/quasarken">Ken</a> and <a href="https://twitter.com/drewonpaper">Drew Vogel</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@9:23](https://youtu.be/WrEef_bsWas?t=563) I was learning from people who were further down the track than I was <ul><li>Startups can have problems when founders fail to learn from the experiences of others</li></ul>
</li>
<li>[@12:43](https://youtu.be/WrEef_bsWas?t=763) Dan: hubris of youth is an age old problem, see middle ages nobility</li>
<li>For some “child wonders”, their childhood is effectively sacrificed because their adulthood arrives too early</li>
<li>[@16:22](https://youtu.be/WrEef_bsWas?t=982) When I went to school, there was a math prodigy.. <ul><li>Challenging operating system course</li></ul>
</li>
<li>[@25:44](https://youtu.be/WrEef_bsWas?t=1544) Ian: for early accelerated learners, the work is easy until it isn’t. They didn’t need to spend long hours studying, so they didn’t practice it. &gt; You have to take that youthful ego, and gently massacre it. Then build them up</li>
<li>
<a href="https://en.wikipedia.org/wiki/The_Dropout_(miniseries)">The Dropout</a> series, premiered March 2022</li>
<li>[@31:26](https://youtu.be/WrEef_bsWas?t=1886) Jason O: praising ability vs effort, negative effects</li>
<li>[@34:55](https://youtu.be/WrEef_bsWas?t=2095) 30 under 30, and such things</li>
<li>Empathy, learning to compromise, learning from being a parent</li>
<li>[@41:04](https://youtu.be/WrEef_bsWas?t=2464) How venture views human capital <ul>
<li>Student loans, (some predatory lenders)</li>
<li>Does making a young person comfy lead to their best work?</li>
<li>Taking a share of future earnings, kinda demotivating. Misaligned incentives</li>
<li>Lambda school, coding bootcamps. Fixed costs and incoming sharing</li>
</ul>
</li>
<li>[@50:17](https://youtu.be/WrEef_bsWas?t=3017) Sourcing these kids? <ul><li>“You’re a baseball card for someone” story, why are these kids at this party??</li></ul>
</li>
<li>[@57:40](https://youtu.be/WrEef_bsWas?t=3460) Sometimes kids who are extremely comfortable aren’t terribly motivated to put in the hours</li>
<li>[@59:25](https://youtu.be/WrEef_bsWas?t=3565) Drew: Income sharing and other schemes to pay for education <ul><li>Ken: doesn’t feel like kids would be set up for success</li></ul>
</li>
<li>[@1:04:07](https://youtu.be/WrEef_bsWas?t=3847) Background beef leading to this hairy scheme <ul>
<li>Some entrepreneurs have trouble seeing the role of luck in their success</li>
<li>Thiel Fellowship <a href="https://en.wikipedia.org/wiki/Thiel_Fellowship">wiki</a>
</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 21 Mar 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/0f781683/3074ebc3.mp3" length="102005391" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4248</itunes:duration>
      <itunes:summary>Unable to resist the call of Trolltron, Bryan and Adam are forced to discuss an odious tweet that undervalues education, struggle, and experience while aggrandizing youth and advocating exploitativeness... at least, in our opinion...</itunes:summary>
      <itunes:subtitle>Unable to resist the call of Trolltron, Bryan and Adam are forced to discuss an odious tweet that undervalues education, struggle, and experience while aggrandizing youth and advocating exploitativeness... at least, in our opinion...</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Ukraine</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>8</itunes:episode>
      <podcast:episode>8</podcast:episode>
      <itunes:title>Ukraine</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">7a1c2824-441e-417c-a222-f4d1990a7876</guid>
      <link>https://share.transistor.fm/s/e3b84802</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: March 14th, 2022</b></p><p>Ukraine</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/EdJU8mSWzQk">the recording for our Twitter Space for March 14th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, we were joined by special guest <a href="https://twitter.com/chelya">Andrey Akselrod</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>If you’re interested in donating to support Ukrainians, Andrey recommends <a href="https://novaukraine.org/">Nova Ukraine</a>
</li>
<li>[@1:52](https://youtu.be/EdJU8mSWzQk?t=112) Andrey introduces himself, background in computing</li>
<li>[@11:20](https://youtu.be/EdJU8mSWzQk?t=68) Andrey talks about where he lived in Ukraine, <a href="https://en.wikipedia.org/wiki/Dnipro">Dnipro</a><ul>
<li>Confluence of cultures</li>
<li>Moves to New York</li>
</ul>
</li>
<li>[@22:53](https://youtu.be/EdJU8mSWzQk?t=1373) Events of 2014, family and coworkers in Ukraine <ul><li>Crimea</li></ul>
</li>
<li>[@29:12](https://youtu.be/EdJU8mSWzQk?t=1752) Earlier disputed regions (Crimea, Donbas) and relations to current events <ul><li>Ukrainian national identity</li></ul>
</li>
<li>[@38:21](https://youtu.be/EdJU8mSWzQk?t=2301) Armed forces, self governance <ul><li>Business as usual, life goes on</li></ul>
</li>
<li>[@44:45](https://youtu.be/EdJU8mSWzQk?t=2685) Characterizing Ukraine as European democracy, and economic functions/trade <ul><li>Nuclear reactors</li></ul>
</li>
<li>[@49:12](https://youtu.be/EdJU8mSWzQk?t=2952) Invasion <ul><li>Leadership disconnect with reality</li></ul>
</li>
<li>[@1:02:28](https://youtu.be/EdJU8mSWzQk?t=3748) Family still in Dnipro <ul>
<li>Electronic communications</li>
<li>Kids understanding of what’s happening</li>
</ul>
</li>
<li>[@1:07:59](https://youtu.be/EdJU8mSWzQk?t=4079) How to help?</li>
<li>[@1:16:50](https://youtu.be/EdJU8mSWzQk?t=4610) Andrey’s coworkers and team members remaining in Ukraine &gt; Yes it’s war, but, the economy needs to continue to be healthy.</li>
<li>[@1:21:24](https://youtu.be/EdJU8mSWzQk?t=4884) Where is this going?</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: March 14th, 2022</b></p><p>Ukraine</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/EdJU8mSWzQk">the recording for our Twitter Space for March 14th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, we were joined by special guest <a href="https://twitter.com/chelya">Andrey Akselrod</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>If you’re interested in donating to support Ukrainians, Andrey recommends <a href="https://novaukraine.org/">Nova Ukraine</a>
</li>
<li>[@1:52](https://youtu.be/EdJU8mSWzQk?t=112) Andrey introduces himself, background in computing</li>
<li>[@11:20](https://youtu.be/EdJU8mSWzQk?t=68) Andrey talks about where he lived in Ukraine, <a href="https://en.wikipedia.org/wiki/Dnipro">Dnipro</a><ul>
<li>Confluence of cultures</li>
<li>Moves to New York</li>
</ul>
</li>
<li>[@22:53](https://youtu.be/EdJU8mSWzQk?t=1373) Events of 2014, family and coworkers in Ukraine <ul><li>Crimea</li></ul>
</li>
<li>[@29:12](https://youtu.be/EdJU8mSWzQk?t=1752) Earlier disputed regions (Crimea, Donbas) and relations to current events <ul><li>Ukrainian national identity</li></ul>
</li>
<li>[@38:21](https://youtu.be/EdJU8mSWzQk?t=2301) Armed forces, self governance <ul><li>Business as usual, life goes on</li></ul>
</li>
<li>[@44:45](https://youtu.be/EdJU8mSWzQk?t=2685) Characterizing Ukraine as European democracy, and economic functions/trade <ul><li>Nuclear reactors</li></ul>
</li>
<li>[@49:12](https://youtu.be/EdJU8mSWzQk?t=2952) Invasion <ul><li>Leadership disconnect with reality</li></ul>
</li>
<li>[@1:02:28](https://youtu.be/EdJU8mSWzQk?t=3748) Family still in Dnipro <ul>
<li>Electronic communications</li>
<li>Kids understanding of what’s happening</li>
</ul>
</li>
<li>[@1:07:59](https://youtu.be/EdJU8mSWzQk?t=4079) How to help?</li>
<li>[@1:16:50](https://youtu.be/EdJU8mSWzQk?t=4610) Andrey’s coworkers and team members remaining in Ukraine &gt; Yes it’s war, but, the economy needs to continue to be healthy.</li>
<li>[@1:21:24](https://youtu.be/EdJU8mSWzQk?t=4884) Where is this going?</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 14 Mar 2022 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/e3b84802/b7753187.mp3" length="81765188" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5108</itunes:duration>
      <itunes:summary>Russia's illegal war in Ukraine has created a humanitarian crisis. For those of us in tech, how can we help? Bryan and Adam talk to Andrey Akselrod, CTO at People.ai, and Ukrainian ex-pat about the crisis, the background, and ways to help.</itunes:summary>
      <itunes:subtitle>Russia's illegal war in Ukraine has created a humanitarian crisis. For those of us in tech, how can we help? Bryan and Adam talk to Andrey Akselrod, CTO at People.ai, and Ukrainian ex-pat about the crisis, the background, and ways to help.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Future Of Work</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>7</itunes:episode>
      <podcast:episode>7</podcast:episode>
      <itunes:title>The Future Of Work</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">677d26f5-17b9-4297-a471-438bd76d990f</guid>
      <link>https://share.transistor.fm/s/7daf8df8</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: March 7th, 2022</b></p><p>The Future Of Work</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/GTluipbKeII">the recording for our Twitter Space for March 7th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on March 7th included <a href="https://twitter.com/lri">Lucas Ives</a>, <a href="https://twitter.com/kebesays">Dan McDonald</a>, <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/jimrybarski">Jim Rybarski</a>, <a href="https://twitter.com/DataMinion">Austin</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/bravelyjake">Jake Demarest-Mays</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/timonsku">Timon</a>, <a href="https://twitter.com/gcb_alumnus">Matthew Amdur</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, and <a href="https://twitter.com/zenhorace">Horace</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@8:15](https://youtu.be/GTluipbKeII?t=495) Lucas’ story</li>
<li>Remote before pandemic, comparisons</li>
<li>[@16:29](https://youtu.be/GTluipbKeII?t=989) Sidebar chat, backchannel</li>
<li>[@22:49](https://youtu.be/GTluipbKeII?t=1369) Pre-recorded talks, speaker commenting in chat engaging with questions <ul>
<li>Multitasking during meetings, different from in-person single-threaded meetings</li>
<li>Recording meetings for later review</li>
<li>Holding onto a thought may detract from fully listening to another’s point</li>
</ul>
</li>
<li>[@34:40](https://youtu.be/GTluipbKeII?t=2080) Oxide’s full team meetup, what did they focus on?</li>
<li>[@38:01](https://youtu.be/GTluipbKeII?t=2281) Austin’s remote experience</li>
<li>[@44:30](https://youtu.be/GTluipbKeII?t=2670) Dan’s question: remote employees “pilgrimage” back to home often, how often?</li>
<li>[@50:23](https://youtu.be/GTluipbKeII?t=3023) Disadvantages to full remote?</li>
<li>[@56:15](https://youtu.be/GTluipbKeII?t=3375) Jake’s experience, asynchronous work style <ul>
<li>Meetings as unprepared group think sessions, not valuable as decision making</li>
<li>Requests for discussion, as decision making tools</li>
</ul>
</li>
<li>[@1:02:29](https://youtu.be/GTluipbKeII?t=3749) Jason: service delivery vs product delivery <ul><li>Class devision between “the desked” and “the un-desked”</li></ul>
</li>
<li>[@1:07:17](https://youtu.be/GTluipbKeII?t=4037) Is “back to office” about command and control? <ul><li>Other factors: big tech companies receive substantial local subsidies</li></ul>
</li>
<li>[@1:14:00](https://youtu.be/GTluipbKeII?t=4440) Timon on working in different timezones <ul>
<li>Recorded meetings/discussions as valuable content</li>
<li>Pandemic boosted remote work tool quality</li>
</ul>
</li>
<li>[@1:23:32](https://youtu.be/GTluipbKeII?t=5012) Difficulties with remote? <ul>
<li>Building rapport, judging emotions and nuanced communication</li>
<li>Organic, unplanned communications with in-person office spaces (watercooler)</li>
</ul>
</li>
<li>[@1:33:24](https://youtu.be/GTluipbKeII?t=5604) Matt: remote work as cost savings?</li>
<li>Value of “down time” communication, unstructured</li>
<li>[@1:43:50](https://youtu.be/GTluipbKeII?t=6230) Starting career, making connections, in all-remote world</li>
<li>[@1:47:58](https://youtu.be/GTluipbKeII?t=6478) Future of remote work since pandemic</li>
<li>[@1:51:30](https://youtu.be/GTluipbKeII?t=6690) Horace’s experience with remote work</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: March 7th, 2022</b></p><p>The Future Of Work</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/GTluipbKeII">the recording for our Twitter Space for March 7th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on March 7th included <a href="https://twitter.com/lri">Lucas Ives</a>, <a href="https://twitter.com/kebesays">Dan McDonald</a>, <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/jimrybarski">Jim Rybarski</a>, <a href="https://twitter.com/DataMinion">Austin</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/bravelyjake">Jake Demarest-Mays</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/timonsku">Timon</a>, <a href="https://twitter.com/gcb_alumnus">Matthew Amdur</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, and <a href="https://twitter.com/zenhorace">Horace</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@8:15](https://youtu.be/GTluipbKeII?t=495) Lucas’ story</li>
<li>Remote before pandemic, comparisons</li>
<li>[@16:29](https://youtu.be/GTluipbKeII?t=989) Sidebar chat, backchannel</li>
<li>[@22:49](https://youtu.be/GTluipbKeII?t=1369) Pre-recorded talks, speaker commenting in chat engaging with questions <ul>
<li>Multitasking during meetings, different from in-person single-threaded meetings</li>
<li>Recording meetings for later review</li>
<li>Holding onto a thought may detract from fully listening to another’s point</li>
</ul>
</li>
<li>[@34:40](https://youtu.be/GTluipbKeII?t=2080) Oxide’s full team meetup, what did they focus on?</li>
<li>[@38:01](https://youtu.be/GTluipbKeII?t=2281) Austin’s remote experience</li>
<li>[@44:30](https://youtu.be/GTluipbKeII?t=2670) Dan’s question: remote employees “pilgrimage” back to home often, how often?</li>
<li>[@50:23](https://youtu.be/GTluipbKeII?t=3023) Disadvantages to full remote?</li>
<li>[@56:15](https://youtu.be/GTluipbKeII?t=3375) Jake’s experience, asynchronous work style <ul>
<li>Meetings as unprepared group think sessions, not valuable as decision making</li>
<li>Requests for discussion, as decision making tools</li>
</ul>
</li>
<li>[@1:02:29](https://youtu.be/GTluipbKeII?t=3749) Jason: service delivery vs product delivery <ul><li>Class devision between “the desked” and “the un-desked”</li></ul>
</li>
<li>[@1:07:17](https://youtu.be/GTluipbKeII?t=4037) Is “back to office” about command and control? <ul><li>Other factors: big tech companies receive substantial local subsidies</li></ul>
</li>
<li>[@1:14:00](https://youtu.be/GTluipbKeII?t=4440) Timon on working in different timezones <ul>
<li>Recorded meetings/discussions as valuable content</li>
<li>Pandemic boosted remote work tool quality</li>
</ul>
</li>
<li>[@1:23:32](https://youtu.be/GTluipbKeII?t=5012) Difficulties with remote? <ul>
<li>Building rapport, judging emotions and nuanced communication</li>
<li>Organic, unplanned communications with in-person office spaces (watercooler)</li>
</ul>
</li>
<li>[@1:33:24](https://youtu.be/GTluipbKeII?t=5604) Matt: remote work as cost savings?</li>
<li>Value of “down time” communication, unstructured</li>
<li>[@1:43:50](https://youtu.be/GTluipbKeII?t=6230) Starting career, making connections, in all-remote world</li>
<li>[@1:47:58](https://youtu.be/GTluipbKeII?t=6478) Future of remote work since pandemic</li>
<li>[@1:51:30](https://youtu.be/GTluipbKeII?t=6690) Horace’s experience with remote work</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 07 Mar 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/7daf8df8/44852353.mp3" length="112934304" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>7056</itunes:duration>
      <itunes:summary>We figured out how to work remotely by necessity. How will that change how we work in the future? Is remote work here to stay? Is it for everyone?</itunes:summary>
      <itunes:subtitle>We figured out how to work remotely by necessity. How will that change how we work in the future? Is remote work here to stay? Is it for everyone?</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Engineering Culture</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>6</itunes:episode>
      <podcast:episode>6</podcast:episode>
      <itunes:title>Engineering Culture</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">1083fc41-968c-47ba-b01c-709a63b64c80</guid>
      <link>https://share.transistor.fm/s/58fb8010</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: February 21st, 2022</b></p><p>Engineering Culture</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/w9MQJbC26h4">the recording for our Twitter Space for February 21st, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on February 21st included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/mranney">Matt Ranney</a> and <a href="https://twitter.com/AaronHartwig1">Aaron Hartwig</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Alex Heath’s <a href="https://twitter.com/alexeheath/status/1493658517571526656">tweet</a> on FB meeting about updated values: “meta, metamates, me”</li>
<li>[@4:44](https://youtu.be/w9MQJbC26h4?t=284) Can an established company “change its values” in any sense?</li>
<li>[@8:43](https://youtu.be/w9MQJbC26h4?t=523) Draw the owl &gt; Twilio CEO: Yes, it was a meme, but it’s a great representation of our job. &gt; There is no instruction book and no one is going to tell us how to do our work. &gt; It’s now woven into our culture and used as a cheeky, but encouraging reply to &gt; those who email colleagues at Twilio asking how to do something.</li>
<li>[@12:42](https://youtu.be/w9MQJbC26h4?t=762) How do you establish engineering culture? <ul><li>Copy-paste values?</li></ul>
</li>
<li>[@20:44](https://youtu.be/w9MQJbC26h4?t=1244) When are values set down in a company’s history? <ul>
<li>Amazon’s brand image, expanding beyond books</li>
<li>Assessing values when hiring</li>
</ul>
</li>
<li>[@27:51](https://youtu.be/w9MQJbC26h4?t=1671) Principles vs values <ul>
<li>Principles are absolutes, cannot be taken too far</li>
<li>Values are about relative importance, in balance with other values</li>
<li>ACM <a href="https://www.acm.org/code-of-ethics">Code of Ethics</a>
</li>
<li>Relative importance of values. Can some values be learned, while others cannot?</li>
</ul>
</li>
<li>[@45:11](https://youtu.be/w9MQJbC26h4?t=2711) “Turn-around CEOs”, trying to change an established company culture</li>
<li>[@47:39](https://youtu.be/w9MQJbC26h4?t=2859) Sun culture, early days</li>
<li>[@54:32](https://youtu.be/w9MQJbC26h4?t=3272) Connection between values and business model <ul><li>Urgency in context, requires nuance</li></ul>
</li>
<li>[@1:03:37](https://youtu.be/w9MQJbC26h4?t=3817) Values on the wall. When are values simply ignored? <ul>
<li>Jack Handey <a href="https://en.wikipedia.org/wiki/Jack_Handey">wiki</a>, <em>Deep Thoughts</em> recurring SNL short sketches, eg <a href="https://youtu.be/1ne650xD6bc">Thanksgiving</a> ~30secs</li>
<li>“Sharpen fast”</li>
</ul>
</li>
<li>[@1:13:49](https://youtu.be/w9MQJbC26h4?t=4429) What are the important things to get set early? <ul><li>Bryan and Adam on Joyent and Delphix</li></ul>
</li>
<li>[@1:22:05](https://youtu.be/w9MQJbC26h4?t=4925) Matt Ranney on his time at Uber <ul>
<li>Trying to shape an established culture</li>
<li>Leadership’s values vs engineers</li>
<li>Business ethics</li>
</ul>
</li>
<li>[@1:35:47](https://youtu.be/w9MQJbC26h4?t=5747) GE</li>
<li>Thomas Gryta and Ted Mann (2020) <em>Lights Out: Pride, Delusion, and the Fall of General Electric</em> <a href="https://www.google.com/books/edition/Lights_Out/CCnNDwAAQBAJ">book</a>
</li>
<li>[@1:37:03](https://youtu.be/w9MQJbC26h4?t=5823) Conclusions <ul>
<li>Adam: Get it right first, but it’s not a lost cause if you don’t.</li>
<li>Bryan: Look for value alignment in organizations you might want to join, it’s tough to change course after the fact.</li>
<li>Matt: generous compensation has an effect on how closely one cares to scrutinize their organization’s values ¯_(ツ)_/¯</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: February 21st, 2022</b></p><p>Engineering Culture</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/w9MQJbC26h4">the recording for our Twitter Space for February 21st, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on February 21st included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/mranney">Matt Ranney</a> and <a href="https://twitter.com/AaronHartwig1">Aaron Hartwig</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Alex Heath’s <a href="https://twitter.com/alexeheath/status/1493658517571526656">tweet</a> on FB meeting about updated values: “meta, metamates, me”</li>
<li>[@4:44](https://youtu.be/w9MQJbC26h4?t=284) Can an established company “change its values” in any sense?</li>
<li>[@8:43](https://youtu.be/w9MQJbC26h4?t=523) Draw the owl &gt; Twilio CEO: Yes, it was a meme, but it’s a great representation of our job. &gt; There is no instruction book and no one is going to tell us how to do our work. &gt; It’s now woven into our culture and used as a cheeky, but encouraging reply to &gt; those who email colleagues at Twilio asking how to do something.</li>
<li>[@12:42](https://youtu.be/w9MQJbC26h4?t=762) How do you establish engineering culture? <ul><li>Copy-paste values?</li></ul>
</li>
<li>[@20:44](https://youtu.be/w9MQJbC26h4?t=1244) When are values set down in a company’s history? <ul>
<li>Amazon’s brand image, expanding beyond books</li>
<li>Assessing values when hiring</li>
</ul>
</li>
<li>[@27:51](https://youtu.be/w9MQJbC26h4?t=1671) Principles vs values <ul>
<li>Principles are absolutes, cannot be taken too far</li>
<li>Values are about relative importance, in balance with other values</li>
<li>ACM <a href="https://www.acm.org/code-of-ethics">Code of Ethics</a>
</li>
<li>Relative importance of values. Can some values be learned, while others cannot?</li>
</ul>
</li>
<li>[@45:11](https://youtu.be/w9MQJbC26h4?t=2711) “Turn-around CEOs”, trying to change an established company culture</li>
<li>[@47:39](https://youtu.be/w9MQJbC26h4?t=2859) Sun culture, early days</li>
<li>[@54:32](https://youtu.be/w9MQJbC26h4?t=3272) Connection between values and business model <ul><li>Urgency in context, requires nuance</li></ul>
</li>
<li>[@1:03:37](https://youtu.be/w9MQJbC26h4?t=3817) Values on the wall. When are values simply ignored? <ul>
<li>Jack Handey <a href="https://en.wikipedia.org/wiki/Jack_Handey">wiki</a>, <em>Deep Thoughts</em> recurring SNL short sketches, eg <a href="https://youtu.be/1ne650xD6bc">Thanksgiving</a> ~30secs</li>
<li>“Sharpen fast”</li>
</ul>
</li>
<li>[@1:13:49](https://youtu.be/w9MQJbC26h4?t=4429) What are the important things to get set early? <ul><li>Bryan and Adam on Joyent and Delphix</li></ul>
</li>
<li>[@1:22:05](https://youtu.be/w9MQJbC26h4?t=4925) Matt Ranney on his time at Uber <ul>
<li>Trying to shape an established culture</li>
<li>Leadership’s values vs engineers</li>
<li>Business ethics</li>
</ul>
</li>
<li>[@1:35:47](https://youtu.be/w9MQJbC26h4?t=5747) GE</li>
<li>Thomas Gryta and Ted Mann (2020) <em>Lights Out: Pride, Delusion, and the Fall of General Electric</em> <a href="https://www.google.com/books/edition/Lights_Out/CCnNDwAAQBAJ">book</a>
</li>
<li>[@1:37:03](https://youtu.be/w9MQJbC26h4?t=5823) Conclusions <ul>
<li>Adam: Get it right first, but it’s not a lost cause if you don’t.</li>
<li>Bryan: Look for value alignment in organizations you might want to join, it’s tough to change course after the fact.</li>
<li>Matt: generous compensation has an effect on how closely one cares to scrutinize their organization’s values ¯_(ツ)_/¯</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 21 Feb 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/58fb8010/30dfa21d.mp3" length="100015746" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6248</itunes:duration>
      <itunes:summary>Building a strong, virtuous engineering culture is hard. No silver bullets in this Twitter Space, but plenty of pitfalls to avoid.</itunes:summary>
      <itunes:subtitle>Building a strong, virtuous engineering culture is hard. No silver bullets in this Twitter Space, but plenty of pitfalls to avoid.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Breakthroughs Delayed</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>5</itunes:episode>
      <podcast:episode>5</podcast:episode>
      <itunes:title>Breakthroughs Delayed</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">ffb072e9-bc54-41b5-9867-9af0ff7290d7</guid>
      <link>https://share.transistor.fm/s/1e7afff1</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: February 14th, 2022</b></p><p>Breakthroughs Delayed</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/MyGgkBxz-mg">the recording for our Twitter Space for February 14th, 2022</a></p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on February 14th included <a href="https://twitter.com/cdibona">Chris DiBona</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/allingeek">Jeff Nickoloff</a>, <a href="https://twitter.com/AhmedMasud">Ahmed</a>, <a href="https://twitter.com/AstroBurnham">Tim Burnham</a> and <a href="https://twitter.com/ZackMaril">vint serp</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Adam’s <a href="https://twitter.com/ahl/status/1492668124272885763">tweet</a>
</li>
<li>Steven Johnson (2021) <em>Extra Life: A Short History of Living Longer</em> <a href="https://www.google.com/books/edition/Extra_Life/tw36DwAAQBAJ">book</a>
</li>
<li>[@6:00](https://youtu.be/MyGgkBxz-mg?t=360) Pasteurization <ul><li>1850’s swill milk scandal <a href="https://en.wikipedia.org/wiki/Swill_milk_scandal">wiki</a>
</li></ul>
</li>
<li>[@10:25](https://youtu.be/MyGgkBxz-mg?t=625) Automotive safety <ul>
<li>Three-point seat belt <a href="https://en.wikipedia.org/wiki/Seat_belt#Three-point">wiki</a>
</li>
<li>Windshield safety glass <a href="https://en.wikipedia.org/wiki/Windshield#Safety">wiki</a>
</li>
<li>Ralph Nader (1965) <em>Unsafe at Any Speed</em> <a href="https://en.wikipedia.org/wiki/Unsafe_at_Any_Speed">book</a>
</li>
</ul>
</li>
<li>[@16:25](https://youtu.be/MyGgkBxz-mg?t=985) Bryan proposes a rubric, are multiple teams racing? <ul>
<li>Walter Isaacson (2021) <em>The Code Breaker</em> <a href="https://www.google.com/books/edition/The_Code_Breaker/eCIFEAAAQBAJ">book</a>
</li>
<li>Edward Jenner, 1796 smallpox <a href="https://en.wikipedia.org/wiki/Smallpox_vaccine">vaccine</a>
</li>
</ul>
</li>
<li>[@24:32](https://youtu.be/MyGgkBxz-mg?t=1472) DTrace <ul><li>Compact C Type Format <a href="https://illumos.org/man/4/ctf">CTF</a>
</li></ul>
</li>
<li>[@27:25](https://youtu.be/MyGgkBxz-mg?t=1645) Docker <ul>
<li><a href="https://en.wikipedia.org/wiki/OverlayFS">OverlayFS</a></li>
<li>Bryan’s Papers We Love talk on Jails and Zones <a href="https://youtu.be/hgN8pCMLI2U">video</a> ~100mins</li>
<li>1963 Honeywell H200 <a href="https://en.wikipedia.org/wiki/Honeywell_200">wiki</a>
</li>
<li>Bryan on harware virtualization history <a href="https://youtu.be/jEHO-bSbuc0?t=322">video</a> ~10mins, also <a href="https://youtu.be/fcrepNIF_G0?t=511">here</a>
</li>
</ul>
</li>
<li>[@37:22](https://youtu.be/MyGgkBxz-mg?t=2242) The Greate Stirrup Controversy <a href="https://en.wikipedia.org/wiki/Great_Stirrup_Controversy">wiki</a>
</li>
<li>Steve Kemper (2005) <em>Reinventing the Wheel: A Story of Genius, Innovation, and Grand Ambition</em> <a href="https://www.google.com/books/edition/Reinventing_the_Wheel/Lh9aRqDuczUC">book</a>
</li>
<li>Jevons paradox <a href="https://en.wikipedia.org/wiki/Jevons_paradox">wiki</a>
</li>
<li>[@47:51](https://youtu.be/MyGgkBxz-mg?t=2871) Wikipedia <ul>
<li>Bryan gets worked up at a dinner party</li>
<li>Cliff Clavin (Cheers character) <a href="https://en.wikipedia.org/wiki/Cliff_Clavin">wiki</a>
</li>
<li>[@52:54](https://youtu.be/MyGgkBxz-mg?t=3174) Hello Chris!</li>
<li>[@57:23](https://youtu.be/MyGgkBxz-mg?t=3443) Wordle trolling <ul><li>[@57:40](https://www.youtube.com/watch?v=MyGgkBxz-mg&amp;t=3460s) Audio editing</li></ul>
</li>
</ul>
</li>
<li>[@1:01:03](https://youtu.be/MyGgkBxz-mg?t=3663) JSON</li>
<li>[@1:02:22](https://youtu.be/MyGgkBxz-mg?t=3742) Chris on HBO Silicon Valley</li>
<li>[@1:07:05](https://youtu.be/MyGgkBxz-mg?t=4025) Antikythera mechanism <a href="https://en.wikipedia.org/wiki/Antikythera_mechanism">wiki</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: February 14th, 2022</b></p><p>Breakthroughs Delayed</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/MyGgkBxz-mg">the recording for our Twitter Space for February 14th, 2022</a></p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on February 14th included <a href="https://twitter.com/cdibona">Chris DiBona</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/allingeek">Jeff Nickoloff</a>, <a href="https://twitter.com/AhmedMasud">Ahmed</a>, <a href="https://twitter.com/AstroBurnham">Tim Burnham</a> and <a href="https://twitter.com/ZackMaril">vint serp</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Adam’s <a href="https://twitter.com/ahl/status/1492668124272885763">tweet</a>
</li>
<li>Steven Johnson (2021) <em>Extra Life: A Short History of Living Longer</em> <a href="https://www.google.com/books/edition/Extra_Life/tw36DwAAQBAJ">book</a>
</li>
<li>[@6:00](https://youtu.be/MyGgkBxz-mg?t=360) Pasteurization <ul><li>1850’s swill milk scandal <a href="https://en.wikipedia.org/wiki/Swill_milk_scandal">wiki</a>
</li></ul>
</li>
<li>[@10:25](https://youtu.be/MyGgkBxz-mg?t=625) Automotive safety <ul>
<li>Three-point seat belt <a href="https://en.wikipedia.org/wiki/Seat_belt#Three-point">wiki</a>
</li>
<li>Windshield safety glass <a href="https://en.wikipedia.org/wiki/Windshield#Safety">wiki</a>
</li>
<li>Ralph Nader (1965) <em>Unsafe at Any Speed</em> <a href="https://en.wikipedia.org/wiki/Unsafe_at_Any_Speed">book</a>
</li>
</ul>
</li>
<li>[@16:25](https://youtu.be/MyGgkBxz-mg?t=985) Bryan proposes a rubric, are multiple teams racing? <ul>
<li>Walter Isaacson (2021) <em>The Code Breaker</em> <a href="https://www.google.com/books/edition/The_Code_Breaker/eCIFEAAAQBAJ">book</a>
</li>
<li>Edward Jenner, 1796 smallpox <a href="https://en.wikipedia.org/wiki/Smallpox_vaccine">vaccine</a>
</li>
</ul>
</li>
<li>[@24:32](https://youtu.be/MyGgkBxz-mg?t=1472) DTrace <ul><li>Compact C Type Format <a href="https://illumos.org/man/4/ctf">CTF</a>
</li></ul>
</li>
<li>[@27:25](https://youtu.be/MyGgkBxz-mg?t=1645) Docker <ul>
<li><a href="https://en.wikipedia.org/wiki/OverlayFS">OverlayFS</a></li>
<li>Bryan’s Papers We Love talk on Jails and Zones <a href="https://youtu.be/hgN8pCMLI2U">video</a> ~100mins</li>
<li>1963 Honeywell H200 <a href="https://en.wikipedia.org/wiki/Honeywell_200">wiki</a>
</li>
<li>Bryan on harware virtualization history <a href="https://youtu.be/jEHO-bSbuc0?t=322">video</a> ~10mins, also <a href="https://youtu.be/fcrepNIF_G0?t=511">here</a>
</li>
</ul>
</li>
<li>[@37:22](https://youtu.be/MyGgkBxz-mg?t=2242) The Greate Stirrup Controversy <a href="https://en.wikipedia.org/wiki/Great_Stirrup_Controversy">wiki</a>
</li>
<li>Steve Kemper (2005) <em>Reinventing the Wheel: A Story of Genius, Innovation, and Grand Ambition</em> <a href="https://www.google.com/books/edition/Reinventing_the_Wheel/Lh9aRqDuczUC">book</a>
</li>
<li>Jevons paradox <a href="https://en.wikipedia.org/wiki/Jevons_paradox">wiki</a>
</li>
<li>[@47:51](https://youtu.be/MyGgkBxz-mg?t=2871) Wikipedia <ul>
<li>Bryan gets worked up at a dinner party</li>
<li>Cliff Clavin (Cheers character) <a href="https://en.wikipedia.org/wiki/Cliff_Clavin">wiki</a>
</li>
<li>[@52:54](https://youtu.be/MyGgkBxz-mg?t=3174) Hello Chris!</li>
<li>[@57:23](https://youtu.be/MyGgkBxz-mg?t=3443) Wordle trolling <ul><li>[@57:40](https://www.youtube.com/watch?v=MyGgkBxz-mg&amp;t=3460s) Audio editing</li></ul>
</li>
</ul>
</li>
<li>[@1:01:03](https://youtu.be/MyGgkBxz-mg?t=3663) JSON</li>
<li>[@1:02:22](https://youtu.be/MyGgkBxz-mg?t=3742) Chris on HBO Silicon Valley</li>
<li>[@1:07:05](https://youtu.be/MyGgkBxz-mg?t=4025) Antikythera mechanism <a href="https://en.wikipedia.org/wiki/Antikythera_mechanism">wiki</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 14 Feb 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/1e7afff1/4972cea5.mp3" length="65966092" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4120</itunes:duration>
      <itunes:summary>Steven Johnston's Extra Life: A Short History of Living Longer observes that in addition to breakthroughs, and incremental progress, there is a class of innovation that lagged, that could have happened sooner but didn't. In this week's Twitter Space, we talk about technologies that could have happened sooner, but failed to.</itunes:summary>
      <itunes:subtitle>Steven Johnston's Extra Life: A Short History of Living Longer observes that in addition to breakthroughs, and incremental progress, there is a class of innovation that lagged, that could have happened sooner but didn't. In this week's Twitter Space, we t</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>I Know This! (Purpose-built systems with general-purpose guts)</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>4</itunes:episode>
      <podcast:episode>4</podcast:episode>
      <itunes:title>I Know This! (Purpose-built systems with general-purpose guts)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">aaf074ae-3832-4bf8-87f3-4f81a696ae55</guid>
      <link>https://share.transistor.fm/s/bc3d022c</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: February 7th, 2022</b></p><p>I Know This! (Purpose-built systems with general-purpose guts)</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/WsvJT6i_atw">the recording for our Twitter Space for February 7th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on February 7th included <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/mranney">Matt Ranney</a> and <a href="https://twitter.com/quasarken">Ken</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Calendly <a href="https://twitter.com/bcantrill/status/1486724259049185281">tweet</a> context</li>
<li>[@11:47](https://youtu.be/WsvJT6i_atw?t=707) Hacker News <a href="https://news.ycombinator.com/item?id=30195007">post</a>
</li>
<li>[@18:15](https://youtu.be/WsvJT6i_atw?t=1095) James Garfield <a href="https://en.wikipedia.org/wiki/James_A._Garfield#Treatment_and_death">shooting</a>
</li>
<li>[@21:29](https://youtu.be/WsvJT6i_atw?t=1289) Adam’s story about customers taking on heroic interventions themselves, learning the value of logging all commands, and digging through email chains for paydirt <ul><li>Developed “three strikes” rule, focus on fixing the proximate issues (and defer general health boosters for another time) so as not to lose the faith of the customer</li></ul>
</li>
<li>[@27:35](https://youtu.be/WsvJT6i_atw?t=1655) E-cache <a href="https://www.theregister.com/2001/03/07/sun_suffers_ultrasparc_ii_cache/">parity error</a>
</li>
<li>[@33:38](https://youtu.be/WsvJT6i_atw?t=2018) Support personnel remaining calm in the face of unknown damage</li>
<li>[@41:22](https://youtu.be/WsvJT6i_atw?t=2482) Outages, postmortem, software as a service and public cloud providers <ul><li>Vendor transparency or lack thereof</li></ul>
</li>
<li>[@48:28](https://youtu.be/WsvJT6i_atw?t=2908) Ken: transparency as part of legal compliance?</li>
<li>MITRE <a href="https://cve.mitre.org/cve/">CVE List</a> of publicly disclosed cybersecurity vulnerabilities</li>
<li>[@52:45](https://youtu.be/WsvJT6i_atw?t=3165) Adventures in shady pay to play industry events <ul><li>Fixed raffles</li></ul>
</li>
<li>[@1:01:30](https://youtu.be/WsvJT6i_atw?t=3690) “We never lost anyone’s data but it took some long vacations” <ul>
<li>Incident where someone corrupted kernel data structures</li>
<li>Adam pulls a fast one</li>
<li>Paul Newman and Robert Redford in (1973) <em>The Sting</em> <a href="https://en.wikipedia.org/wiki/The_Sting">movie</a>
</li>
<li>Different ways to structure support contracts</li>
<li>mdb -kw, the w is load bearing</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: February 7th, 2022</b></p><p>I Know This! (Purpose-built systems with general-purpose guts)</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/WsvJT6i_atw">the recording for our Twitter Space for February 7th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on February 7th included <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/mranney">Matt Ranney</a> and <a href="https://twitter.com/quasarken">Ken</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Calendly <a href="https://twitter.com/bcantrill/status/1486724259049185281">tweet</a> context</li>
<li>[@11:47](https://youtu.be/WsvJT6i_atw?t=707) Hacker News <a href="https://news.ycombinator.com/item?id=30195007">post</a>
</li>
<li>[@18:15](https://youtu.be/WsvJT6i_atw?t=1095) James Garfield <a href="https://en.wikipedia.org/wiki/James_A._Garfield#Treatment_and_death">shooting</a>
</li>
<li>[@21:29](https://youtu.be/WsvJT6i_atw?t=1289) Adam’s story about customers taking on heroic interventions themselves, learning the value of logging all commands, and digging through email chains for paydirt <ul><li>Developed “three strikes” rule, focus on fixing the proximate issues (and defer general health boosters for another time) so as not to lose the faith of the customer</li></ul>
</li>
<li>[@27:35](https://youtu.be/WsvJT6i_atw?t=1655) E-cache <a href="https://www.theregister.com/2001/03/07/sun_suffers_ultrasparc_ii_cache/">parity error</a>
</li>
<li>[@33:38](https://youtu.be/WsvJT6i_atw?t=2018) Support personnel remaining calm in the face of unknown damage</li>
<li>[@41:22](https://youtu.be/WsvJT6i_atw?t=2482) Outages, postmortem, software as a service and public cloud providers <ul><li>Vendor transparency or lack thereof</li></ul>
</li>
<li>[@48:28](https://youtu.be/WsvJT6i_atw?t=2908) Ken: transparency as part of legal compliance?</li>
<li>MITRE <a href="https://cve.mitre.org/cve/">CVE List</a> of publicly disclosed cybersecurity vulnerabilities</li>
<li>[@52:45](https://youtu.be/WsvJT6i_atw?t=3165) Adventures in shady pay to play industry events <ul><li>Fixed raffles</li></ul>
</li>
<li>[@1:01:30](https://youtu.be/WsvJT6i_atw?t=3690) “We never lost anyone’s data but it took some long vacations” <ul>
<li>Incident where someone corrupted kernel data structures</li>
<li>Adam pulls a fast one</li>
<li>Paul Newman and Robert Redford in (1973) <em>The Sting</em> <a href="https://en.wikipedia.org/wiki/The_Sting">movie</a>
</li>
<li>Different ways to structure support contracts</li>
<li>mdb -kw, the w is load bearing</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 07 Feb 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/bc3d022c/682ac330.mp3" length="77456386" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4838</itunes:duration>
      <itunes:summary>Purpose-built systems, computing appliances, are typically built around or on top of general purpose systems. In this week's Twitter Space we look at how those similarities can lead customers to accidental calamity.</itunes:summary>
      <itunes:subtitle>Purpose-built systems, computing appliances, are typically built around or on top of general purpose systems. In this week's Twitter Space we look at how those similarities can lead customers to accidental calamity.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Taxonomy of Hype</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>3</itunes:episode>
      <podcast:episode>3</podcast:episode>
      <itunes:title>Taxonomy of Hype</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">fe5b95f2-e4b8-403b-a009-255c7deb4d84</guid>
      <link>https://share.transistor.fm/s/a6e5cb57</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: January 24th, 2022</b></p><p>Taxonomy of Hype</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/qrWgmkBfn9s">the recording for our Twitter Space for January 24th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on January 24th included <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/tgamblin">Todd Gamblin</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a> and <a href="https://twitter.com/aka_pugs">Tom Lyon</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>The <a href="https://twitter.com/bcantrill/status/1485689044109443073">tweet</a> about the topic: Johannes Klingebiel’s (2022) <em>The five Levels of Hype</em> <a href="https://johannesklingebiel.de/2022/01/12/hype-as-a-scale.html">taxonomy</a>
</li>
<li>[@8:24](https://youtu.be/qrWgmkBfn9s?t=504) Roko’s Basilisk (<a href="https://slate.com/technology/2014/07/rokos-basilisk-the-most-terrifying-thought-experiment-of-all-time.html">slate.com</a>)</li>
<li>[@10:21](https://youtu.be/qrWgmkBfn9s?t=621) Cloud Computing</li>
<li>[@12:09](https://youtu.be/qrWgmkBfn9s?t=729) Mobile, Wi-Fi (introduced in 1997) <ul><li>Adam broke his hand, but can still type dtrace with one hand</li></ul>
</li>
<li>[@15:14](https://youtu.be/qrWgmkBfn9s?t=914) Java <ul>
<li>Write once run anywhere</li>
<li>Cross platform graphical interfaces</li>
</ul>
</li>
<li>Windows NT</li>
<li>[@17:47](https://youtu.be/qrWgmkBfn9s?t=1067) Storage technology <ul>
<li>Dedup</li>
<li>ZFS copies setting and redundant_metadata</li>
<li>
<a href="https://en.wikipedia.org/wiki/InfiniBand">InfiniBand</a>, iSCSI Extensions for RDMA (<a href="https://en.wikipedia.org/wiki/ISCSI_Extensions_for_RDMA">iSER</a>), SCSI RDMA Protocol (<a href="https://en.wikipedia.org/wiki/SCSI_RDMA_Protocol">SRP</a>)</li>
</ul>
</li>
<li>[@26:15](https://youtu.be/qrWgmkBfn9s?t=1575) 3D XPoint (Intel Optane) <a href="https://en.wikipedia.org/wiki/3D_XPoint">wiki</a><ul>
<li>HP Memristor <a href="https://www.hpl.hp.com/news/2008/apr-jun/memristor_faq.html">FAQ</a>
</li>
<li>HP “The Machine” <ul>
<li>HP research’s pure hype <a href="https://www.hpl.hp.com/research/systems-research/themachine/">marketing pitch</a>
</li>
<li>The (absolutely incredible) Star Trek <a href="https://www.youtube.com/watch?v=tsPJFlGFlZY">crossover ad</a> &gt; I’m gonna provide you the emotion of a revolution, but not the technical detail to &gt; support it, not yet, but it’s coming.</li>
</ul>
</li>
</ul>
</li>
<li>[@31:02](https://youtu.be/qrWgmkBfn9s?t=1862) Segway (<a href="https://en.wikipedia.org/wiki/Segway">wiki</a>) <ul>
<li>Dean Kamen <a href="https://en.wikipedia.org/wiki/Dean_Kamen">wiki</a>
</li>
<li>Decoder Ring podcast (June 2021) <em>Who Killed the Segway?</em> ~40mins <a href="https://slate.com/podcasts/decoder-ring/2021/06/segway-dean-kamen">slate.com</a>, Apple <a href="https://podcasts.apple.com/us/podcast/who-killed-the-segway/id1376577202?i=1000528700569">podcasts</a>
</li>
<li>2001 Good Morning America Segway unveiling, Diane Sawyer is <a href="https://youtu.be/Tppv2NgZOQU?t=53">underwhelmed</a> &gt; I’m tempted to say “that’s it??” (nervous laughter) &gt; But that can’t be <em>it</em>!?</li>
</ul>
</li>
<li>[@34:29](https://youtu.be/qrWgmkBfn9s?t=2069) <a href="https://en.wikipedia.org/wiki/Maglev">Maglev</a>, <a href="https://en.wikipedia.org/wiki/Cold_fusion">Cold fusion</a><ul>
<li>Walter Isaacson (2021) <em>The Code Breaker: Jennifer Doudna, Gene Editing, and the Future of the Human Race</em> <a href="https://www.google.com/books/edition/The_Code_Breaker/f_D3DwAAQBAJ">book</a>
</li>
<li>Human Genome Project <a href="https://en.wikipedia.org/wiki/Human_Genome_Project">wiki</a>
</li>
<li>Hype booms and busts</li>
<li>Todd’s story on working on fusion at a national lab, and the nature of gaining funding for large projects</li>
</ul>
</li>
<li>[@45:30](https://youtu.be/qrWgmkBfn9s?t=2730) Rust</li>
<li>[@48:43](https://youtu.be/qrWgmkBfn9s?t=2923) DTrace</li>
<li>[@52:14](https://youtu.be/qrWgmkBfn9s?t=3134) Nanotechnology <ul>
<li>K. Eric Drexler <a href="https://en.wikipedia.org/wiki/K._Eric_Drexler">wiki</a>
</li>
<li>Expert Systems, AR/VR</li>
</ul>
</li>
<li>[@56:23](https://youtu.be/qrWgmkBfn9s?t=3383) Chatbots <ul><li>Dan Olson (Jan 2022) <em>Line Goes Up - The Problem with NFTs</em> ~2hr <a href="https://youtu.be/YQ_xWvX1n9g">video</a> (worth every minute)</li></ul>
</li>
<li>[@59:11](https://youtu.be/qrWgmkBfn9s?t=3551) Serverless <ul>
<li>
<a href="https://en.wikipedia.org/wiki/IA-64">Itanium IA-64</a>, Very long instruction word <a href="https://en.wikipedia.org/wiki/Very_long_instruction_word">VLIW</a>
</li>
<li>Fibre Channel over Ethernet <a href="https://en.wikipedia.org/wiki/Fibre_Channel_over_Ethernet">FCoE</a>, ATA over Ethernet <a href="https://en.wikipedia.org/wiki/ATA_over_Ethernet">AoE</a> &gt; A solution in search of a problem</li>
</ul>
</li>
<li>[@1:06:50](https://youtu.be/qrWgmkBfn9s?t=4010) Taligent <a href="https://en.wikipedia.org/wiki/Taligent">wiki</a><ul>
<li>Tom Hormby (2014) <em>Pink: Apple’s First Stab at a Modern Operating System</em> <a href="https://lowendmac.com/2014/pink-apples-first-stab-at-a-modern-operating-system/">post</a>
</li>
<li>Be Inc <a href="https://en.wikipedia.org/wiki/Be_Inc.">wiki</a><ul><li>Bryan’s Be whiteboard story</li></ul>
</li>
</ul>
</li>
<li>[@1:13:47](https://youtu.be/qrWgmkBfn9s?t=4427) Docker <ul><li>Monetizing open source</li></ul>
</li>
<li>[@1:20:28](https://youtu.be/qrWgmkBfn9s?t=4828) 5G</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: January 24th, 2022</b></p><p>Taxonomy of Hype</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/qrWgmkBfn9s">the recording for our Twitter Space for January 24th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on January 24th included <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/tgamblin">Todd Gamblin</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a> and <a href="https://twitter.com/aka_pugs">Tom Lyon</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>The <a href="https://twitter.com/bcantrill/status/1485689044109443073">tweet</a> about the topic: Johannes Klingebiel’s (2022) <em>The five Levels of Hype</em> <a href="https://johannesklingebiel.de/2022/01/12/hype-as-a-scale.html">taxonomy</a>
</li>
<li>[@8:24](https://youtu.be/qrWgmkBfn9s?t=504) Roko’s Basilisk (<a href="https://slate.com/technology/2014/07/rokos-basilisk-the-most-terrifying-thought-experiment-of-all-time.html">slate.com</a>)</li>
<li>[@10:21](https://youtu.be/qrWgmkBfn9s?t=621) Cloud Computing</li>
<li>[@12:09](https://youtu.be/qrWgmkBfn9s?t=729) Mobile, Wi-Fi (introduced in 1997) <ul><li>Adam broke his hand, but can still type dtrace with one hand</li></ul>
</li>
<li>[@15:14](https://youtu.be/qrWgmkBfn9s?t=914) Java <ul>
<li>Write once run anywhere</li>
<li>Cross platform graphical interfaces</li>
</ul>
</li>
<li>Windows NT</li>
<li>[@17:47](https://youtu.be/qrWgmkBfn9s?t=1067) Storage technology <ul>
<li>Dedup</li>
<li>ZFS copies setting and redundant_metadata</li>
<li>
<a href="https://en.wikipedia.org/wiki/InfiniBand">InfiniBand</a>, iSCSI Extensions for RDMA (<a href="https://en.wikipedia.org/wiki/ISCSI_Extensions_for_RDMA">iSER</a>), SCSI RDMA Protocol (<a href="https://en.wikipedia.org/wiki/SCSI_RDMA_Protocol">SRP</a>)</li>
</ul>
</li>
<li>[@26:15](https://youtu.be/qrWgmkBfn9s?t=1575) 3D XPoint (Intel Optane) <a href="https://en.wikipedia.org/wiki/3D_XPoint">wiki</a><ul>
<li>HP Memristor <a href="https://www.hpl.hp.com/news/2008/apr-jun/memristor_faq.html">FAQ</a>
</li>
<li>HP “The Machine” <ul>
<li>HP research’s pure hype <a href="https://www.hpl.hp.com/research/systems-research/themachine/">marketing pitch</a>
</li>
<li>The (absolutely incredible) Star Trek <a href="https://www.youtube.com/watch?v=tsPJFlGFlZY">crossover ad</a> &gt; I’m gonna provide you the emotion of a revolution, but not the technical detail to &gt; support it, not yet, but it’s coming.</li>
</ul>
</li>
</ul>
</li>
<li>[@31:02](https://youtu.be/qrWgmkBfn9s?t=1862) Segway (<a href="https://en.wikipedia.org/wiki/Segway">wiki</a>) <ul>
<li>Dean Kamen <a href="https://en.wikipedia.org/wiki/Dean_Kamen">wiki</a>
</li>
<li>Decoder Ring podcast (June 2021) <em>Who Killed the Segway?</em> ~40mins <a href="https://slate.com/podcasts/decoder-ring/2021/06/segway-dean-kamen">slate.com</a>, Apple <a href="https://podcasts.apple.com/us/podcast/who-killed-the-segway/id1376577202?i=1000528700569">podcasts</a>
</li>
<li>2001 Good Morning America Segway unveiling, Diane Sawyer is <a href="https://youtu.be/Tppv2NgZOQU?t=53">underwhelmed</a> &gt; I’m tempted to say “that’s it??” (nervous laughter) &gt; But that can’t be <em>it</em>!?</li>
</ul>
</li>
<li>[@34:29](https://youtu.be/qrWgmkBfn9s?t=2069) <a href="https://en.wikipedia.org/wiki/Maglev">Maglev</a>, <a href="https://en.wikipedia.org/wiki/Cold_fusion">Cold fusion</a><ul>
<li>Walter Isaacson (2021) <em>The Code Breaker: Jennifer Doudna, Gene Editing, and the Future of the Human Race</em> <a href="https://www.google.com/books/edition/The_Code_Breaker/f_D3DwAAQBAJ">book</a>
</li>
<li>Human Genome Project <a href="https://en.wikipedia.org/wiki/Human_Genome_Project">wiki</a>
</li>
<li>Hype booms and busts</li>
<li>Todd’s story on working on fusion at a national lab, and the nature of gaining funding for large projects</li>
</ul>
</li>
<li>[@45:30](https://youtu.be/qrWgmkBfn9s?t=2730) Rust</li>
<li>[@48:43](https://youtu.be/qrWgmkBfn9s?t=2923) DTrace</li>
<li>[@52:14](https://youtu.be/qrWgmkBfn9s?t=3134) Nanotechnology <ul>
<li>K. Eric Drexler <a href="https://en.wikipedia.org/wiki/K._Eric_Drexler">wiki</a>
</li>
<li>Expert Systems, AR/VR</li>
</ul>
</li>
<li>[@56:23](https://youtu.be/qrWgmkBfn9s?t=3383) Chatbots <ul><li>Dan Olson (Jan 2022) <em>Line Goes Up - The Problem with NFTs</em> ~2hr <a href="https://youtu.be/YQ_xWvX1n9g">video</a> (worth every minute)</li></ul>
</li>
<li>[@59:11](https://youtu.be/qrWgmkBfn9s?t=3551) Serverless <ul>
<li>
<a href="https://en.wikipedia.org/wiki/IA-64">Itanium IA-64</a>, Very long instruction word <a href="https://en.wikipedia.org/wiki/Very_long_instruction_word">VLIW</a>
</li>
<li>Fibre Channel over Ethernet <a href="https://en.wikipedia.org/wiki/Fibre_Channel_over_Ethernet">FCoE</a>, ATA over Ethernet <a href="https://en.wikipedia.org/wiki/ATA_over_Ethernet">AoE</a> &gt; A solution in search of a problem</li>
</ul>
</li>
<li>[@1:06:50](https://youtu.be/qrWgmkBfn9s?t=4010) Taligent <a href="https://en.wikipedia.org/wiki/Taligent">wiki</a><ul>
<li>Tom Hormby (2014) <em>Pink: Apple’s First Stab at a Modern Operating System</em> <a href="https://lowendmac.com/2014/pink-apples-first-stab-at-a-modern-operating-system/">post</a>
</li>
<li>Be Inc <a href="https://en.wikipedia.org/wiki/Be_Inc.">wiki</a><ul><li>Bryan’s Be whiteboard story</li></ul>
</li>
</ul>
</li>
<li>[@1:13:47](https://youtu.be/qrWgmkBfn9s?t=4427) Docker <ul><li>Monetizing open source</li></ul>
</li>
<li>[@1:20:28](https://youtu.be/qrWgmkBfn9s?t=4828) 5G</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 24 Jan 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/a6e5cb57/cd04779f.mp3" length="79315458" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4955</itunes:duration>
      <itunes:summary>Hype comes in many forms. In this week's Twitter Space we look at Johannes Klingebiel 5-stage taxonomy of hype and try to slot some of our favorite over-hyped (and under-hyped) technologies into those categories.</itunes:summary>
      <itunes:subtitle>Hype comes in many forms. In this week's Twitter Space we look at Johannes Klingebiel 5-stage taxonomy of hype and try to slot some of our favorite over-hyped (and under-hyped) technologies into those categories.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Flying Blind with Peter Robison</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>2</itunes:episode>
      <podcast:episode>2</podcast:episode>
      <itunes:title>Flying Blind with Peter Robison</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">4ae4eb19-83e6-4131-ba45-1b7606085976</guid>
      <link>https://share.transistor.fm/s/124f46bf</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: January 10th, 2022</b></p><p>Flying Blind with Peter Robison</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/q6i9NPslfE4">the recording for our Twitter Space for January 10th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/petermrobison">Peter Robison</a>.</p><p>Other speakers on January 10th included <a href="https://twitter.com/MattSci2">MattSci</a> and <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@5:02](https://youtu.be/q6i9NPslfE4?t=302) Peter on <a href="https://en.wikipedia.org/wiki/Japan_Air_Lines_Flight_123">Japan Air Lines Flight 123</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Boeing_777">Boeing 777</a> &gt; Bryan: The things I am the most proud of are the things I’ve worked with other people on, &gt; when a team does something that feels beyond an individual’s grasp.</li>
<li>[@12:25](https://youtu.be/q6i9NPslfE4?t=745) Peter’s history covering aerospace <ul><li><a href="https://en.wikipedia.org/wiki/McDonnell_Douglas">McDonnell Douglas</a></li></ul>
</li>
<li>[@15:53](https://youtu.be/q6i9NPslfE4?t=953) Jack Welch, corporate culture <ul>
<li>Investors over customers</li>
<li>John Godson 1975 <em>The Rise and Fall of the DC-10</em> <a href="https://www.google.com/books/edition/The_Rise_and_Fall_of_the_DC_10/fLy4QgAACAAJ">book</a>
</li>
</ul>
</li>
<li>[@24:12](https://youtu.be/q6i9NPslfE4?t=1452) Questionable morals from execs</li>
<li>John Newhouse 1982 <em>The Sporty Game</em> <a href="https://www.google.com/books/edition/The_Sporty_Game/DTkiAAAAMAAJ">book</a>
</li>
<li>[@27:41](https://youtu.be/q6i9NPslfE4?t=1661) When did it become clear that the 737 MAX was problematic? <ul>
<li><a href="https://en.wikipedia.org/wiki/Lion_Air_Flight_610">Lion Air Flight 610</a></li>
<li>Maneuvering Characteristics Augmentation System <a href="https://en.wikipedia.org/wiki/Maneuvering_Characteristics_Augmentation_System">MCAS</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Ethiopian_Airlines_Flight_302">Ethiopian Airlines Flight 302</a></li>
<li>Shifting blame, public messaging vs behind closed doors opinion forming</li>
</ul>
</li>
<li>[@36:31](https://youtu.be/q6i9NPslfE4?t=2191) Why pilots had no training (or knowledge of) the MCAS system</li>
<li>[@39:23](https://youtu.be/q6i9NPslfE4?t=2363) Angle of Attack indicator</li>
<li>[@48:48](https://youtu.be/q6i9NPslfE4?t=2928) MCAS software, writing safety critical computer code <ul><li>[@53:19](https://youtu.be/q6i9NPslfE4?t=3199) “Blood on the seats”</li></ul>
</li>
<li>[@58:48](https://youtu.be/q6i9NPslfE4?t=3528) Matt asks about “fly-by-wire” and MCAS. “Optional” safety features</li>
<li>[@1:08:04](https://youtu.be/q6i9NPslfE4?t=4084) Testing safety, lack of technical scrutiny</li>
<li>[@1:12:31](https://youtu.be/q6i9NPslfE4?t=4351) Simeon asks about the FAA’s relationship with Boeing</li>
<li>[@1:15:05](https://youtu.be/q6i9NPslfE4?t=4505) Bryan: what are the lessons for other disciplines? <ul>
<li>Peter: Valuing employee views. Tolerating bad news.</li>
<li>Adam: The engineering culture at Boeing was so arduous to build, and so quick to corrode</li>
</ul>
</li>
<li>[@1:18:39](https://youtu.be/q6i9NPslfE4?t=4719) Matt: relationship to F-35? Military vs commercial</li>
<li>[@1:23:23](https://youtu.be/q6i9NPslfE4?t=5003) Gene Kim: CEO congressional testimony</li>
<li>[@1:26:22](https://youtu.be/q6i9NPslfE4?t=5182) Passing certifications, alternatives to MCAS</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: January 10th, 2022</b></p><p>Flying Blind with Peter Robison</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/q6i9NPslfE4">the recording for our Twitter Space for January 10th, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/petermrobison">Peter Robison</a>.</p><p>Other speakers on January 10th included <a href="https://twitter.com/MattSci2">MattSci</a> and <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@5:02](https://youtu.be/q6i9NPslfE4?t=302) Peter on <a href="https://en.wikipedia.org/wiki/Japan_Air_Lines_Flight_123">Japan Air Lines Flight 123</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Boeing_777">Boeing 777</a> &gt; Bryan: The things I am the most proud of are the things I’ve worked with other people on, &gt; when a team does something that feels beyond an individual’s grasp.</li>
<li>[@12:25](https://youtu.be/q6i9NPslfE4?t=745) Peter’s history covering aerospace <ul><li><a href="https://en.wikipedia.org/wiki/McDonnell_Douglas">McDonnell Douglas</a></li></ul>
</li>
<li>[@15:53](https://youtu.be/q6i9NPslfE4?t=953) Jack Welch, corporate culture <ul>
<li>Investors over customers</li>
<li>John Godson 1975 <em>The Rise and Fall of the DC-10</em> <a href="https://www.google.com/books/edition/The_Rise_and_Fall_of_the_DC_10/fLy4QgAACAAJ">book</a>
</li>
</ul>
</li>
<li>[@24:12](https://youtu.be/q6i9NPslfE4?t=1452) Questionable morals from execs</li>
<li>John Newhouse 1982 <em>The Sporty Game</em> <a href="https://www.google.com/books/edition/The_Sporty_Game/DTkiAAAAMAAJ">book</a>
</li>
<li>[@27:41](https://youtu.be/q6i9NPslfE4?t=1661) When did it become clear that the 737 MAX was problematic? <ul>
<li><a href="https://en.wikipedia.org/wiki/Lion_Air_Flight_610">Lion Air Flight 610</a></li>
<li>Maneuvering Characteristics Augmentation System <a href="https://en.wikipedia.org/wiki/Maneuvering_Characteristics_Augmentation_System">MCAS</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Ethiopian_Airlines_Flight_302">Ethiopian Airlines Flight 302</a></li>
<li>Shifting blame, public messaging vs behind closed doors opinion forming</li>
</ul>
</li>
<li>[@36:31](https://youtu.be/q6i9NPslfE4?t=2191) Why pilots had no training (or knowledge of) the MCAS system</li>
<li>[@39:23](https://youtu.be/q6i9NPslfE4?t=2363) Angle of Attack indicator</li>
<li>[@48:48](https://youtu.be/q6i9NPslfE4?t=2928) MCAS software, writing safety critical computer code <ul><li>[@53:19](https://youtu.be/q6i9NPslfE4?t=3199) “Blood on the seats”</li></ul>
</li>
<li>[@58:48](https://youtu.be/q6i9NPslfE4?t=3528) Matt asks about “fly-by-wire” and MCAS. “Optional” safety features</li>
<li>[@1:08:04](https://youtu.be/q6i9NPslfE4?t=4084) Testing safety, lack of technical scrutiny</li>
<li>[@1:12:31](https://youtu.be/q6i9NPslfE4?t=4351) Simeon asks about the FAA’s relationship with Boeing</li>
<li>[@1:15:05](https://youtu.be/q6i9NPslfE4?t=4505) Bryan: what are the lessons for other disciplines? <ul>
<li>Peter: Valuing employee views. Tolerating bad news.</li>
<li>Adam: The engineering culture at Boeing was so arduous to build, and so quick to corrode</li>
</ul>
</li>
<li>[@1:18:39](https://youtu.be/q6i9NPslfE4?t=4719) Matt: relationship to F-35? Military vs commercial</li>
<li>[@1:23:23](https://youtu.be/q6i9NPslfE4?t=5003) Gene Kim: CEO congressional testimony</li>
<li>[@1:26:22](https://youtu.be/q6i9NPslfE4?t=5182) Passing certifications, alternatives to MCAS</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 10 Jan 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/124f46bf/1b9f7b30.mp3" length="86164926" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5383</itunes:duration>
      <itunes:summary>Peter Robison, author of Flying Blind: The 737 MAX Tragedy and the Fall of Boeing, discusses Boeing, the 737 disasters, corporate culture, and more.</itunes:summary>
      <itunes:subtitle>Peter Robison, author of Flying Blind: The 737 MAX Tragedy and the Fall of Boeing, discusses Boeing, the 737 disasters, corporate culture, and more.</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Predictions 2022</title>
      <itunes:season>2</itunes:season>
      <podcast:season>2</podcast:season>
      <itunes:episode>1</itunes:episode>
      <podcast:episode>1</podcast:episode>
      <itunes:title>Predictions 2022</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">92eb4781-1196-449d-8ed5-1dcc5a3fe0b5</guid>
      <link>https://share.transistor.fm/s/658fab8d</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: January 3rd, 2022</b></p><p>Predictions 2022</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/uZylf2gbg_E">the recording for our Twitter Space for January 3rd, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest on January 3rd included was tech prediction expert and noted Red Sox fan <a href="https://twitter.com/sogrady">Steven O’Grady</a>.</p><p>Below is a table of the oracles and their predictions: (If you made predictions, please submit a PR to add or clarify yours)</p><p><strong> Futurist  1 year  3 year  6 year </strong><br> | <a href="https://twitter.com/openlabbott">@openlabbott</a><br> <a href="https://youtu.be/uZylf2gbg_E?t2835">47:15</a> |  Discord are going to annoy their userbase.  |  We’ll finally get a RISC V server in a datacenter, in some shape or form.  |  Email goes the way of the landline. <br> | <a href="https://twitter.com/MattSci21">@MattSci2</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=4205">1:10:05</a> |  The framework laptop company will be unsuccessful. Existing laptops are not substantially different; with some retooling.  |  One major FPGA vendor will have a completely open toolchain for high end FPGAs.  |  At least 1 RISC-V supercomputer in the Top 500. <br> | <a href="https://twitter.com/tomk_">@tomk_</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=4605">1:16:45</a> |  At least one of the hyperscalers will become startlingly good at partnering.  |  Stablecoins will become regulated.  |  The biggest datacenter server provider (outside the hyperscalers) will be a company that hasn’t yet shipped its first server. <br> | <a href="https://twitter.com/tinco">@tinco</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=4737">1:18:57</a> |  Multiple companies will have demonstrated a AGI (one shot machine learning system). It’s not gonna be useful for anything, but I think the problem is less hard than many critics think it is and several companies/organizations are actually going to be showing the first versions of these systems.  |  Drones autonomously flying around private properties will be a common thing. Factory managers, powerlines inspectors, large building sites etc. will have commonly available and affordable options to inspect or patrol their properties.  |  Web3 will actually happen, but not in the way it’s currently being talked about. In 6 years time bots will have improved to the point that they can not be warded off the major platforms (or any platforms) and will make the web absolutely unusable due to them disrupting all established crowd funded moderation systems. A new paradigm will have to emerge that fundamentally changes how we use the web (thus web3), so that we can still derive value from it. <br> | <a href="https://twitter.com/lzrd">Ben Stoltz</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=5080">1:24:40</a> |  Smart glasses become a viable alternative for computer monitors <a href="https://www.youtube.com/watch?v=dpAYtS_vl40">youtube</a>. People who used to look away from their phones to have their own thoughts, and are now using smart glasses in real life situations, are subjected to an ads vs. attention “Tragedy of the commons”. As costs per unit decrease leading to ubiquity, this forces a modern-day “<a href="https://www.lbjlibrary.org/news-and-press/media-kits/highway-beautification-act">Highway Beautification Act</a>” to legislate Ad Blocking.  |  A significant percentage of commercial office space will be converted to housing.  |  The best AIs have emotional problems. We don’t really know how they work. AI specialists are more therapists than programmers. <br> | <a href="https://twitter.com/kelseyhightower">@kelseyhightower</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=5365">1:29:30</a> |  This year will be more of the same, competition to define the new normal as the pandemic winds down.  |  Pandemic-era solutions will backfire; crypto-currencies will give governments an excuse to track all actual spending. “We will give you the transparency, but not the kind you wanted.”  |  Technology will be recognized as sovereignty like money and land used to be. Governments will be wary of using technology from weak allies or competitors. Local hardware manufacturing, growth of local university training, etc. Possibly manifesting as national protectionism, or a reprise of the space-race. Open source will be the default model. <br> | <a href="https://twitter.com/orangecms">@orangecms</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=6825">1:53:45</a> |  a major OS from China emerges  |  high performance computing from Europe  |  ARM no longer as relevant <br> | <a href="https://twitter.com/ahl">@ahl</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=7080">1:58:00</a> |  web3 is done; we’re not talking about it, it’s not a thing, we don’t use the term and we only vaguely recall what it was supposed to mean.  |  Productivity per watt becomes a highly important metric in computing. Tools tell us about our power use. We spin workloads up and down depending on power cost and availability.  |  AWS offers RISC-V instance types. <br> | <a href="https://twitter.com/AaronDGoldman">@AaronDGoldman</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=4034">1:07:14</a> |  Single-node computing: people will realize that that distributed computing has a lot of overhead and that one server can do a lot of work. This will lead people to people doing business analytics jobs by pulling all their data to a single a computer and doing the calculation, getting the result 100x faster than splitting data over many computers.  |  Microservices inlining: taking a lot of microservices and statically linking them together. This will enable calling functions without network overhead, making things run 100x faster.  |  We will start do scaling properly. Instead of thinking “how can I make this big data and scale up to infinity”, we will try to get the most out of single node. Only once a single node has been pushed to its limit will we scale up to first a rack, then a datacenter, and then the world. <br> | <a href="https://twitter.com/dancrossnyc">@dancrossnyc</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=7270">2:01:10</a> |  Major workplace changes due to the pandemic will amplify and accentuate the wealth gap and disparity. Only some industries are privileged enough to be able to work from home. This will create social problems.  |  Regulation of social media in the aftermath of widespread political unrest, particularly after the US 2024 political season.  |  The effects of climate change will be sufficiently apparent that people will get serious about retooling around compute and power efficiency. <br> | <a href="https://twitter.com/iangrunert">@iangrunert</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=3366">56:06</a> |  No one year prediction.  | CCPA copycat laws in other states, perhaps US federal legislation, plus changing global regulatory environment lead to GDPR-like protections to no longer be geo-fenced by bigger players. This’ll also have impacts on SaaS adoption - spreading data around makes right to amendment and right to deletion harder.  | RISC-V chip in mainstream phone (likely Samsung). Previously moving target, but longer upgrade times and slower pace of improvements will cause Samsung to chase RISC-V for high volume phones due to better unit economics. Will have prior experience in RISC-V fab for other applications. <br> |  Zach<br> <a href="https://youtu.be/uZylf2gbg_E?t=3590">59:50</a> |  Not much will happen in with tech industry anti-trust. Any bills in progress will be watered down.  |  Antitrust enforcement will have a chilling effect on acquisitions.  |  Section 230 of the Communications Decency Act lives. The ARM/NVidia merger will not go through, but it’ll will take 5 years to find out. </p><p>Didn’t make it to the Twitter Space, but have a vision of the future? Submit a PR to add your own predictions. Be sure to abide by <a href="https://twitter.com/bcantrill/status/1478150718879977475">the rules</a>. Deadline: 2/1/2022</p><p><strong> Futurist  1 year  3 year  6 year </strong><br> | <a href="https://twitter.com/dendibakh">@dendibakh</a><br> Prediction about optimizing compilers  |  We’ve reached the point of diminishing returns in existing LLVM optimization passes (&lt;3% headroom, which is hard to get).  |  Compilers not only help optimize code, which is what they traditionally do. Compiler developers shift their focus on how they can enable application developers to write more efficient SW, i.e. help them indirectly. For example, a recommendation system based on the database of “golden” code written by performance gurus.  |  Machines are capable of programming themselves. Humans just feed a (formal) description of an algorithm to a machine and it comes up with an optimal code tailored to this particular HW. Compilers play an essential role here. (This is more of a 10-year prediction) <br> |  You?  |  |  | </p><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: January 3rd, 2022</b></p><p>Predictions 2022</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/uZylf2gbg_E">the recording for our Twitter Space for January 3rd, 2022</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest on January 3rd included was tech prediction expert and noted Red Sox fan <a href="https://twitter.com/sogrady">Steven O’Grady</a>.</p><p>Below is a table of the oracles and their predictions: (If you made predictions, please submit a PR to add or clarify yours)</p><p><strong> Futurist  1 year  3 year  6 year </strong><br> | <a href="https://twitter.com/openlabbott">@openlabbott</a><br> <a href="https://youtu.be/uZylf2gbg_E?t2835">47:15</a> |  Discord are going to annoy their userbase.  |  We’ll finally get a RISC V server in a datacenter, in some shape or form.  |  Email goes the way of the landline. <br> | <a href="https://twitter.com/MattSci21">@MattSci2</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=4205">1:10:05</a> |  The framework laptop company will be unsuccessful. Existing laptops are not substantially different; with some retooling.  |  One major FPGA vendor will have a completely open toolchain for high end FPGAs.  |  At least 1 RISC-V supercomputer in the Top 500. <br> | <a href="https://twitter.com/tomk_">@tomk_</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=4605">1:16:45</a> |  At least one of the hyperscalers will become startlingly good at partnering.  |  Stablecoins will become regulated.  |  The biggest datacenter server provider (outside the hyperscalers) will be a company that hasn’t yet shipped its first server. <br> | <a href="https://twitter.com/tinco">@tinco</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=4737">1:18:57</a> |  Multiple companies will have demonstrated a AGI (one shot machine learning system). It’s not gonna be useful for anything, but I think the problem is less hard than many critics think it is and several companies/organizations are actually going to be showing the first versions of these systems.  |  Drones autonomously flying around private properties will be a common thing. Factory managers, powerlines inspectors, large building sites etc. will have commonly available and affordable options to inspect or patrol their properties.  |  Web3 will actually happen, but not in the way it’s currently being talked about. In 6 years time bots will have improved to the point that they can not be warded off the major platforms (or any platforms) and will make the web absolutely unusable due to them disrupting all established crowd funded moderation systems. A new paradigm will have to emerge that fundamentally changes how we use the web (thus web3), so that we can still derive value from it. <br> | <a href="https://twitter.com/lzrd">Ben Stoltz</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=5080">1:24:40</a> |  Smart glasses become a viable alternative for computer monitors <a href="https://www.youtube.com/watch?v=dpAYtS_vl40">youtube</a>. People who used to look away from their phones to have their own thoughts, and are now using smart glasses in real life situations, are subjected to an ads vs. attention “Tragedy of the commons”. As costs per unit decrease leading to ubiquity, this forces a modern-day “<a href="https://www.lbjlibrary.org/news-and-press/media-kits/highway-beautification-act">Highway Beautification Act</a>” to legislate Ad Blocking.  |  A significant percentage of commercial office space will be converted to housing.  |  The best AIs have emotional problems. We don’t really know how they work. AI specialists are more therapists than programmers. <br> | <a href="https://twitter.com/kelseyhightower">@kelseyhightower</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=5365">1:29:30</a> |  This year will be more of the same, competition to define the new normal as the pandemic winds down.  |  Pandemic-era solutions will backfire; crypto-currencies will give governments an excuse to track all actual spending. “We will give you the transparency, but not the kind you wanted.”  |  Technology will be recognized as sovereignty like money and land used to be. Governments will be wary of using technology from weak allies or competitors. Local hardware manufacturing, growth of local university training, etc. Possibly manifesting as national protectionism, or a reprise of the space-race. Open source will be the default model. <br> | <a href="https://twitter.com/orangecms">@orangecms</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=6825">1:53:45</a> |  a major OS from China emerges  |  high performance computing from Europe  |  ARM no longer as relevant <br> | <a href="https://twitter.com/ahl">@ahl</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=7080">1:58:00</a> |  web3 is done; we’re not talking about it, it’s not a thing, we don’t use the term and we only vaguely recall what it was supposed to mean.  |  Productivity per watt becomes a highly important metric in computing. Tools tell us about our power use. We spin workloads up and down depending on power cost and availability.  |  AWS offers RISC-V instance types. <br> | <a href="https://twitter.com/AaronDGoldman">@AaronDGoldman</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=4034">1:07:14</a> |  Single-node computing: people will realize that that distributed computing has a lot of overhead and that one server can do a lot of work. This will lead people to people doing business analytics jobs by pulling all their data to a single a computer and doing the calculation, getting the result 100x faster than splitting data over many computers.  |  Microservices inlining: taking a lot of microservices and statically linking them together. This will enable calling functions without network overhead, making things run 100x faster.  |  We will start do scaling properly. Instead of thinking “how can I make this big data and scale up to infinity”, we will try to get the most out of single node. Only once a single node has been pushed to its limit will we scale up to first a rack, then a datacenter, and then the world. <br> | <a href="https://twitter.com/dancrossnyc">@dancrossnyc</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=7270">2:01:10</a> |  Major workplace changes due to the pandemic will amplify and accentuate the wealth gap and disparity. Only some industries are privileged enough to be able to work from home. This will create social problems.  |  Regulation of social media in the aftermath of widespread political unrest, particularly after the US 2024 political season.  |  The effects of climate change will be sufficiently apparent that people will get serious about retooling around compute and power efficiency. <br> | <a href="https://twitter.com/iangrunert">@iangrunert</a><br> <a href="https://youtu.be/uZylf2gbg_E?t=3366">56:06</a> |  No one year prediction.  | CCPA copycat laws in other states, perhaps US federal legislation, plus changing global regulatory environment lead to GDPR-like protections to no longer be geo-fenced by bigger players. This’ll also have impacts on SaaS adoption - spreading data around makes right to amendment and right to deletion harder.  | RISC-V chip in mainstream phone (likely Samsung). Previously moving target, but longer upgrade times and slower pace of improvements will cause Samsung to chase RISC-V for high volume phones due to better unit economics. Will have prior experience in RISC-V fab for other applications. <br> |  Zach<br> <a href="https://youtu.be/uZylf2gbg_E?t=3590">59:50</a> |  Not much will happen in with tech industry anti-trust. Any bills in progress will be watered down.  |  Antitrust enforcement will have a chilling effect on acquisitions.  |  Section 230 of the Communications Decency Act lives. The ARM/NVidia merger will not go through, but it’ll will take 5 years to find out. </p><p>Didn’t make it to the Twitter Space, but have a vision of the future? Submit a PR to add your own predictions. Be sure to abide by <a href="https://twitter.com/bcantrill/status/1478150718879977475">the rules</a>. Deadline: 2/1/2022</p><p><strong> Futurist  1 year  3 year  6 year </strong><br> | <a href="https://twitter.com/dendibakh">@dendibakh</a><br> Prediction about optimizing compilers  |  We’ve reached the point of diminishing returns in existing LLVM optimization passes (&lt;3% headroom, which is hard to get).  |  Compilers not only help optimize code, which is what they traditionally do. Compiler developers shift their focus on how they can enable application developers to write more efficient SW, i.e. help them indirectly. For example, a recommendation system based on the database of “golden” code written by performance gurus.  |  Machines are capable of programming themselves. Humans just feed a (formal) description of an algorithm to a machine and it comes up with an optimal code tailored to this particular HW. Compilers play an essential role here. (This is more of a 10-year prediction) <br> |  You?  |  |  | </p><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 03 Jan 2022 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/658fab8d/624a2868.mp3" length="121273118" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>7577</itunes:duration>
      <itunes:summary>The Oxide and Friends revive an old Solaris Kernel Group tradition of making predictions, Adam and Bryan are joined by Redmonk's most famous Red Sox fan, Stephen O'Grady, to make 1, 3, and 6 year predictions. Kelsey Hightower stops to dispense some present and future wisdom.</itunes:summary>
      <itunes:subtitle>The Oxide and Friends revive an old Solaris Kernel Group tradition of making predictions, Adam and Bryan are joined by Redmonk's most famous Red Sox fan, Stephen O'Grady, to make 1, 3, and 6 year predictions. Kelsey Hightower stops to dispense some presen</itunes:subtitle>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Pragmatism of Hubris</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>26</itunes:episode>
      <podcast:episode>26</podcast:episode>
      <itunes:title>The Pragmatism of Hubris</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">6f4e0e3c-71e9-4f5c-ba7a-d11dcb2b64e2</guid>
      <link>https://share.transistor.fm/s/71eba55b</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: December 13th, 2021</b></p><p>The Pragmatism of Hubris</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/cypmufnPfLw">the recording for our Twitter Space for December 13th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on December 13th included special guests <a href="http://cliffle.com/about/">Cliff Biffle</a> and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a> as well as <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/raggi">James Tucker</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and <a href="https://twitter.com/MattSci2">MattSci</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Hubris and Humility context <a href="https://twitter.com/bcantrill/status/1470519954566832129">tweet</a>
</li>
<li>Cliff’s <a href="http://cliffle.com/blog/on-hubris-and-humility/">written version</a> of his Hubris talk</li>
<li>Hubris Fervently Anticipated Questions <a href="https://github.com/oxidecomputer/hubris/blob/master/FAQ.mkdn">FAQ</a>
</li>
<li>[@8:07](https://youtu.be/cypmufnPfLw?t=487) Prehistory of Hubris, Cliff’s story</li>
<li>Project Loon <a href="https://en.wikipedia.org/wiki/Loon_LLC">wiki</a>
</li>
<li>[@14:23](https://youtu.be/cypmufnPfLw?t=863) Did Cliff know what he wanted to build at Oxide?</li>
<li>
<a href="https://www.tockos.org/">Tock</a> embedded OS</li>
<li>
<a href="https://en.wikipedia.org/wiki/QNX">QNX</a> Unix-like real-time OS</li>
<li>[@17:55](https://youtu.be/cypmufnPfLw?t=1075) Laura on evaluating existing OS options</li>
<li>[@22:03](https://youtu.be/cypmufnPfLw?t=1323) Alignment of values and goals with other projects <ul><li>Bryan’s 2017 <em>Platform as a Reflection of Values</em> <a href="https://vimeo.com/230142234">video</a> ~30mins</li></ul>
</li>
<li>[@25:00](https://youtu.be/cypmufnPfLw?t=1500) Steve: convincing low-level people that they are allowed to have nice things</li>
<li>RISC-V ROPI/RWPI <a href="https://github.com/riscv/riscv-elf-psabi-doc/issues/128">Specification (Embedded PIC)</a><ul><li>Position-independent code <a href="https://en.wikipedia.org/wiki/Position-independent_code">wiki</a>
</li></ul>
</li>
<li>[@28:59](https://youtu.be/cypmufnPfLw?t=1739) Secure FPGAs?</li>
<li>Laura Abbott’s <em>Exploiting Undocumented Hardware Blocks in the LPC55S69</em> <a href="https://oxide.computer/blog/lpc55">write-up</a><ul><li>And DEF CON <a href="https://youtu.be/eKKgaGbcq4o">talk</a> with Rick Altherr</li></ul>
</li>
<li>[@32:20](https://youtu.be/cypmufnPfLw?t=1940) Early implementation, journal club</li>
<li>Jonathan Shapiro 2003 <em>Vulnerabilities in synchronous IPC designs</em> <a href="https://www.researchgate.net/publication/4015956_Vulnerabilities_in_synchronous_IPC_designs">paper</a>
</li>
<li>Heiser and Elphinstone’s <em>L4 Microkernels: The Lessons from 20 Years of Research and Deployment</em> <a href="https://scholar.google.com/scholar?oi=gsb90&amp;q=L4%20Microkernels%20%20The%20Lessons%20from%2020%20Years%20of%20Research%20and%20Deployment">paper</a>
</li>
<li>[@37:20](https://youtu.be/cypmufnPfLw?t=2240) Microkernels. <a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a><ul>
<li>L4 microkernel family <a href="https://en.wikipedia.org/wiki/L4_microkernel_family">wiki</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Jochen_Liedtke">Jochen Liedtke</a></li>
<li>Bryan decides not to go to graduate school</li>
<li>
<a href="https://en.wikipedia.org/wiki/Fuchsia_(operating_system)">Fuchsia</a> OS</li>
</ul>
</li>
<li>[@51:09](https://youtu.be/cypmufnPfLw?t=3069) Origin of Humility. Debugging <ul>
<li><a href="https://github.com/oxidecomputer/tockilator">Tockilator</a></li>
<li><a href="https://developer.arm.com/documentation/102440/0100/About-semihosting">Semihosting</a></li>
</ul>
</li>
<li>[@1:03:15](https://youtu.be/cypmufnPfLw?t=3795) Archive files, self-descriptive binaries, debugging</li>
<li>[@1:10:33](https://youtu.be/cypmufnPfLw?t=4233) <strong>CORRECTION</strong> Windows <em>does</em> have a package manager: <a href="https://en.m.wikipedia.org/wiki/Windows_Package_Manager">Windows Package Manager</a> was released May 13, 2020</li>
<li>[@1:14:15](https://youtu.be/cypmufnPfLw?t=4455) Build tools and build systems <ul><li><a href="https://github.com/matklad/cargo-xtask">cargo xtask</a></li></ul>
</li>
<li>[@1:18:59](https://youtu.be/cypmufnPfLw?t=4739) DWARF <ul><li>
<a href="https://en.wikipedia.org/wiki/Ada_(programming_language)">Ada</a> language</li></ul>
</li>
<li>[@1:25:01](https://youtu.be/cypmufnPfLw?t=5101) Tock: Rust kernel, C userspace <ul>
<li><a href="https://en.wikipedia.org/wiki/Interface_description_language">IDL</a></li>
<li><a href="https://en.wikipedia.org/wiki/Ozymandias">Ozymandias</a></li>
</ul>
</li>
<li>[@1:32:28](https://youtu.be/cypmufnPfLw?t=5548) <a href="https://doc.rust-lang.org/cargo/reference/build-scripts.html">build.rs</a> build scripts <ul>
<li>Simeon’s story, code generation</li>
<li>Software-hardware codesign</li>
<li>[@1:52:14](https://youtu.be/cypmufnPfLw?t=6734) <a href="https://en.wikipedia.org/wiki/Conway%27s_law">Conway’s law</a>
</li>
</ul>
</li>
<li>[@1:54:30](https://youtu.be/cypmufnPfLw?t=6870) Diagnosing problems, failing tasks, formatting error messages</li>
<li>Joe Rozner and Rick Altherr getting Hubris and Humility running on a STM32, <a href="https://twitter.com/jrozner/status/1466104059199324162">tweet</a> from Dec 1, and <a href="https://www.twitch.tv/videos/1220717732">video</a> ~2hrs</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: December 13th, 2021</b></p><p>The Pragmatism of Hubris</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/cypmufnPfLw">the recording for our Twitter Space for December 13th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on December 13th included special guests <a href="http://cliffle.com/about/">Cliff Biffle</a> and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a> as well as <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/raggi">James Tucker</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and <a href="https://twitter.com/MattSci2">MattSci</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Hubris and Humility context <a href="https://twitter.com/bcantrill/status/1470519954566832129">tweet</a>
</li>
<li>Cliff’s <a href="http://cliffle.com/blog/on-hubris-and-humility/">written version</a> of his Hubris talk</li>
<li>Hubris Fervently Anticipated Questions <a href="https://github.com/oxidecomputer/hubris/blob/master/FAQ.mkdn">FAQ</a>
</li>
<li>[@8:07](https://youtu.be/cypmufnPfLw?t=487) Prehistory of Hubris, Cliff’s story</li>
<li>Project Loon <a href="https://en.wikipedia.org/wiki/Loon_LLC">wiki</a>
</li>
<li>[@14:23](https://youtu.be/cypmufnPfLw?t=863) Did Cliff know what he wanted to build at Oxide?</li>
<li>
<a href="https://www.tockos.org/">Tock</a> embedded OS</li>
<li>
<a href="https://en.wikipedia.org/wiki/QNX">QNX</a> Unix-like real-time OS</li>
<li>[@17:55](https://youtu.be/cypmufnPfLw?t=1075) Laura on evaluating existing OS options</li>
<li>[@22:03](https://youtu.be/cypmufnPfLw?t=1323) Alignment of values and goals with other projects <ul><li>Bryan’s 2017 <em>Platform as a Reflection of Values</em> <a href="https://vimeo.com/230142234">video</a> ~30mins</li></ul>
</li>
<li>[@25:00](https://youtu.be/cypmufnPfLw?t=1500) Steve: convincing low-level people that they are allowed to have nice things</li>
<li>RISC-V ROPI/RWPI <a href="https://github.com/riscv/riscv-elf-psabi-doc/issues/128">Specification (Embedded PIC)</a><ul><li>Position-independent code <a href="https://en.wikipedia.org/wiki/Position-independent_code">wiki</a>
</li></ul>
</li>
<li>[@28:59](https://youtu.be/cypmufnPfLw?t=1739) Secure FPGAs?</li>
<li>Laura Abbott’s <em>Exploiting Undocumented Hardware Blocks in the LPC55S69</em> <a href="https://oxide.computer/blog/lpc55">write-up</a><ul><li>And DEF CON <a href="https://youtu.be/eKKgaGbcq4o">talk</a> with Rick Altherr</li></ul>
</li>
<li>[@32:20](https://youtu.be/cypmufnPfLw?t=1940) Early implementation, journal club</li>
<li>Jonathan Shapiro 2003 <em>Vulnerabilities in synchronous IPC designs</em> <a href="https://www.researchgate.net/publication/4015956_Vulnerabilities_in_synchronous_IPC_designs">paper</a>
</li>
<li>Heiser and Elphinstone’s <em>L4 Microkernels: The Lessons from 20 Years of Research and Deployment</em> <a href="https://scholar.google.com/scholar?oi=gsb90&amp;q=L4%20Microkernels%20%20The%20Lessons%20from%2020%20Years%20of%20Research%20and%20Deployment">paper</a>
</li>
<li>[@37:20](https://youtu.be/cypmufnPfLw?t=2240) Microkernels. <a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a><ul>
<li>L4 microkernel family <a href="https://en.wikipedia.org/wiki/L4_microkernel_family">wiki</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Jochen_Liedtke">Jochen Liedtke</a></li>
<li>Bryan decides not to go to graduate school</li>
<li>
<a href="https://en.wikipedia.org/wiki/Fuchsia_(operating_system)">Fuchsia</a> OS</li>
</ul>
</li>
<li>[@51:09](https://youtu.be/cypmufnPfLw?t=3069) Origin of Humility. Debugging <ul>
<li><a href="https://github.com/oxidecomputer/tockilator">Tockilator</a></li>
<li><a href="https://developer.arm.com/documentation/102440/0100/About-semihosting">Semihosting</a></li>
</ul>
</li>
<li>[@1:03:15](https://youtu.be/cypmufnPfLw?t=3795) Archive files, self-descriptive binaries, debugging</li>
<li>[@1:10:33](https://youtu.be/cypmufnPfLw?t=4233) <strong>CORRECTION</strong> Windows <em>does</em> have a package manager: <a href="https://en.m.wikipedia.org/wiki/Windows_Package_Manager">Windows Package Manager</a> was released May 13, 2020</li>
<li>[@1:14:15](https://youtu.be/cypmufnPfLw?t=4455) Build tools and build systems <ul><li><a href="https://github.com/matklad/cargo-xtask">cargo xtask</a></li></ul>
</li>
<li>[@1:18:59](https://youtu.be/cypmufnPfLw?t=4739) DWARF <ul><li>
<a href="https://en.wikipedia.org/wiki/Ada_(programming_language)">Ada</a> language</li></ul>
</li>
<li>[@1:25:01](https://youtu.be/cypmufnPfLw?t=5101) Tock: Rust kernel, C userspace <ul>
<li><a href="https://en.wikipedia.org/wiki/Interface_description_language">IDL</a></li>
<li><a href="https://en.wikipedia.org/wiki/Ozymandias">Ozymandias</a></li>
</ul>
</li>
<li>[@1:32:28](https://youtu.be/cypmufnPfLw?t=5548) <a href="https://doc.rust-lang.org/cargo/reference/build-scripts.html">build.rs</a> build scripts <ul>
<li>Simeon’s story, code generation</li>
<li>Software-hardware codesign</li>
<li>[@1:52:14](https://youtu.be/cypmufnPfLw?t=6734) <a href="https://en.wikipedia.org/wiki/Conway%27s_law">Conway’s law</a>
</li>
</ul>
</li>
<li>[@1:54:30](https://youtu.be/cypmufnPfLw?t=6870) Diagnosing problems, failing tasks, formatting error messages</li>
<li>Joe Rozner and Rick Altherr getting Hubris and Humility running on a STM32, <a href="https://twitter.com/jrozner/status/1466104059199324162">tweet</a> from Dec 1, and <a href="https://www.twitch.tv/videos/1220717732">video</a> ~2hrs</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 13 Dec 2021 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/71eba55b/cde5fc54.mp3" length="118707998" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>7419</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: December 13th, 2021</b></p><p>The Pragmatism of Hubris</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/cypmufnPfLw">the recording for our Twitter Space for December 13th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on December 13th included special guests <a href="http://cliffle.com/about/">Cliff Biffle</a> and <a href="https://twitter.com/steveklabnik">Steve Klabnik</a> as well as <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/raggi">James Tucker</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and <a href="https://twitter.com/MattSci2">MattSci</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Hubris and Humility context <a href="https://twitter.com/bcantrill/status/1470519954566832129">tweet</a>
</li>
<li>Cliff’s <a href="http://cliffle.com/blog/on-hubris-and-humility/">written version</a> of his Hubris talk</li>
<li>Hubris Fervently Anticipated Questions <a href="https://github.com/oxidecomputer/hubris/blob/master/FAQ.mkdn">FAQ</a>
</li>
<li>[@8:07](https://youtu.be/cypmufnPfLw?t=487) Prehistory of Hubris, Cliff’s story</li>
<li>Project Loon <a href="https://en.wikipedia.org/wiki/Loon_LLC">wiki</a>
</li>
<li>[@14:23](https://youtu.be/cypmufnPfLw?t=863) Did Cliff know what he wanted to build at Oxide?</li>
<li>
<a href="https://www.tockos.org/">Tock</a> embedded OS</li>
<li>
<a href="https://en.wikipedia.org/wiki/QNX">QNX</a> Unix-like real-time OS</li>
<li>[@17:55](https://youtu.be/cypmufnPfLw?t=1075) Laura on evaluating existing OS options</li>
<li>[@22:03](https://youtu.be/cypmufnPfLw?t=1323) Alignment of values and goals with other projects <ul><li>Bryan’s 2017 <em>Platform as a Reflection of Values</em> <a href="https://vimeo.com/230142234">video</a> ~30mins</li></ul>
</li>
<li>[@25:00](https://youtu.be/cypmufnPfLw?t=1500) Steve: convincing low-level people that they are allowed to have nice things</li>
<li>RISC-V ROPI/RWPI <a href="https://github.com/riscv/riscv-elf-psabi-doc/issues/128">Specification (Embedded PIC)</a><ul><li>Position-independent code <a href="https://en.wikipedia.org/wiki/Position-independent_code">wiki</a>
</li></ul>
</li>
<li>[@28:59](https://youtu.be/cypmufnPfLw?t=1739) Secure FPGAs?</li>
<li>Laura Abbott’s <em>Exploiting Undocumented Hardware Blocks in the LPC55S69</em> <a href="https://oxide.computer/blog/lpc55">write-up</a><ul><li>And DEF CON <a href="https://youtu.be/eKKgaGbcq4o">talk</a> with Rick Altherr</li></ul>
</li>
<li>[@32:20](https://youtu.be/cypmufnPfLw?t=1940) Early implementation, journal club</li>
<li>Jonathan Shapiro 2003 <em>Vulnerabilities in synchronous IPC designs</em> <a href="https://www.researchgate.net/publication/4015956_Vulnerabilities_in_synchronous_IPC_designs">paper</a>
</li>
<li>Heiser and Elphinstone’s <em>L4 Microkernels: The Lessons from 20 Years of Research and Deployment</em> <a href="https://scholar.google.com/scholar?oi=gsb90&amp;q=L4%20Microkernels%20%20The%20Lessons%20from%2020%20Years%20of%20Research%20and%20Deployment">paper</a>
</li>
<li>[@37:20](https://youtu.be/cypmufnPfLw?t=2240) Microkernels. <a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a><ul>
<li>L4 microkernel family <a href="https://en.wikipedia.org/wiki/L4_microkernel_family">wiki</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Jochen_Liedtke">Jochen Liedtke</a></li>
<li>Bryan decides not to go to graduate school</li>
<li>
<a href="https://en.wikipedia.org/wiki/Fuchsia_(operating_system)">Fuchsia</a> OS</li>
</ul>
</li>
<li>[@51:09](https://youtu.be/cypmufnPfLw?t=3069) Origin of Humility. Debugging <ul>
<li><a href="https://github.com/oxidecomputer/tockilator">Tockilator</a></li>
<li><a href="https://developer.arm.com/documentation/102440/0100/About-semihosting">Semihosting</a></li>
</ul>
</li>
<li>[@1:03:15](https://youtu.be/cypmufnPfLw?t=3795) Archive files, self-descriptive binaries, debugging</li>
<li>[@1:10:33](https://youtu.be/cypmufnPfLw?t=4233) <strong>CORRECTION</strong> Windows <em>does</em> have a package manager: <a href="https://en.m.wikipedia.org/wiki/Windows_Package_Manager">Windows Package Manager</a> was released May 13, 2020</li>
<li>[@1:14:15](https://youtu.be/cypmufnPfLw?t=4455) Build tools and build systems <ul><li><a href="https://github.com/matklad/cargo-xtask">cargo xtask</a></li></ul>
</li>
<li>[@1:18:59](https://youtu.be/cypmufnPfLw?t=4739) DWARF <ul><li>
<a href="https://en.wikipedia.org/wiki/Ada_(programming_language)">Ada</a> language</li></ul>
</li>
<li>[@1:25:01](https://youtu.be/cypmufnPfLw?t=5101) Tock: Rust kernel, C userspace <ul>
<li><a href="https://en.wikipedia.org/wiki/Interface_description_language">IDL</a></li>
<li><a href="https://en.wikipedia.org/wiki/Ozymandias">Ozymandias</a></li>
</ul>
</li>
<li>[@1:32:28](https://youtu.be/cypmufnPfLw?t=5548) <a href="https://doc.rust-lang.org/cargo/reference/build-scripts.html">build.rs</a> build scripts <ul>
<li>Simeon’s story, code generation</li>
<li>Software-hardware codesign</li>
<li>[@1:52:14](https://youtu.be/cypmufnPfLw?t=6734) <a href="https://en.wikipedia.org/wiki/Conway%27s_law">Conway’s law</a>
</li>
</ul>
</li>
<li>[@1:54:30](https://youtu.be/cypmufnPfLw?t=6870) Diagnosing problems, failing tasks, formatting error messages</li>
<li>Joe Rozner and Rick Altherr getting Hubris and Humility running on a STM32, <a href="https://twitter.com/jrozner/status/1466104059199324162">tweet</a> from Dec 1, and <a href="https://www.twitch.tv/videos/1220717732">video</a> ~2hrs</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Tales from the Bringup Lab</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>25</itunes:episode>
      <podcast:episode>25</podcast:episode>
      <itunes:title>Tales from the Bringup Lab</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">d78b5e1c-baa4-4b05-89f4-360344169fa4</guid>
      <link>https://share.transistor.fm/s/9ed140d2</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: December 6th, 2021</b></p><p>Tales from the Bringup Lab</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://www.youtube.com/watch?v=lhji-kP3Lhk">the recording for our Twitter Space for December 6th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on December 6th included special guests <a href="https://twitter.com/SyntheticGate">Nathanael Huffman</a>, <a href="https://twitter.com/random_enginerd">Eric Aasen</a>, as well as <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a> and <a href="https://twitter.com/sdtuck">Steve Tuck</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@5:57](https://youtu.be/lhji-kP3Lhk?t=357) Lay of the land</li>
<li>[@6:58](https://youtu.be/lhji-kP3Lhk?t=418) Power</li>
<li>[@11:14](https://youtu.be/lhji-kP3Lhk?t=674) Matt: what goes in the middle of the board?</li>
<li>[@14:32](https://youtu.be/lhji-kP3Lhk?t=872) <a href="https://en.wikipedia.org/wiki/ICE_(FPGA)#iCE40_(40_nm)">iCE40</a> FPGA</li>
<li>[@21:20](https://youtu.be/lhji-kP3Lhk?t=1280) Taking meticulous notes</li>
<li>[@25:41](https://youtu.be/lhji-kP3Lhk?t=1541) Power-on sequencing <ul>
<li>Using service processor flash to store FPGA bitstream</li>
<li>Solder rework</li>
<li><a href="https://doc.rust-lang.org/std/macro.include_bytes.html">include_bytes</a></li>
</ul>
</li>
<li>[@32:37](https://youtu.be/lhji-kP3Lhk?t=1957) “Zombie board” <ul>
<li>Flying probe <a href="https://youtu.be/AsIWzUaFu6I">video</a> ~2mins</li>
<li>Thermal cameras</li>
</ul>
</li>
<li>[@46:41](https://youtu.be/lhji-kP3Lhk?t=2801) Main chip power-on <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Level_shifter">Level shifters</a>, <a href="https://en.wikipedia.org/wiki/I%C2%B2C">I2C</a>
</li>
<li><a href="https://twitter.com/zachycakess/status/803981538526449664">Googly Eye of Sauron</a></li>
<li>[@55:24](https://youtu.be/lhji-kP3Lhk?t=3324) SPI wiggles (<a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface">Serial Peripheral Interface</a>) <ul><li>Precious cargo in a rented minivan</li></ul>
</li>
<li>[@1:02:00](https://youtu.be/lhji-kP3Lhk?t=3720) Value of record keeping</li>
<li>Power management</li>
</ul>
</li>
<li>[@1:09:49](https://youtu.be/lhji-kP3Lhk?t=3720) “Valley of despair”, infinite reset loop <ul>
<li><a href="https://en.wikipedia.org/wiki/Socket_SP3">SP3 socket</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Magnet_wire">Magnet wire</a> connecting to a pin, see <a href="https://twitter.com/random_enginerd/status/1468049401797091335">picture</a> with dime for scale &gt; Book on ENIAC quote: when things wouldn’t work, frustrated workers &gt; referred to the machine as the MANIAC.</li>
</ul>
</li>
<li>[@1:24:10](https://youtu.be/lhji-kP3Lhk?t=5050) Eric’s big breakthrough &gt; Boom! SPI wiggles</li>
<li>[@1:30:59](https://youtu.be/lhji-kP3Lhk?t=5459) “The next day we had a demo!” <ul>
<li>Yet another hurdle..</li>
<li><a href="https://en.wikipedia.org/wiki/Jump_wire">DuPont wire</a></li>
</ul>
</li>
<li>[@1:39:39](https://youtu.be/lhji-kP3Lhk?t=5979) “These are the stories that don’t get told..”</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: December 6th, 2021</b></p><p>Tales from the Bringup Lab</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://www.youtube.com/watch?v=lhji-kP3Lhk">the recording for our Twitter Space for December 6th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on December 6th included special guests <a href="https://twitter.com/SyntheticGate">Nathanael Huffman</a>, <a href="https://twitter.com/random_enginerd">Eric Aasen</a>, as well as <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a> and <a href="https://twitter.com/sdtuck">Steve Tuck</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@5:57](https://youtu.be/lhji-kP3Lhk?t=357) Lay of the land</li>
<li>[@6:58](https://youtu.be/lhji-kP3Lhk?t=418) Power</li>
<li>[@11:14](https://youtu.be/lhji-kP3Lhk?t=674) Matt: what goes in the middle of the board?</li>
<li>[@14:32](https://youtu.be/lhji-kP3Lhk?t=872) <a href="https://en.wikipedia.org/wiki/ICE_(FPGA)#iCE40_(40_nm)">iCE40</a> FPGA</li>
<li>[@21:20](https://youtu.be/lhji-kP3Lhk?t=1280) Taking meticulous notes</li>
<li>[@25:41](https://youtu.be/lhji-kP3Lhk?t=1541) Power-on sequencing <ul>
<li>Using service processor flash to store FPGA bitstream</li>
<li>Solder rework</li>
<li><a href="https://doc.rust-lang.org/std/macro.include_bytes.html">include_bytes</a></li>
</ul>
</li>
<li>[@32:37](https://youtu.be/lhji-kP3Lhk?t=1957) “Zombie board” <ul>
<li>Flying probe <a href="https://youtu.be/AsIWzUaFu6I">video</a> ~2mins</li>
<li>Thermal cameras</li>
</ul>
</li>
<li>[@46:41](https://youtu.be/lhji-kP3Lhk?t=2801) Main chip power-on <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Level_shifter">Level shifters</a>, <a href="https://en.wikipedia.org/wiki/I%C2%B2C">I2C</a>
</li>
<li><a href="https://twitter.com/zachycakess/status/803981538526449664">Googly Eye of Sauron</a></li>
<li>[@55:24](https://youtu.be/lhji-kP3Lhk?t=3324) SPI wiggles (<a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface">Serial Peripheral Interface</a>) <ul><li>Precious cargo in a rented minivan</li></ul>
</li>
<li>[@1:02:00](https://youtu.be/lhji-kP3Lhk?t=3720) Value of record keeping</li>
<li>Power management</li>
</ul>
</li>
<li>[@1:09:49](https://youtu.be/lhji-kP3Lhk?t=3720) “Valley of despair”, infinite reset loop <ul>
<li><a href="https://en.wikipedia.org/wiki/Socket_SP3">SP3 socket</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Magnet_wire">Magnet wire</a> connecting to a pin, see <a href="https://twitter.com/random_enginerd/status/1468049401797091335">picture</a> with dime for scale &gt; Book on ENIAC quote: when things wouldn’t work, frustrated workers &gt; referred to the machine as the MANIAC.</li>
</ul>
</li>
<li>[@1:24:10](https://youtu.be/lhji-kP3Lhk?t=5050) Eric’s big breakthrough &gt; Boom! SPI wiggles</li>
<li>[@1:30:59](https://youtu.be/lhji-kP3Lhk?t=5459) “The next day we had a demo!” <ul>
<li>Yet another hurdle..</li>
<li><a href="https://en.wikipedia.org/wiki/Jump_wire">DuPont wire</a></li>
</ul>
</li>
<li>[@1:39:39](https://youtu.be/lhji-kP3Lhk?t=5979) “These are the stories that don’t get told..”</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 06 Dec 2021 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/9ed140d2/a7f1dbb9.mp3" length="98319138" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>6144</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: December 6th, 2021</b></p><p>Tales from the Bringup Lab</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://www.youtube.com/watch?v=lhji-kP3Lhk">the recording for our Twitter Space for December 6th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on December 6th included special guests <a href="https://twitter.com/SyntheticGate">Nathanael Huffman</a>, <a href="https://twitter.com/random_enginerd">Eric Aasen</a>, as well as <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a> and <a href="https://twitter.com/sdtuck">Steve Tuck</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@5:57](https://youtu.be/lhji-kP3Lhk?t=357) Lay of the land</li>
<li>[@6:58](https://youtu.be/lhji-kP3Lhk?t=418) Power</li>
<li>[@11:14](https://youtu.be/lhji-kP3Lhk?t=674) Matt: what goes in the middle of the board?</li>
<li>[@14:32](https://youtu.be/lhji-kP3Lhk?t=872) <a href="https://en.wikipedia.org/wiki/ICE_(FPGA)#iCE40_(40_nm)">iCE40</a> FPGA</li>
<li>[@21:20](https://youtu.be/lhji-kP3Lhk?t=1280) Taking meticulous notes</li>
<li>[@25:41](https://youtu.be/lhji-kP3Lhk?t=1541) Power-on sequencing <ul>
<li>Using service processor flash to store FPGA bitstream</li>
<li>Solder rework</li>
<li><a href="https://doc.rust-lang.org/std/macro.include_bytes.html">include_bytes</a></li>
</ul>
</li>
<li>[@32:37](https://youtu.be/lhji-kP3Lhk?t=1957) “Zombie board” <ul>
<li>Flying probe <a href="https://youtu.be/AsIWzUaFu6I">video</a> ~2mins</li>
<li>Thermal cameras</li>
</ul>
</li>
<li>[@46:41](https://youtu.be/lhji-kP3Lhk?t=2801) Main chip power-on <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Level_shifter">Level shifters</a>, <a href="https://en.wikipedia.org/wiki/I%C2%B2C">I2C</a>
</li>
<li><a href="https://twitter.com/zachycakess/status/803981538526449664">Googly Eye of Sauron</a></li>
<li>[@55:24](https://youtu.be/lhji-kP3Lhk?t=3324) SPI wiggles (<a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface">Serial Peripheral Interface</a>) <ul><li>Precious cargo in a rented minivan</li></ul>
</li>
<li>[@1:02:00](https://youtu.be/lhji-kP3Lhk?t=3720) Value of record keeping</li>
<li>Power management</li>
</ul>
</li>
<li>[@1:09:49](https://youtu.be/lhji-kP3Lhk?t=3720) “Valley of despair”, infinite reset loop <ul>
<li><a href="https://en.wikipedia.org/wiki/Socket_SP3">SP3 socket</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Magnet_wire">Magnet wire</a> connecting to a pin, see <a href="https://twitter.com/random_enginerd/status/1468049401797091335">picture</a> with dime for scale &gt; Book on ENIAC quote: when things wouldn’t work, frustrated workers &gt; referred to the machine as the MANIAC.</li>
</ul>
</li>
<li>[@1:24:10](https://youtu.be/lhji-kP3Lhk?t=5050) Eric’s big breakthrough &gt; Boom! SPI wiggles</li>
<li>[@1:30:59](https://youtu.be/lhji-kP3Lhk?t=5459) “The next day we had a demo!” <ul>
<li>Yet another hurdle..</li>
<li><a href="https://en.wikipedia.org/wiki/Jump_wire">DuPont wire</a></li>
</ul>
</li>
<li>[@1:39:39](https://youtu.be/lhji-kP3Lhk?t=5979) “These are the stories that don’t get told..”</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Sidecar Switch</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>24</itunes:episode>
      <podcast:episode>24</podcast:episode>
      <itunes:title>The Sidecar Switch</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">bc0d25b5-107e-481b-8aee-bdd8c9b4ca40</guid>
      <link>https://share.transistor.fm/s/c80a79d8</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 29th, 2021</b></p><p>The Sidecar Switch</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/yl24yHlLRy0">the recording for our Twitter Space for November 29th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/arjenroodselaar">Arjen Roodselaar</a>; other speakers on November 29th included <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/tpw_rules">Thomas</a> and <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@3:04](https://youtu.be/yl24yHlLRy0?t=184) Arjen’s <a href="https://twitter.com/arjenroodselaar/status/1463370051679973377">announcement</a> about the rack switch</li>
<li>Cadence Allegro PCB <a href="https://www.cadence.com/en_US/home/tools/pcb-design-and-analysis/pcb-layout/allegro-pcb-designer.html">editor</a>
</li>
<li>[@11:35](https://youtu.be/yl24yHlLRy0?t=695) Should we do our own switch? <ul><li>“We’re just going to tweak existing designs…”</li></ul>
</li>
<li>Intel Tofino 2 <a href="https://www.intel.com/content/www/us/en/products/network-io/programmable-ethernet-switch/tofino-2-series.html">page</a><ul>
<li>Barefoot Networks <a href="https://en.wikipedia.org/wiki/Barefoot_Networks">wiki</a>
</li>
<li>P4 language <a href="https://en.wikipedia.org/wiki/P4_(programming_language)">wiki</a>
</li>
</ul>
</li>
<li>[@24:07](https://youtu.be/yl24yHlLRy0?t=1447) What makes this chip a beast?</li>
<li>[@33:24](https://youtu.be/yl24yHlLRy0?t=2004) Cable backplane, sleds</li>
<li>[@37:11](https://youtu.be/yl24yHlLRy0?t=2231) Sidecar</li>
<li>[@38:52](https://youtu.be/yl24yHlLRy0?t=2332) Management network (out of band) <ul><li>NC-SI network controller sideband interface <a href="https://en.wikipedia.org/wiki/NC-SI">wiki</a> &gt; Rick: A lot of the BMC style management functionality just &gt; kinda got tacked on to PC systems.</li></ul>
</li>
<li>[@48:36](https://youtu.be/yl24yHlLRy0?t=2916) SDN software-defined networking <a href="https://en.wikipedia.org/wiki/Software-defined_networking">wiki</a><ul>
<li>NCI National Computational Infrastructure (Australia) <a href="https://en.wikipedia.org/wiki/National_Computational_Infrastructure">wiki</a>
</li>
<li>Network function virtualization <a href="https://en.wikipedia.org/wiki/Network_function_virtualization">wiki</a>
</li>
</ul>
</li>
<li>[@55:12](https://youtu.be/yl24yHlLRy0?t=3312) The tofino simulator</li>
<li>[@59:51](https://youtu.be/yl24yHlLRy0?t=3591) Trust model, root of trust, service processor</li>
<li>[@1:02:31](https://youtu.be/yl24yHlLRy0?t=3751) Can the switch run independent of the PCIe host?</li>
<li>[@1:08:35](https://youtu.be/yl24yHlLRy0?t=4115) The journey. The time scale of these signaling components. Heat sinks and practice boards</li>
<li>Happy Hanukkah!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 29th, 2021</b></p><p>The Sidecar Switch</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/yl24yHlLRy0">the recording for our Twitter Space for November 29th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/arjenroodselaar">Arjen Roodselaar</a>; other speakers on November 29th included <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/tpw_rules">Thomas</a> and <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@3:04](https://youtu.be/yl24yHlLRy0?t=184) Arjen’s <a href="https://twitter.com/arjenroodselaar/status/1463370051679973377">announcement</a> about the rack switch</li>
<li>Cadence Allegro PCB <a href="https://www.cadence.com/en_US/home/tools/pcb-design-and-analysis/pcb-layout/allegro-pcb-designer.html">editor</a>
</li>
<li>[@11:35](https://youtu.be/yl24yHlLRy0?t=695) Should we do our own switch? <ul><li>“We’re just going to tweak existing designs…”</li></ul>
</li>
<li>Intel Tofino 2 <a href="https://www.intel.com/content/www/us/en/products/network-io/programmable-ethernet-switch/tofino-2-series.html">page</a><ul>
<li>Barefoot Networks <a href="https://en.wikipedia.org/wiki/Barefoot_Networks">wiki</a>
</li>
<li>P4 language <a href="https://en.wikipedia.org/wiki/P4_(programming_language)">wiki</a>
</li>
</ul>
</li>
<li>[@24:07](https://youtu.be/yl24yHlLRy0?t=1447) What makes this chip a beast?</li>
<li>[@33:24](https://youtu.be/yl24yHlLRy0?t=2004) Cable backplane, sleds</li>
<li>[@37:11](https://youtu.be/yl24yHlLRy0?t=2231) Sidecar</li>
<li>[@38:52](https://youtu.be/yl24yHlLRy0?t=2332) Management network (out of band) <ul><li>NC-SI network controller sideband interface <a href="https://en.wikipedia.org/wiki/NC-SI">wiki</a> &gt; Rick: A lot of the BMC style management functionality just &gt; kinda got tacked on to PC systems.</li></ul>
</li>
<li>[@48:36](https://youtu.be/yl24yHlLRy0?t=2916) SDN software-defined networking <a href="https://en.wikipedia.org/wiki/Software-defined_networking">wiki</a><ul>
<li>NCI National Computational Infrastructure (Australia) <a href="https://en.wikipedia.org/wiki/National_Computational_Infrastructure">wiki</a>
</li>
<li>Network function virtualization <a href="https://en.wikipedia.org/wiki/Network_function_virtualization">wiki</a>
</li>
</ul>
</li>
<li>[@55:12](https://youtu.be/yl24yHlLRy0?t=3312) The tofino simulator</li>
<li>[@59:51](https://youtu.be/yl24yHlLRy0?t=3591) Trust model, root of trust, service processor</li>
<li>[@1:02:31](https://youtu.be/yl24yHlLRy0?t=3751) Can the switch run independent of the PCIe host?</li>
<li>[@1:08:35](https://youtu.be/yl24yHlLRy0?t=4115) The journey. The time scale of these signaling components. Heat sinks and practice boards</li>
<li>Happy Hanukkah!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 29 Nov 2021 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/c80a79d8/fb45a279.mp3" length="71773970" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4485</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 29th, 2021</b></p><p>The Sidecar Switch</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/yl24yHlLRy0">the recording for our Twitter Space for November 29th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, our special guest was <a href="https://twitter.com/arjenroodselaar">Arjen Roodselaar</a>; other speakers on November 29th included <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/tpw_rules">Thomas</a> and <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@3:04](https://youtu.be/yl24yHlLRy0?t=184) Arjen’s <a href="https://twitter.com/arjenroodselaar/status/1463370051679973377">announcement</a> about the rack switch</li>
<li>Cadence Allegro PCB <a href="https://www.cadence.com/en_US/home/tools/pcb-design-and-analysis/pcb-layout/allegro-pcb-designer.html">editor</a>
</li>
<li>[@11:35](https://youtu.be/yl24yHlLRy0?t=695) Should we do our own switch? <ul><li>“We’re just going to tweak existing designs…”</li></ul>
</li>
<li>Intel Tofino 2 <a href="https://www.intel.com/content/www/us/en/products/network-io/programmable-ethernet-switch/tofino-2-series.html">page</a><ul>
<li>Barefoot Networks <a href="https://en.wikipedia.org/wiki/Barefoot_Networks">wiki</a>
</li>
<li>P4 language <a href="https://en.wikipedia.org/wiki/P4_(programming_language)">wiki</a>
</li>
</ul>
</li>
<li>[@24:07](https://youtu.be/yl24yHlLRy0?t=1447) What makes this chip a beast?</li>
<li>[@33:24](https://youtu.be/yl24yHlLRy0?t=2004) Cable backplane, sleds</li>
<li>[@37:11](https://youtu.be/yl24yHlLRy0?t=2231) Sidecar</li>
<li>[@38:52](https://youtu.be/yl24yHlLRy0?t=2332) Management network (out of band) <ul><li>NC-SI network controller sideband interface <a href="https://en.wikipedia.org/wiki/NC-SI">wiki</a> &gt; Rick: A lot of the BMC style management functionality just &gt; kinda got tacked on to PC systems.</li></ul>
</li>
<li>[@48:36](https://youtu.be/yl24yHlLRy0?t=2916) SDN software-defined networking <a href="https://en.wikipedia.org/wiki/Software-defined_networking">wiki</a><ul>
<li>NCI National Computational Infrastructure (Australia) <a href="https://en.wikipedia.org/wiki/National_Computational_Infrastructure">wiki</a>
</li>
<li>Network function virtualization <a href="https://en.wikipedia.org/wiki/Network_function_virtualization">wiki</a>
</li>
</ul>
</li>
<li>[@55:12](https://youtu.be/yl24yHlLRy0?t=3312) The tofino simulator</li>
<li>[@59:51](https://youtu.be/yl24yHlLRy0?t=3591) Trust model, root of trust, service processor</li>
<li>[@1:02:31](https://youtu.be/yl24yHlLRy0?t=3751) Can the switch run independent of the PCIe host?</li>
<li>[@1:08:35](https://youtu.be/yl24yHlLRy0?t=4115) The journey. The time scale of these signaling components. Heat sinks and practice boards</li>
<li>Happy Hanukkah!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Talking Turkeys</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>23</itunes:episode>
      <podcast:episode>23</podcast:episode>
      <itunes:title>Talking Turkeys</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">c3c296a0-9918-4815-8414-e36d7cc4adda</guid>
      <link>https://share.transistor.fm/s/4e36b81d</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 22nd, 2021</b></p><p>Talking Turkeys</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/U10SuAHV8kQ">the recording for our Twitter Space for November 22nd, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 22nd included <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/nahumshalman">Nahum Shalman</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/pgray__">pgray</a>, <a href="https://twitter.com/billblum">Bill Blum</a>, <a href="https://twitter.com/mranney">Matt Ranney</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/FesterCluck">FesterCluck</a>, <a href="https://twitter.com/rksio">Rahul Saxena</a> and <a href="https://twitter.com/Bartz_the_Man">Bartz the Man</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@4:26](https://youtu.be/U10SuAHV8kQ?t=266) Thanksgiving</li>
<li>[@6:13](https://youtu.be/U10SuAHV8kQ?t=373) David Tolnay <ul>
<li>
<a href="https://twitter.com/davidtolnay">twitter</a> and <a href="https://github.com/dtolnay">github</a>
</li>
<li>Projects <ul>
<li><a href="https://github.com/serde-rs/serde">Serde</a></li>
<li><a href="https://github.com/dtolnay/anyhow">Anyhow</a></li>
<li><a href="https://github.com/dtolnay/thiserror">thiserror</a></li>
</ul>
</li>
</ul>
</li>
<li>London hip hop musician <a href="https://www.google.com/search?q=loyle+carner">Loyle Carner</a>
</li>
<li>[@8:16](https://youtu.be/U10SuAHV8kQ?t=496) Adam is thankful for: <ul>
<li>
<a href="https://en.wikipedia.org/wiki/ANTLR">ANTLR</a> parser generator</li>
<li>
<a href="https://github.com/pest-parser/pest">pest</a><ul><li>
<a href="https://docs.rs/usdt/0.2.1/usdt/">usdt</a> DTrace probes</li></ul>
</li>
</ul>
</li>
<li>[@11:35](https://youtu.be/U10SuAHV8kQ?t=695) Bryan is thankful for: <ul>
<li>
<a href="https://doc.rust-lang.org/cargo/reference/build-scripts.html">build.rs</a> Rust build scripts</li>
<li>
<a href="https://www.saleae.com/">Saleae</a> logic analyzers</li>
</ul>
</li>
<li>[@16:33](https://youtu.be/U10SuAHV8kQ?t=993) Ian: <a href="https://en.wikipedia.org/wiki/YubiKey">YubiKey</a>
</li>
<li>[@19:09](https://youtu.be/U10SuAHV8kQ?t=1149) Matt Campbell: open source, Python accessibility Windows libraries from Chapel Hill</li>
<li>[@23:52](https://youtu.be/U10SuAHV8kQ?t=1432) FesterCluck: Nodejs</li>
<li>[@26:03](https://youtu.be/U10SuAHV8kQ?t=1563) Patrick: <a href="https://en.wikipedia.org/wiki/RabbitMQ">RabbitMQ</a>
</li>
<li>[@28:19](https://youtu.be/U10SuAHV8kQ?t=1699) Nahum: <a href="https://en.wikipedia.org/wiki/WireGuard">WireGuard</a> and <a href="https://tailscale.com/">Tailscale</a>
</li>
<li>[@32:04](https://youtu.be/U10SuAHV8kQ?t=1924) Jason: <a href="https://en.wikipedia.org/wiki/Truss_(Unix)">truss</a> by Roger Faulkner</li>
<li>[@37:37](https://youtu.be/U10SuAHV8kQ?t=2257) Rahul: <a href="https://tldp.org/">tldp.org</a> Linux documentation</li>
<li>[@42:11](https://youtu.be/U10SuAHV8kQ?t=2531) Simeon: <a href="https://en.wikipedia.org/wiki/Sigrok">sigrok</a>, <a href="https://sigrok.org/wiki/PulseView">PulseView</a>, <a href="https://github.com/dtolnay/anyhow">Anyhow</a>, <a href="https://github.com/dtolnay/thiserror">thiserror</a>
</li>
<li>[@44:35](https://github.com/dtolnay/thiserror) Adam: <a href="https://docs.qmk.fm/#/">QMK</a>, <a href="https://en.wikipedia.org/wiki/Magic_Lantern_(firmware)">Magic Lantern</a> by Trammell Hudson (<a href="https://twitter.com/qrs">twitter</a>)</li>
<li>[@47:36](https://youtu.be/U10SuAHV8kQ?t=2856) Matt: <a href="https://ebpf.io/">eBPF</a>, (<a href="https://en.wikipedia.org/wiki/Berkeley_Packet_Filter">wiki</a>)</li>
<li>[@54:59](https://youtu.be/U10SuAHV8kQ?t=3299) MattSci: <a href="https://en.wikipedia.org/wiki/CUDA">CUDA</a>, <a href="https://en.wikipedia.org/wiki/Ethernet">Ethernet</a><ul>
<li><a href="https://en.wikipedia.org/wiki/Global_Positioning_System">GPS</a></li>
<li>John Bloom (2016) <em>Eccentric Orbits</em> <a href="https://www.google.com/books/edition/Eccentric_Orbits/zAReCwAAQBAJ">book</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Differential_GPS">Differential GPS</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/BeiDou">BeiDou</a> Chinese satellites, <a href="https://en.wikipedia.org/wiki/GLONASS">GLONASS</a> Russian satellites, and <a href="https://en.wikipedia.org/wiki/Galileo_(satellite_navigation)">Galileo</a> European Union satellites</li>
</ul>
</li>
<li>[@1:09:20](https://youtu.be/U10SuAHV8kQ?t=4160) Bartz: <a href="https://en.wikipedia.org/wiki/Grep">grep</a>
</li>
<li>[@1:10:30](https://youtu.be/U10SuAHV8kQ?t=4230) Rick: <a href="https://en.wikipedia.org/wiki/Ghidra">Ghidra</a> reverse engineering tool <ul><li>Interactive Disassembler <a href="https://en.wikipedia.org/wiki/Interactive_Disassembler">IDA</a>
</li></ul>
</li>
<li>[@1:12:28](https://youtu.be/U10SuAHV8kQ?t=4348) Bill: Fastest Fourier Transform in the West <a href="https://en.wikipedia.org/wiki/FFTW">FFTW</a>, and <a href="https://en.wikipedia.org/wiki/Gnuplot">gnuplot</a> &gt; I’m thankful that everywhere I look there’s always something that hits my &gt; sense of wonder. That’s the thing I love about working in this industry.</li>
<li>Adam appreciates spreadsheets as tools for analysis</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 22nd, 2021</b></p><p>Talking Turkeys</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/U10SuAHV8kQ">the recording for our Twitter Space for November 22nd, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 22nd included <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/nahumshalman">Nahum Shalman</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/pgray__">pgray</a>, <a href="https://twitter.com/billblum">Bill Blum</a>, <a href="https://twitter.com/mranney">Matt Ranney</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/FesterCluck">FesterCluck</a>, <a href="https://twitter.com/rksio">Rahul Saxena</a> and <a href="https://twitter.com/Bartz_the_Man">Bartz the Man</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@4:26](https://youtu.be/U10SuAHV8kQ?t=266) Thanksgiving</li>
<li>[@6:13](https://youtu.be/U10SuAHV8kQ?t=373) David Tolnay <ul>
<li>
<a href="https://twitter.com/davidtolnay">twitter</a> and <a href="https://github.com/dtolnay">github</a>
</li>
<li>Projects <ul>
<li><a href="https://github.com/serde-rs/serde">Serde</a></li>
<li><a href="https://github.com/dtolnay/anyhow">Anyhow</a></li>
<li><a href="https://github.com/dtolnay/thiserror">thiserror</a></li>
</ul>
</li>
</ul>
</li>
<li>London hip hop musician <a href="https://www.google.com/search?q=loyle+carner">Loyle Carner</a>
</li>
<li>[@8:16](https://youtu.be/U10SuAHV8kQ?t=496) Adam is thankful for: <ul>
<li>
<a href="https://en.wikipedia.org/wiki/ANTLR">ANTLR</a> parser generator</li>
<li>
<a href="https://github.com/pest-parser/pest">pest</a><ul><li>
<a href="https://docs.rs/usdt/0.2.1/usdt/">usdt</a> DTrace probes</li></ul>
</li>
</ul>
</li>
<li>[@11:35](https://youtu.be/U10SuAHV8kQ?t=695) Bryan is thankful for: <ul>
<li>
<a href="https://doc.rust-lang.org/cargo/reference/build-scripts.html">build.rs</a> Rust build scripts</li>
<li>
<a href="https://www.saleae.com/">Saleae</a> logic analyzers</li>
</ul>
</li>
<li>[@16:33](https://youtu.be/U10SuAHV8kQ?t=993) Ian: <a href="https://en.wikipedia.org/wiki/YubiKey">YubiKey</a>
</li>
<li>[@19:09](https://youtu.be/U10SuAHV8kQ?t=1149) Matt Campbell: open source, Python accessibility Windows libraries from Chapel Hill</li>
<li>[@23:52](https://youtu.be/U10SuAHV8kQ?t=1432) FesterCluck: Nodejs</li>
<li>[@26:03](https://youtu.be/U10SuAHV8kQ?t=1563) Patrick: <a href="https://en.wikipedia.org/wiki/RabbitMQ">RabbitMQ</a>
</li>
<li>[@28:19](https://youtu.be/U10SuAHV8kQ?t=1699) Nahum: <a href="https://en.wikipedia.org/wiki/WireGuard">WireGuard</a> and <a href="https://tailscale.com/">Tailscale</a>
</li>
<li>[@32:04](https://youtu.be/U10SuAHV8kQ?t=1924) Jason: <a href="https://en.wikipedia.org/wiki/Truss_(Unix)">truss</a> by Roger Faulkner</li>
<li>[@37:37](https://youtu.be/U10SuAHV8kQ?t=2257) Rahul: <a href="https://tldp.org/">tldp.org</a> Linux documentation</li>
<li>[@42:11](https://youtu.be/U10SuAHV8kQ?t=2531) Simeon: <a href="https://en.wikipedia.org/wiki/Sigrok">sigrok</a>, <a href="https://sigrok.org/wiki/PulseView">PulseView</a>, <a href="https://github.com/dtolnay/anyhow">Anyhow</a>, <a href="https://github.com/dtolnay/thiserror">thiserror</a>
</li>
<li>[@44:35](https://github.com/dtolnay/thiserror) Adam: <a href="https://docs.qmk.fm/#/">QMK</a>, <a href="https://en.wikipedia.org/wiki/Magic_Lantern_(firmware)">Magic Lantern</a> by Trammell Hudson (<a href="https://twitter.com/qrs">twitter</a>)</li>
<li>[@47:36](https://youtu.be/U10SuAHV8kQ?t=2856) Matt: <a href="https://ebpf.io/">eBPF</a>, (<a href="https://en.wikipedia.org/wiki/Berkeley_Packet_Filter">wiki</a>)</li>
<li>[@54:59](https://youtu.be/U10SuAHV8kQ?t=3299) MattSci: <a href="https://en.wikipedia.org/wiki/CUDA">CUDA</a>, <a href="https://en.wikipedia.org/wiki/Ethernet">Ethernet</a><ul>
<li><a href="https://en.wikipedia.org/wiki/Global_Positioning_System">GPS</a></li>
<li>John Bloom (2016) <em>Eccentric Orbits</em> <a href="https://www.google.com/books/edition/Eccentric_Orbits/zAReCwAAQBAJ">book</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Differential_GPS">Differential GPS</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/BeiDou">BeiDou</a> Chinese satellites, <a href="https://en.wikipedia.org/wiki/GLONASS">GLONASS</a> Russian satellites, and <a href="https://en.wikipedia.org/wiki/Galileo_(satellite_navigation)">Galileo</a> European Union satellites</li>
</ul>
</li>
<li>[@1:09:20](https://youtu.be/U10SuAHV8kQ?t=4160) Bartz: <a href="https://en.wikipedia.org/wiki/Grep">grep</a>
</li>
<li>[@1:10:30](https://youtu.be/U10SuAHV8kQ?t=4230) Rick: <a href="https://en.wikipedia.org/wiki/Ghidra">Ghidra</a> reverse engineering tool <ul><li>Interactive Disassembler <a href="https://en.wikipedia.org/wiki/Interactive_Disassembler">IDA</a>
</li></ul>
</li>
<li>[@1:12:28](https://youtu.be/U10SuAHV8kQ?t=4348) Bill: Fastest Fourier Transform in the West <a href="https://en.wikipedia.org/wiki/FFTW">FFTW</a>, and <a href="https://en.wikipedia.org/wiki/Gnuplot">gnuplot</a> &gt; I’m thankful that everywhere I look there’s always something that hits my &gt; sense of wonder. That’s the thing I love about working in this industry.</li>
<li>Adam appreciates spreadsheets as tools for analysis</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 22 Nov 2021 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/4e36b81d/fe6398f1.mp3" length="75750668" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4734</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 22nd, 2021</b></p><p>Talking Turkeys</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/U10SuAHV8kQ">the recording for our Twitter Space for November 22nd, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 22nd included <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/nahumshalman">Nahum Shalman</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/pgray__">pgray</a>, <a href="https://twitter.com/billblum">Bill Blum</a>, <a href="https://twitter.com/mranney">Matt Ranney</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/FesterCluck">FesterCluck</a>, <a href="https://twitter.com/rksio">Rahul Saxena</a> and <a href="https://twitter.com/Bartz_the_Man">Bartz the Man</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@4:26](https://youtu.be/U10SuAHV8kQ?t=266) Thanksgiving</li>
<li>[@6:13](https://youtu.be/U10SuAHV8kQ?t=373) David Tolnay <ul>
<li>
<a href="https://twitter.com/davidtolnay">twitter</a> and <a href="https://github.com/dtolnay">github</a>
</li>
<li>Projects <ul>
<li><a href="https://github.com/serde-rs/serde">Serde</a></li>
<li><a href="https://github.com/dtolnay/anyhow">Anyhow</a></li>
<li><a href="https://github.com/dtolnay/thiserror">thiserror</a></li>
</ul>
</li>
</ul>
</li>
<li>London hip hop musician <a href="https://www.google.com/search?q=loyle+carner">Loyle Carner</a>
</li>
<li>[@8:16](https://youtu.be/U10SuAHV8kQ?t=496) Adam is thankful for: <ul>
<li>
<a href="https://en.wikipedia.org/wiki/ANTLR">ANTLR</a> parser generator</li>
<li>
<a href="https://github.com/pest-parser/pest">pest</a><ul><li>
<a href="https://docs.rs/usdt/0.2.1/usdt/">usdt</a> DTrace probes</li></ul>
</li>
</ul>
</li>
<li>[@11:35](https://youtu.be/U10SuAHV8kQ?t=695) Bryan is thankful for: <ul>
<li>
<a href="https://doc.rust-lang.org/cargo/reference/build-scripts.html">build.rs</a> Rust build scripts</li>
<li>
<a href="https://www.saleae.com/">Saleae</a> logic analyzers</li>
</ul>
</li>
<li>[@16:33](https://youtu.be/U10SuAHV8kQ?t=993) Ian: <a href="https://en.wikipedia.org/wiki/YubiKey">YubiKey</a>
</li>
<li>[@19:09](https://youtu.be/U10SuAHV8kQ?t=1149) Matt Campbell: open source, Python accessibility Windows libraries from Chapel Hill</li>
<li>[@23:52](https://youtu.be/U10SuAHV8kQ?t=1432) FesterCluck: Nodejs</li>
<li>[@26:03](https://youtu.be/U10SuAHV8kQ?t=1563) Patrick: <a href="https://en.wikipedia.org/wiki/RabbitMQ">RabbitMQ</a>
</li>
<li>[@28:19](https://youtu.be/U10SuAHV8kQ?t=1699) Nahum: <a href="https://en.wikipedia.org/wiki/WireGuard">WireGuard</a> and <a href="https://tailscale.com/">Tailscale</a>
</li>
<li>[@32:04](https://youtu.be/U10SuAHV8kQ?t=1924) Jason: <a href="https://en.wikipedia.org/wiki/Truss_(Unix)">truss</a> by Roger Faulkner</li>
<li>[@37:37](https://youtu.be/U10SuAHV8kQ?t=2257) Rahul: <a href="https://tldp.org/">tldp.org</a> Linux documentation</li>
<li>[@42:11](https://youtu.be/U10SuAHV8kQ?t=2531) Simeon: <a href="https://en.wikipedia.org/wiki/Sigrok">sigrok</a>, <a href="https://sigrok.org/wiki/PulseView">PulseView</a>, <a href="https://github.com/dtolnay/anyhow">Anyhow</a>, <a href="https://github.com/dtolnay/thiserror">thiserror</a>
</li>
<li>[@44:35](https://github.com/dtolnay/thiserror) Adam: <a href="https://docs.qmk.fm/#/">QMK</a>, <a href="https://en.wikipedia.org/wiki/Magic_Lantern_(firmware)">Magic Lantern</a> by Trammell Hudson (<a href="https://twitter.com/qrs">twitter</a>)</li>
<li>[@47:36](https://youtu.be/U10SuAHV8kQ?t=2856) Matt: <a href="https://ebpf.io/">eBPF</a>, (<a href="https://en.wikipedia.org/wiki/Berkeley_Packet_Filter">wiki</a>)</li>
<li>[@54:59](https://youtu.be/U10SuAHV8kQ?t=3299) MattSci: <a href="https://en.wikipedia.org/wiki/CUDA">CUDA</a>, <a href="https://en.wikipedia.org/wiki/Ethernet">Ethernet</a><ul>
<li><a href="https://en.wikipedia.org/wiki/Global_Positioning_System">GPS</a></li>
<li>John Bloom (2016) <em>Eccentric Orbits</em> <a href="https://www.google.com/books/edition/Eccentric_Orbits/zAReCwAAQBAJ">book</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Differential_GPS">Differential GPS</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/BeiDou">BeiDou</a> Chinese satellites, <a href="https://en.wikipedia.org/wiki/GLONASS">GLONASS</a> Russian satellites, and <a href="https://en.wikipedia.org/wiki/Galileo_(satellite_navigation)">Galileo</a> European Union satellites</li>
</ul>
</li>
<li>[@1:09:20](https://youtu.be/U10SuAHV8kQ?t=4160) Bartz: <a href="https://en.wikipedia.org/wiki/Grep">grep</a>
</li>
<li>[@1:10:30](https://youtu.be/U10SuAHV8kQ?t=4230) Rick: <a href="https://en.wikipedia.org/wiki/Ghidra">Ghidra</a> reverse engineering tool <ul><li>Interactive Disassembler <a href="https://en.wikipedia.org/wiki/Interactive_Disassembler">IDA</a>
</li></ul>
</li>
<li>[@1:12:28](https://youtu.be/U10SuAHV8kQ?t=4348) Bill: Fastest Fourier Transform in the West <a href="https://en.wikipedia.org/wiki/FFTW">FFTW</a>, and <a href="https://en.wikipedia.org/wiki/Gnuplot">gnuplot</a> &gt; I’m thankful that everywhere I look there’s always something that hits my &gt; sense of wonder. That’s the thing I love about working in this industry.</li>
<li>Adam appreciates spreadsheets as tools for analysis</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Wrath of Kahn</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>22</itunes:episode>
      <podcast:episode>22</podcast:episode>
      <itunes:title>The Wrath of Kahn</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">20fd562f-6504-44fe-b3d2-91a942c57039</guid>
      <link>https://share.transistor.fm/s/efad0849</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 15th, 2021</b></p><p>The Wrath of Kahn</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/oft5i5RzIC8">the recording for our Twitter Space for November 15th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 15th included <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/mattrudel">Mat Trudel</a>, <a href="https://twitter.com/gabeinformatics">Gabe Rudy</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and <a href="https://twitter.com/bcharder">bch</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Severo Ornstein (2002) <em>Computing in the Middle Ages: A View from the Trenches 1955-1983</em> <a href="https://www.google.com/books/edition/Computing_in_the_Middle_Ages/4THavgEACAAJ">book</a><ul>
<li>
<a href="https://en.wikipedia.org/wiki/TX-2">TX-2</a> computer in 1958</li>
<li>
<a href="https://en.wikipedia.org/wiki/LINC">LINC</a> Laboratory INstrument Computer in 1962</li>
<li><a href="https://en.wikipedia.org/wiki/Wesley_A._Clark">Wesley Clark</a></li>
<li><a href="https://en.wikipedia.org/wiki/Interface_Message_Processor">IMP</a></li>
</ul>
</li>
<li>[@6:21](https://youtu.be/oft5i5RzIC8?t=381) Quote on paternity of <a href="https://en.wikipedia.org/wiki/ARPANET">ARPANET</a> and the Internet</li>
<li>[@7:51](https://youtu.be/oft5i5RzIC8?t=471) Bryan meets Knuth… briefly <ul><li><a href="https://en.wikipedia.org/wiki/Symbolic_Optimal_Assembly_Program">SOAP</a></li></ul>
</li>
<li>[@20:00](https://youtu.be/oft5i5RzIC8?t=1200) Quote from <a href="http://archive.computerhistory.org/resources/text/Oral_History/Taylor_Robert/102702015.05.01.acc.pdf">oral history of Bob Taylor</a> (2008)</li>
<li>[@21:37](https://youtu.be/oft5i5RzIC8?t=1297) Dan meets Knuth?</li>
<li>[@25:23](https://youtu.be/oft5i5RzIC8?t=1523) The lone inventor</li>
<li>[@26:40](https://youtu.be/oft5i5RzIC8?t=1600) The patent race with Alexander Graham Bell and Elisha Gray (<a href="https://en.wikipedia.org/wiki/Elisha_Gray_and_Alexander_Bell_telephone_controversy">wiki</a>) <ul><li>“Inventor” of email</li></ul>
</li>
<li>[@30:49](https://youtu.be/oft5i5RzIC8?t=1849) Fathering and parenting (pioneers and settlers)</li>
<li>Any lone inventors?</li>
<li>Credit where credit is due. Teams as more than the sum of the parts. <ul><li>Turing Awards</li></ul>
</li>
<li>[@35:49](https://youtu.be/oft5i5RzIC8?t=2149) Science papers, teams</li>
<li>[@37:14](https://youtu.be/oft5i5RzIC8?t=2234) Andy van Dam (<a href="https://en.wikipedia.org/wiki/Andries_van_Dam">wiki</a>) <ul>
<li>“Hypertext ’87 Keynote” <a href="https://cs.brown.edu/memex/HT_87_Keynote_Address.html">address</a>
</li>
<li>“Reflections on a Half Century of Hypertext” (2019) ~100mins <a href="https://youtu.be/g0yx-F1FGnc">presentation</a>
</li>
</ul>
</li>
<li>Ron Minnich (On the Metal <a href="https://oxide.computer/podcasts/ron-minnich">podcast</a>)</li>
<li>[@39:11](https://youtu.be/oft5i5RzIC8?t=2351) <a href="https://en.wikipedia.org/wiki/Dennis_H._Klatt">Dennis Klatt</a> and <a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a><ul><li>DECtalk DTC01 used a 68000 and a TI 32010 DSP; DECtalk DTC03 used a 80186 and the same TI 32010. <a href="https://github.com/mamedev/mame/blob/master/src/mame/drivers/dectalk.cpp#L159">mame</a>
</li></ul>
</li>
<li>Doug Engelbart (<a href="https://en.wikipedia.org/wiki/Douglas_Engelbart">wiki</a>)</li>
<li>[@44:37](https://youtu.be/oft5i5RzIC8?t=2677) Who’s going to lead the charge? <ul>
<li>Michael Stonebraker (<a href="https://en.wikipedia.org/wiki/Michael_Stonebraker">wiki</a>)</li>
<li>Seeing things through</li>
</ul>
</li>
<li>[@49:23](https://youtu.be/oft5i5RzIC8?t=2963) bch: communications and crediting</li>
<li>[@50:53](https://youtu.be/oft5i5RzIC8?t=3053) DTrace, ZFS</li>
<li>[@53:15](https://youtu.be/oft5i5RzIC8?t=3195) Mat: The Dream Machine <ul>
<li>M. Mitchell Waldrop (2001) “The Dream Machine: JCR Licklider and the Revolution that Made Computing Personal” <a href="https://www.google.com/books/edition/The_Dream_Machine/Qoc_AQAAIAAJ">book</a>
</li>
<li>DARPA, private public research funding</li>
</ul>
</li>
<li>[@56:57](https://youtu.be/oft5i5RzIC8?t=3417) The hero narrative sells well</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 15th, 2021</b></p><p>The Wrath of Kahn</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/oft5i5RzIC8">the recording for our Twitter Space for November 15th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 15th included <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/mattrudel">Mat Trudel</a>, <a href="https://twitter.com/gabeinformatics">Gabe Rudy</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and <a href="https://twitter.com/bcharder">bch</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Severo Ornstein (2002) <em>Computing in the Middle Ages: A View from the Trenches 1955-1983</em> <a href="https://www.google.com/books/edition/Computing_in_the_Middle_Ages/4THavgEACAAJ">book</a><ul>
<li>
<a href="https://en.wikipedia.org/wiki/TX-2">TX-2</a> computer in 1958</li>
<li>
<a href="https://en.wikipedia.org/wiki/LINC">LINC</a> Laboratory INstrument Computer in 1962</li>
<li><a href="https://en.wikipedia.org/wiki/Wesley_A._Clark">Wesley Clark</a></li>
<li><a href="https://en.wikipedia.org/wiki/Interface_Message_Processor">IMP</a></li>
</ul>
</li>
<li>[@6:21](https://youtu.be/oft5i5RzIC8?t=381) Quote on paternity of <a href="https://en.wikipedia.org/wiki/ARPANET">ARPANET</a> and the Internet</li>
<li>[@7:51](https://youtu.be/oft5i5RzIC8?t=471) Bryan meets Knuth… briefly <ul><li><a href="https://en.wikipedia.org/wiki/Symbolic_Optimal_Assembly_Program">SOAP</a></li></ul>
</li>
<li>[@20:00](https://youtu.be/oft5i5RzIC8?t=1200) Quote from <a href="http://archive.computerhistory.org/resources/text/Oral_History/Taylor_Robert/102702015.05.01.acc.pdf">oral history of Bob Taylor</a> (2008)</li>
<li>[@21:37](https://youtu.be/oft5i5RzIC8?t=1297) Dan meets Knuth?</li>
<li>[@25:23](https://youtu.be/oft5i5RzIC8?t=1523) The lone inventor</li>
<li>[@26:40](https://youtu.be/oft5i5RzIC8?t=1600) The patent race with Alexander Graham Bell and Elisha Gray (<a href="https://en.wikipedia.org/wiki/Elisha_Gray_and_Alexander_Bell_telephone_controversy">wiki</a>) <ul><li>“Inventor” of email</li></ul>
</li>
<li>[@30:49](https://youtu.be/oft5i5RzIC8?t=1849) Fathering and parenting (pioneers and settlers)</li>
<li>Any lone inventors?</li>
<li>Credit where credit is due. Teams as more than the sum of the parts. <ul><li>Turing Awards</li></ul>
</li>
<li>[@35:49](https://youtu.be/oft5i5RzIC8?t=2149) Science papers, teams</li>
<li>[@37:14](https://youtu.be/oft5i5RzIC8?t=2234) Andy van Dam (<a href="https://en.wikipedia.org/wiki/Andries_van_Dam">wiki</a>) <ul>
<li>“Hypertext ’87 Keynote” <a href="https://cs.brown.edu/memex/HT_87_Keynote_Address.html">address</a>
</li>
<li>“Reflections on a Half Century of Hypertext” (2019) ~100mins <a href="https://youtu.be/g0yx-F1FGnc">presentation</a>
</li>
</ul>
</li>
<li>Ron Minnich (On the Metal <a href="https://oxide.computer/podcasts/ron-minnich">podcast</a>)</li>
<li>[@39:11](https://youtu.be/oft5i5RzIC8?t=2351) <a href="https://en.wikipedia.org/wiki/Dennis_H._Klatt">Dennis Klatt</a> and <a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a><ul><li>DECtalk DTC01 used a 68000 and a TI 32010 DSP; DECtalk DTC03 used a 80186 and the same TI 32010. <a href="https://github.com/mamedev/mame/blob/master/src/mame/drivers/dectalk.cpp#L159">mame</a>
</li></ul>
</li>
<li>Doug Engelbart (<a href="https://en.wikipedia.org/wiki/Douglas_Engelbart">wiki</a>)</li>
<li>[@44:37](https://youtu.be/oft5i5RzIC8?t=2677) Who’s going to lead the charge? <ul>
<li>Michael Stonebraker (<a href="https://en.wikipedia.org/wiki/Michael_Stonebraker">wiki</a>)</li>
<li>Seeing things through</li>
</ul>
</li>
<li>[@49:23](https://youtu.be/oft5i5RzIC8?t=2963) bch: communications and crediting</li>
<li>[@50:53](https://youtu.be/oft5i5RzIC8?t=3053) DTrace, ZFS</li>
<li>[@53:15](https://youtu.be/oft5i5RzIC8?t=3195) Mat: The Dream Machine <ul>
<li>M. Mitchell Waldrop (2001) “The Dream Machine: JCR Licklider and the Revolution that Made Computing Personal” <a href="https://www.google.com/books/edition/The_Dream_Machine/Qoc_AQAAIAAJ">book</a>
</li>
<li>DARPA, private public research funding</li>
</ul>
</li>
<li>[@56:57](https://youtu.be/oft5i5RzIC8?t=3417) The hero narrative sells well</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 15 Nov 2021 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/efad0849/4ce15514.mp3" length="56859408" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3553</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 15th, 2021</b></p><p>The Wrath of Kahn</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/oft5i5RzIC8">the recording for our Twitter Space for November 15th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 15th included <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/mattrudel">Mat Trudel</a>, <a href="https://twitter.com/gabeinformatics">Gabe Rudy</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and <a href="https://twitter.com/bcharder">bch</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Severo Ornstein (2002) <em>Computing in the Middle Ages: A View from the Trenches 1955-1983</em> <a href="https://www.google.com/books/edition/Computing_in_the_Middle_Ages/4THavgEACAAJ">book</a><ul>
<li>
<a href="https://en.wikipedia.org/wiki/TX-2">TX-2</a> computer in 1958</li>
<li>
<a href="https://en.wikipedia.org/wiki/LINC">LINC</a> Laboratory INstrument Computer in 1962</li>
<li><a href="https://en.wikipedia.org/wiki/Wesley_A._Clark">Wesley Clark</a></li>
<li><a href="https://en.wikipedia.org/wiki/Interface_Message_Processor">IMP</a></li>
</ul>
</li>
<li>[@6:21](https://youtu.be/oft5i5RzIC8?t=381) Quote on paternity of <a href="https://en.wikipedia.org/wiki/ARPANET">ARPANET</a> and the Internet</li>
<li>[@7:51](https://youtu.be/oft5i5RzIC8?t=471) Bryan meets Knuth… briefly <ul><li><a href="https://en.wikipedia.org/wiki/Symbolic_Optimal_Assembly_Program">SOAP</a></li></ul>
</li>
<li>[@20:00](https://youtu.be/oft5i5RzIC8?t=1200) Quote from <a href="http://archive.computerhistory.org/resources/text/Oral_History/Taylor_Robert/102702015.05.01.acc.pdf">oral history of Bob Taylor</a> (2008)</li>
<li>[@21:37](https://youtu.be/oft5i5RzIC8?t=1297) Dan meets Knuth?</li>
<li>[@25:23](https://youtu.be/oft5i5RzIC8?t=1523) The lone inventor</li>
<li>[@26:40](https://youtu.be/oft5i5RzIC8?t=1600) The patent race with Alexander Graham Bell and Elisha Gray (<a href="https://en.wikipedia.org/wiki/Elisha_Gray_and_Alexander_Bell_telephone_controversy">wiki</a>) <ul><li>“Inventor” of email</li></ul>
</li>
<li>[@30:49](https://youtu.be/oft5i5RzIC8?t=1849) Fathering and parenting (pioneers and settlers)</li>
<li>Any lone inventors?</li>
<li>Credit where credit is due. Teams as more than the sum of the parts. <ul><li>Turing Awards</li></ul>
</li>
<li>[@35:49](https://youtu.be/oft5i5RzIC8?t=2149) Science papers, teams</li>
<li>[@37:14](https://youtu.be/oft5i5RzIC8?t=2234) Andy van Dam (<a href="https://en.wikipedia.org/wiki/Andries_van_Dam">wiki</a>) <ul>
<li>“Hypertext ’87 Keynote” <a href="https://cs.brown.edu/memex/HT_87_Keynote_Address.html">address</a>
</li>
<li>“Reflections on a Half Century of Hypertext” (2019) ~100mins <a href="https://youtu.be/g0yx-F1FGnc">presentation</a>
</li>
</ul>
</li>
<li>Ron Minnich (On the Metal <a href="https://oxide.computer/podcasts/ron-minnich">podcast</a>)</li>
<li>[@39:11](https://youtu.be/oft5i5RzIC8?t=2351) <a href="https://en.wikipedia.org/wiki/Dennis_H._Klatt">Dennis Klatt</a> and <a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a><ul><li>DECtalk DTC01 used a 68000 and a TI 32010 DSP; DECtalk DTC03 used a 80186 and the same TI 32010. <a href="https://github.com/mamedev/mame/blob/master/src/mame/drivers/dectalk.cpp#L159">mame</a>
</li></ul>
</li>
<li>Doug Engelbart (<a href="https://en.wikipedia.org/wiki/Douglas_Engelbart">wiki</a>)</li>
<li>[@44:37](https://youtu.be/oft5i5RzIC8?t=2677) Who’s going to lead the charge? <ul>
<li>Michael Stonebraker (<a href="https://en.wikipedia.org/wiki/Michael_Stonebraker">wiki</a>)</li>
<li>Seeing things through</li>
</ul>
</li>
<li>[@49:23](https://youtu.be/oft5i5RzIC8?t=2963) bch: communications and crediting</li>
<li>[@50:53](https://youtu.be/oft5i5RzIC8?t=3053) DTrace, ZFS</li>
<li>[@53:15](https://youtu.be/oft5i5RzIC8?t=3195) Mat: The Dream Machine <ul>
<li>M. Mitchell Waldrop (2001) “The Dream Machine: JCR Licklider and the Revolution that Made Computing Personal” <a href="https://www.google.com/books/edition/The_Dream_Machine/Qoc_AQAAIAAJ">book</a>
</li>
<li>DARPA, private public research funding</li>
</ul>
</li>
<li>[@56:57](https://youtu.be/oft5i5RzIC8?t=3417) The hero narrative sells well</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Supercomputers, Cray, and How Sun Picked SGI's Pocket</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>21</itunes:episode>
      <podcast:episode>21</podcast:episode>
      <itunes:title>Supercomputers, Cray, and How Sun Picked SGI's Pocket</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">76e44f2c-fef5-44a0-9db9-28b86614890b</guid>
      <link>https://share.transistor.fm/s/21f16511</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 8th, 2021</b></p><p>Supercomputers, Cray, and How Sun Picked SGI’s Pocket</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/y07PyBrrzMw">the recording for our Twitter Space for November 8th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 8th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/ShahinKhan">Shahin Khan</a>, <a href="https://twitter.com/darryl_ramm">Darryl Ramm</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/courtneymalone">Courtney Malone</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, and <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Bryan’s <a href="https://twitter.com/bcantrill/status/1457838757671944196">tweet</a> about George Brown’s recommending “The Supermen”</li>
<li>Charles Murray (1997) “The Supermen: The story of Seymour Cray and the Technical Wizards Behind the Supercomputer” <a href="https://www.google.com/books/edition/The_Supermen/AKrbAAAAMAAJ">book</a>
</li>
<li>[@1:28](https://youtu.be/y07PyBrrzMw?t=88) Tom’s story meeting Boris <ul>
<li>Tom’s <a href="https://twitter.com/aka_pugs/status/1457873358784106504">tweet</a> on meeting <a href="https://en.wikipedia.org/wiki/Boris_Babayan">Boris Babayan</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Elbrus_(computer)">Elbrus</a> computers</li>
</ul>
</li>
<li>[@9:27](https://youtu.be/y07PyBrrzMw?t=567) Supercomputers and power</li>
<li>[@15:16](https://youtu.be/y07PyBrrzMw?t=916) Cray designs <ul>
<li>Engineering Research Associates <a href="https://en.wikipedia.org/wiki/Engineering_Research_Associates">wiki</a>
</li>
<li>Control Data Corporation <a href="https://en.wikipedia.org/wiki/Control_Data_Corporation">wiki</a>, <a href="https://en.wikipedia.org/wiki/CDC_1604">CDC 1604</a>
</li>
</ul>
</li>
<li>[@20:36](https://youtu.be/y07PyBrrzMw?t=1236) ETA Systems <a href="https://en.wikipedia.org/wiki/ETA_Systems">wiki</a>
</li>
<li>[@23:57](https://youtu.be/y07PyBrrzMw?t=1437) On to the next big thing <ul>
<li><a href="https://en.wikipedia.org/wiki/Steve_Chen_(computer_engineer)">Steve Chen</a></li>
<li><a href="https://en.wikipedia.org/wiki/Cray_X-MP">Cray X-MP</a></li>
</ul>
</li>
<li>[@29:37](https://youtu.be/y07PyBrrzMw?t=1777) Super computers as one-offs <ul>
<li>National Computational Infrastructure in Australia, <a href="https://en.wikipedia.org/wiki/National_Computational_Infrastructure">NCI</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Gallium_arsenide">Gallium arsenide</a></li>
<li><a href="https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units">GPGPU</a></li>
</ul>
</li>
<li>[@33:47](https://youtu.be/y07PyBrrzMw?t=2027) Shahin on interconnects <ul>
<li>Jason on failure caused by a storm</li>
<li><a href="https://en.wikipedia.org/wiki/Cray_C90">Cray C90</a></li>
</ul>
</li>
<li>[@41:06](https://youtu.be/y07PyBrrzMw?t=2466) Courtney on bespoke toolchains and systems</li>
<li>[@42:42](https://youtu.be/y07PyBrrzMw?t=2562) Influence of Cray on Sun <ul>
<li>1996 Sun to purchase Cray Business Systems Division, <a href="https://www.hpcwire.com/1996/05/17/sun-intends-to-purchase-crays-business-systems-division/">hpcwire</a>
</li>
<li>Floating Point Systems Inc <a href="https://en.wikipedia.org/wiki/Floating_Point_Systems">wiki</a> &gt; Shahin: <a href="https://en.wikipedia.org/wiki/Silicon_Graphics">SGI</a> really had no use for this system. They should have just killed it.</li>
</ul>
</li>
<li>[@50:10](https://youtu.be/y07PyBrrzMw?t=3010) Origin story of DTrace (2006 <a href="https://queue.acm.org/detail.cfm?id=1117401">article</a>) <ul><li><a href="https://en.wikipedia.org/wiki/Sun_Enterprise#Enterprise_10000">E10k</a></li></ul>
</li>
<li>[@56:14](https://youtu.be/y07PyBrrzMw?t=3374) Thinking Machines Corp, <a href="https://en.wikipedia.org/wiki/Thinking_Machines_Corporation">wiki</a>
</li>
<li>[@57:36](https://youtu.be/y07PyBrrzMw?t=3456) Seymour Cray <ul>
<li>Les Davis “The ultimate team player” <a href="https://www.designnews.com/automation-motion-control/ultimate-team-player">write up</a>
</li>
<li>2010 Oral history of Les Davis <a href="http://archive.computerhistory.org/resources/access/text/2012/04/102657915-05-01-acc.pdf">pdf</a>
</li>
</ul>
</li>
<li>[@1:00:08](https://youtu.be/y07PyBrrzMw?t=3608) Business Systems Division history, long road to Starfire</li>
<li>[@1:04:20](https://youtu.be/y07PyBrrzMw?t=3860) SGI and Sun early history <ul><li>Non-uniform memory access <a href="https://en.wikipedia.org/wiki/Non-uniform_memory_access">NUMA</a>
</li></ul>
</li>
<li>[@1:10:40](https://youtu.be/y07PyBrrzMw?t=4240) Cray <a href="https://en.wikipedia.org/wiki/Cray_T3E">T3E</a><ul><li>Massively parallel <a href="https://en.wikipedia.org/wiki/Massively_parallel">MPP</a>
</li></ul>
</li>
<li>[@1:12:33](https://youtu.be/y07PyBrrzMw?t=4353) E10k stories <ul><li>boo.com <a href="https://en.wikipedia.org/wiki/Boo.com">wiki</a>
</li></ul>
</li>
<li>[@1:18:37](https://youtu.be/y07PyBrrzMw?t=4717) Cray, spooks, pop count</li>
<li>[@1:20:45](https://youtu.be/y07PyBrrzMw?t=4845) Chen <ul>
<li>Cray <a href="https://en.wikipedia.org/wiki/Cray_X-MP">X-MP</a> and <a href="https://en.wikipedia.org/wiki/Cray_Y-MP">Y-MP</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Sequent_Computer_Systems">Sequent</a></li>
</ul>
</li>
<li>[@1:24:04](https://youtu.be/y07PyBrrzMw?t=5044) An engineer sees his defunct machine being scrapped</li>
<li>[@1:26:27](https://youtu.be/y07PyBrrzMw?t=5187) Jason’s story of capacitors popping off the board <ul><li>The <a href="https://en.wikipedia.org/wiki/Capacitor_plague">Capacitor plague</a>
</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 8th, 2021</b></p><p>Supercomputers, Cray, and How Sun Picked SGI’s Pocket</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/y07PyBrrzMw">the recording for our Twitter Space for November 8th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 8th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/ShahinKhan">Shahin Khan</a>, <a href="https://twitter.com/darryl_ramm">Darryl Ramm</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/courtneymalone">Courtney Malone</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, and <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Bryan’s <a href="https://twitter.com/bcantrill/status/1457838757671944196">tweet</a> about George Brown’s recommending “The Supermen”</li>
<li>Charles Murray (1997) “The Supermen: The story of Seymour Cray and the Technical Wizards Behind the Supercomputer” <a href="https://www.google.com/books/edition/The_Supermen/AKrbAAAAMAAJ">book</a>
</li>
<li>[@1:28](https://youtu.be/y07PyBrrzMw?t=88) Tom’s story meeting Boris <ul>
<li>Tom’s <a href="https://twitter.com/aka_pugs/status/1457873358784106504">tweet</a> on meeting <a href="https://en.wikipedia.org/wiki/Boris_Babayan">Boris Babayan</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Elbrus_(computer)">Elbrus</a> computers</li>
</ul>
</li>
<li>[@9:27](https://youtu.be/y07PyBrrzMw?t=567) Supercomputers and power</li>
<li>[@15:16](https://youtu.be/y07PyBrrzMw?t=916) Cray designs <ul>
<li>Engineering Research Associates <a href="https://en.wikipedia.org/wiki/Engineering_Research_Associates">wiki</a>
</li>
<li>Control Data Corporation <a href="https://en.wikipedia.org/wiki/Control_Data_Corporation">wiki</a>, <a href="https://en.wikipedia.org/wiki/CDC_1604">CDC 1604</a>
</li>
</ul>
</li>
<li>[@20:36](https://youtu.be/y07PyBrrzMw?t=1236) ETA Systems <a href="https://en.wikipedia.org/wiki/ETA_Systems">wiki</a>
</li>
<li>[@23:57](https://youtu.be/y07PyBrrzMw?t=1437) On to the next big thing <ul>
<li><a href="https://en.wikipedia.org/wiki/Steve_Chen_(computer_engineer)">Steve Chen</a></li>
<li><a href="https://en.wikipedia.org/wiki/Cray_X-MP">Cray X-MP</a></li>
</ul>
</li>
<li>[@29:37](https://youtu.be/y07PyBrrzMw?t=1777) Super computers as one-offs <ul>
<li>National Computational Infrastructure in Australia, <a href="https://en.wikipedia.org/wiki/National_Computational_Infrastructure">NCI</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Gallium_arsenide">Gallium arsenide</a></li>
<li><a href="https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units">GPGPU</a></li>
</ul>
</li>
<li>[@33:47](https://youtu.be/y07PyBrrzMw?t=2027) Shahin on interconnects <ul>
<li>Jason on failure caused by a storm</li>
<li><a href="https://en.wikipedia.org/wiki/Cray_C90">Cray C90</a></li>
</ul>
</li>
<li>[@41:06](https://youtu.be/y07PyBrrzMw?t=2466) Courtney on bespoke toolchains and systems</li>
<li>[@42:42](https://youtu.be/y07PyBrrzMw?t=2562) Influence of Cray on Sun <ul>
<li>1996 Sun to purchase Cray Business Systems Division, <a href="https://www.hpcwire.com/1996/05/17/sun-intends-to-purchase-crays-business-systems-division/">hpcwire</a>
</li>
<li>Floating Point Systems Inc <a href="https://en.wikipedia.org/wiki/Floating_Point_Systems">wiki</a> &gt; Shahin: <a href="https://en.wikipedia.org/wiki/Silicon_Graphics">SGI</a> really had no use for this system. They should have just killed it.</li>
</ul>
</li>
<li>[@50:10](https://youtu.be/y07PyBrrzMw?t=3010) Origin story of DTrace (2006 <a href="https://queue.acm.org/detail.cfm?id=1117401">article</a>) <ul><li><a href="https://en.wikipedia.org/wiki/Sun_Enterprise#Enterprise_10000">E10k</a></li></ul>
</li>
<li>[@56:14](https://youtu.be/y07PyBrrzMw?t=3374) Thinking Machines Corp, <a href="https://en.wikipedia.org/wiki/Thinking_Machines_Corporation">wiki</a>
</li>
<li>[@57:36](https://youtu.be/y07PyBrrzMw?t=3456) Seymour Cray <ul>
<li>Les Davis “The ultimate team player” <a href="https://www.designnews.com/automation-motion-control/ultimate-team-player">write up</a>
</li>
<li>2010 Oral history of Les Davis <a href="http://archive.computerhistory.org/resources/access/text/2012/04/102657915-05-01-acc.pdf">pdf</a>
</li>
</ul>
</li>
<li>[@1:00:08](https://youtu.be/y07PyBrrzMw?t=3608) Business Systems Division history, long road to Starfire</li>
<li>[@1:04:20](https://youtu.be/y07PyBrrzMw?t=3860) SGI and Sun early history <ul><li>Non-uniform memory access <a href="https://en.wikipedia.org/wiki/Non-uniform_memory_access">NUMA</a>
</li></ul>
</li>
<li>[@1:10:40](https://youtu.be/y07PyBrrzMw?t=4240) Cray <a href="https://en.wikipedia.org/wiki/Cray_T3E">T3E</a><ul><li>Massively parallel <a href="https://en.wikipedia.org/wiki/Massively_parallel">MPP</a>
</li></ul>
</li>
<li>[@1:12:33](https://youtu.be/y07PyBrrzMw?t=4353) E10k stories <ul><li>boo.com <a href="https://en.wikipedia.org/wiki/Boo.com">wiki</a>
</li></ul>
</li>
<li>[@1:18:37](https://youtu.be/y07PyBrrzMw?t=4717) Cray, spooks, pop count</li>
<li>[@1:20:45](https://youtu.be/y07PyBrrzMw?t=4845) Chen <ul>
<li>Cray <a href="https://en.wikipedia.org/wiki/Cray_X-MP">X-MP</a> and <a href="https://en.wikipedia.org/wiki/Cray_Y-MP">Y-MP</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Sequent_Computer_Systems">Sequent</a></li>
</ul>
</li>
<li>[@1:24:04](https://youtu.be/y07PyBrrzMw?t=5044) An engineer sees his defunct machine being scrapped</li>
<li>[@1:26:27](https://youtu.be/y07PyBrrzMw?t=5187) Jason’s story of capacitors popping off the board <ul><li>The <a href="https://en.wikipedia.org/wiki/Capacitor_plague">Capacitor plague</a>
</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 08 Nov 2021 17:00:00 -0800</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/21f16511/50a873e5.mp3" length="87917400" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5494</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 8th, 2021</b></p><p>Supercomputers, Cray, and How Sun Picked SGI’s Pocket</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/y07PyBrrzMw">the recording for our Twitter Space for November 8th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 8th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/ShahinKhan">Shahin Khan</a>, <a href="https://twitter.com/darryl_ramm">Darryl Ramm</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/courtneymalone">Courtney Malone</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, and <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Bryan’s <a href="https://twitter.com/bcantrill/status/1457838757671944196">tweet</a> about George Brown’s recommending “The Supermen”</li>
<li>Charles Murray (1997) “The Supermen: The story of Seymour Cray and the Technical Wizards Behind the Supercomputer” <a href="https://www.google.com/books/edition/The_Supermen/AKrbAAAAMAAJ">book</a>
</li>
<li>[@1:28](https://youtu.be/y07PyBrrzMw?t=88) Tom’s story meeting Boris <ul>
<li>Tom’s <a href="https://twitter.com/aka_pugs/status/1457873358784106504">tweet</a> on meeting <a href="https://en.wikipedia.org/wiki/Boris_Babayan">Boris Babayan</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Elbrus_(computer)">Elbrus</a> computers</li>
</ul>
</li>
<li>[@9:27](https://youtu.be/y07PyBrrzMw?t=567) Supercomputers and power</li>
<li>[@15:16](https://youtu.be/y07PyBrrzMw?t=916) Cray designs <ul>
<li>Engineering Research Associates <a href="https://en.wikipedia.org/wiki/Engineering_Research_Associates">wiki</a>
</li>
<li>Control Data Corporation <a href="https://en.wikipedia.org/wiki/Control_Data_Corporation">wiki</a>, <a href="https://en.wikipedia.org/wiki/CDC_1604">CDC 1604</a>
</li>
</ul>
</li>
<li>[@20:36](https://youtu.be/y07PyBrrzMw?t=1236) ETA Systems <a href="https://en.wikipedia.org/wiki/ETA_Systems">wiki</a>
</li>
<li>[@23:57](https://youtu.be/y07PyBrrzMw?t=1437) On to the next big thing <ul>
<li><a href="https://en.wikipedia.org/wiki/Steve_Chen_(computer_engineer)">Steve Chen</a></li>
<li><a href="https://en.wikipedia.org/wiki/Cray_X-MP">Cray X-MP</a></li>
</ul>
</li>
<li>[@29:37](https://youtu.be/y07PyBrrzMw?t=1777) Super computers as one-offs <ul>
<li>National Computational Infrastructure in Australia, <a href="https://en.wikipedia.org/wiki/National_Computational_Infrastructure">NCI</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Gallium_arsenide">Gallium arsenide</a></li>
<li><a href="https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units">GPGPU</a></li>
</ul>
</li>
<li>[@33:47](https://youtu.be/y07PyBrrzMw?t=2027) Shahin on interconnects <ul>
<li>Jason on failure caused by a storm</li>
<li><a href="https://en.wikipedia.org/wiki/Cray_C90">Cray C90</a></li>
</ul>
</li>
<li>[@41:06](https://youtu.be/y07PyBrrzMw?t=2466) Courtney on bespoke toolchains and systems</li>
<li>[@42:42](https://youtu.be/y07PyBrrzMw?t=2562) Influence of Cray on Sun <ul>
<li>1996 Sun to purchase Cray Business Systems Division, <a href="https://www.hpcwire.com/1996/05/17/sun-intends-to-purchase-crays-business-systems-division/">hpcwire</a>
</li>
<li>Floating Point Systems Inc <a href="https://en.wikipedia.org/wiki/Floating_Point_Systems">wiki</a> &gt; Shahin: <a href="https://en.wikipedia.org/wiki/Silicon_Graphics">SGI</a> really had no use for this system. They should have just killed it.</li>
</ul>
</li>
<li>[@50:10](https://youtu.be/y07PyBrrzMw?t=3010) Origin story of DTrace (2006 <a href="https://queue.acm.org/detail.cfm?id=1117401">article</a>) <ul><li><a href="https://en.wikipedia.org/wiki/Sun_Enterprise#Enterprise_10000">E10k</a></li></ul>
</li>
<li>[@56:14](https://youtu.be/y07PyBrrzMw?t=3374) Thinking Machines Corp, <a href="https://en.wikipedia.org/wiki/Thinking_Machines_Corporation">wiki</a>
</li>
<li>[@57:36](https://youtu.be/y07PyBrrzMw?t=3456) Seymour Cray <ul>
<li>Les Davis “The ultimate team player” <a href="https://www.designnews.com/automation-motion-control/ultimate-team-player">write up</a>
</li>
<li>2010 Oral history of Les Davis <a href="http://archive.computerhistory.org/resources/access/text/2012/04/102657915-05-01-acc.pdf">pdf</a>
</li>
</ul>
</li>
<li>[@1:00:08](https://youtu.be/y07PyBrrzMw?t=3608) Business Systems Division history, long road to Starfire</li>
<li>[@1:04:20](https://youtu.be/y07PyBrrzMw?t=3860) SGI and Sun early history <ul><li>Non-uniform memory access <a href="https://en.wikipedia.org/wiki/Non-uniform_memory_access">NUMA</a>
</li></ul>
</li>
<li>[@1:10:40](https://youtu.be/y07PyBrrzMw?t=4240) Cray <a href="https://en.wikipedia.org/wiki/Cray_T3E">T3E</a><ul><li>Massively parallel <a href="https://en.wikipedia.org/wiki/Massively_parallel">MPP</a>
</li></ul>
</li>
<li>[@1:12:33](https://youtu.be/y07PyBrrzMw?t=4353) E10k stories <ul><li>boo.com <a href="https://en.wikipedia.org/wiki/Boo.com">wiki</a>
</li></ul>
</li>
<li>[@1:18:37](https://youtu.be/y07PyBrrzMw?t=4717) Cray, spooks, pop count</li>
<li>[@1:20:45](https://youtu.be/y07PyBrrzMw?t=4845) Chen <ul>
<li>Cray <a href="https://en.wikipedia.org/wiki/Cray_X-MP">X-MP</a> and <a href="https://en.wikipedia.org/wiki/Cray_Y-MP">Y-MP</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Sequent_Computer_Systems">Sequent</a></li>
</ul>
</li>
<li>[@1:24:04](https://youtu.be/y07PyBrrzMw?t=5044) An engineer sees his defunct machine being scrapped</li>
<li>[@1:26:27](https://youtu.be/y07PyBrrzMw?t=5187) Jason’s story of capacitors popping off the board <ul><li>The <a href="https://en.wikipedia.org/wiki/Capacitor_plague">Capacitor plague</a>
</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>On Code Review</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>20</itunes:episode>
      <podcast:episode>20</podcast:episode>
      <itunes:title>On Code Review</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">8ad4d6d0-c0cf-4393-9432-bd50ad11875e</guid>
      <link>https://share.transistor.fm/s/9a011c9c</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 1st, 2021</b></p><p>On Code Review</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/JZdXDyeSvtc">the recording for our Twitter Space for November 1st, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 1st included <a href="https://twitter.com/kendallmorgan">Kendall Morgan</a>, <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/rzezeski">Ryan Zezeski</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/hoeflich_joshua">Joshua Hoeflich</a>, <a href="https://twitter.com/zkmiyavi">ZK Miyavi</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/sherron_nick">Nick Sherron</a> and <a href="https://twitter.com/AustinWise">Austin Wise</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Context <a href="https://twitter.com/bcantrill/status/1455294426226462723">tweet</a>
</li>
<li>Kendall Morgan (2021) “Thoughts on Code Review” <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/">essay</a>
</li>
<li>[@3:57](https://youtu.be/JZdXDyeSvtc?t=237) Adam’s story, first code review at Sun</li>
<li>[@6:32](https://youtu.be/JZdXDyeSvtc?t=392) Choosing a reviewer</li>
<li>[@9:43](https://youtu.be/JZdXDyeSvtc?t=583) Unblocking others. Empathy in feedback. Asking questions, learning.</li>
<li>[@15:43](https://youtu.be/JZdXDyeSvtc?t=943) Bryan reviewing Jeff Bonwick’s code at Sun <ul>
<li>Odd working hours</li>
<li>Screaming Red Chairs</li>
</ul>
</li>
<li>[@19:47](https://youtu.be/JZdXDyeSvtc?t=1187) In-person code review vs digitized. Tools</li>
<li>[@24:29](https://youtu.be/JZdXDyeSvtc?t=1469) Not just finding bugs. <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/#darins-law-cover-your-ass">Darin’s Law</a>
</li>
<li>[@25:59](https://youtu.be/JZdXDyeSvtc?t=1559) Adam’s story around a bug in a big diff, tracepoints in the kernel</li>
<li>[@32:28](https://youtu.be/JZdXDyeSvtc?t=1948) Adam’s favorite useless code review comment <ul>
<li>Marginally useful changes, what to do with multiple good alternatives</li>
<li>Matters of style and taste &gt; Joe Kowalski: Is there a problem with this code, or is it not &gt; implemented the way you would implement it?</li>
</ul>
</li>
<li>[@38:41](https://youtu.be/JZdXDyeSvtc?t=2321) Ian on tools. Different languages, mediums. <a href="https://www.loom.com/">loom</a> for short video messages</li>
<li>[@44:37](https://youtu.be/JZdXDyeSvtc?t=2677) Tools designed for specific tasks. <ul>
<li><a href="https://en.wikipedia.org/wiki/Gerrit_(software)">Gerrit</a></li>
<li>Code review policies</li>
</ul>
</li>
<li>[@49:31](https://youtu.be/JZdXDyeSvtc?t=2971) Jason’s story about HPE project with SCSI bug. Patch submitted to kernel group</li>
<li>[@54:59](https://youtu.be/JZdXDyeSvtc?t=3299) Bryan’s story about an n^3 algorithm in SCSI target code</li>
<li>[@56:55](https://youtu.be/JZdXDyeSvtc?t=3415) Rust compiler, resource awareness, error paths <ul>
<li>Often more modular than C code</li>
<li>
<a href="https://rust-analyzer.github.io/">rust-analyzer</a>, seeing inferred types</li>
</ul>
</li>
<li>[@1:01:15](https://youtu.be/JZdXDyeSvtc?t=3675) Joshua’s experience with in-person reviews, whiteboarding <ul>
<li>Working arm-in-arm with people</li>
<li>Sourcegraph Dev Tool Time <a href="https://youtube.com/playlist?list=PL6zLuuRVa1_iDEP4EicZ8972RgyccCRGF">videos</a>
</li>
</ul>
</li>
<li>[@1:05:21](https://youtu.be/JZdXDyeSvtc?t=3921) How do you scale quality code review in bigger teams? <ul><li>Culture of code review at a company</li></ul>
</li>
<li>[@1:07:15](https://youtu.be/JZdXDyeSvtc?t=4035) How to convince your team of the value of code review? <ul>
<li>Review can catch bugs</li>
<li>Cross team knowledge, bus factor</li>
<li>Speed in the short term vs speed in the long term</li>
</ul>
</li>
<li>[@1:14:39](https://youtu.be/JZdXDyeSvtc?t=4479) Ian on cultivating organizational review practices</li>
<li>[@1:16:32](https://youtu.be/JZdXDyeSvtc?t=4592) Austin’s story on assuaging management fears around new practices <ul>
<li>Joshua: communication, writing, and accountability</li>
<li>What code don’t we review?</li>
</ul>
</li>
<li>Code review as quality check</li>
<li>[@1:23:55](https://youtu.be/JZdXDyeSvtc?t=5035) Engineering product quality, not always obviously of benefit to the business <ul><li>Skipping code reviews to show quality consequences</li></ul>
</li>
<li>Adopting code review practices, incrementally</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 1st, 2021</b></p><p>On Code Review</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/JZdXDyeSvtc">the recording for our Twitter Space for November 1st, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 1st included <a href="https://twitter.com/kendallmorgan">Kendall Morgan</a>, <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/rzezeski">Ryan Zezeski</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/hoeflich_joshua">Joshua Hoeflich</a>, <a href="https://twitter.com/zkmiyavi">ZK Miyavi</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/sherron_nick">Nick Sherron</a> and <a href="https://twitter.com/AustinWise">Austin Wise</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Context <a href="https://twitter.com/bcantrill/status/1455294426226462723">tweet</a>
</li>
<li>Kendall Morgan (2021) “Thoughts on Code Review” <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/">essay</a>
</li>
<li>[@3:57](https://youtu.be/JZdXDyeSvtc?t=237) Adam’s story, first code review at Sun</li>
<li>[@6:32](https://youtu.be/JZdXDyeSvtc?t=392) Choosing a reviewer</li>
<li>[@9:43](https://youtu.be/JZdXDyeSvtc?t=583) Unblocking others. Empathy in feedback. Asking questions, learning.</li>
<li>[@15:43](https://youtu.be/JZdXDyeSvtc?t=943) Bryan reviewing Jeff Bonwick’s code at Sun <ul>
<li>Odd working hours</li>
<li>Screaming Red Chairs</li>
</ul>
</li>
<li>[@19:47](https://youtu.be/JZdXDyeSvtc?t=1187) In-person code review vs digitized. Tools</li>
<li>[@24:29](https://youtu.be/JZdXDyeSvtc?t=1469) Not just finding bugs. <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/#darins-law-cover-your-ass">Darin’s Law</a>
</li>
<li>[@25:59](https://youtu.be/JZdXDyeSvtc?t=1559) Adam’s story around a bug in a big diff, tracepoints in the kernel</li>
<li>[@32:28](https://youtu.be/JZdXDyeSvtc?t=1948) Adam’s favorite useless code review comment <ul>
<li>Marginally useful changes, what to do with multiple good alternatives</li>
<li>Matters of style and taste &gt; Joe Kowalski: Is there a problem with this code, or is it not &gt; implemented the way you would implement it?</li>
</ul>
</li>
<li>[@38:41](https://youtu.be/JZdXDyeSvtc?t=2321) Ian on tools. Different languages, mediums. <a href="https://www.loom.com/">loom</a> for short video messages</li>
<li>[@44:37](https://youtu.be/JZdXDyeSvtc?t=2677) Tools designed for specific tasks. <ul>
<li><a href="https://en.wikipedia.org/wiki/Gerrit_(software)">Gerrit</a></li>
<li>Code review policies</li>
</ul>
</li>
<li>[@49:31](https://youtu.be/JZdXDyeSvtc?t=2971) Jason’s story about HPE project with SCSI bug. Patch submitted to kernel group</li>
<li>[@54:59](https://youtu.be/JZdXDyeSvtc?t=3299) Bryan’s story about an n^3 algorithm in SCSI target code</li>
<li>[@56:55](https://youtu.be/JZdXDyeSvtc?t=3415) Rust compiler, resource awareness, error paths <ul>
<li>Often more modular than C code</li>
<li>
<a href="https://rust-analyzer.github.io/">rust-analyzer</a>, seeing inferred types</li>
</ul>
</li>
<li>[@1:01:15](https://youtu.be/JZdXDyeSvtc?t=3675) Joshua’s experience with in-person reviews, whiteboarding <ul>
<li>Working arm-in-arm with people</li>
<li>Sourcegraph Dev Tool Time <a href="https://youtube.com/playlist?list=PL6zLuuRVa1_iDEP4EicZ8972RgyccCRGF">videos</a>
</li>
</ul>
</li>
<li>[@1:05:21](https://youtu.be/JZdXDyeSvtc?t=3921) How do you scale quality code review in bigger teams? <ul><li>Culture of code review at a company</li></ul>
</li>
<li>[@1:07:15](https://youtu.be/JZdXDyeSvtc?t=4035) How to convince your team of the value of code review? <ul>
<li>Review can catch bugs</li>
<li>Cross team knowledge, bus factor</li>
<li>Speed in the short term vs speed in the long term</li>
</ul>
</li>
<li>[@1:14:39](https://youtu.be/JZdXDyeSvtc?t=4479) Ian on cultivating organizational review practices</li>
<li>[@1:16:32](https://youtu.be/JZdXDyeSvtc?t=4592) Austin’s story on assuaging management fears around new practices <ul>
<li>Joshua: communication, writing, and accountability</li>
<li>What code don’t we review?</li>
</ul>
</li>
<li>Code review as quality check</li>
<li>[@1:23:55](https://youtu.be/JZdXDyeSvtc?t=5035) Engineering product quality, not always obviously of benefit to the business <ul><li>Skipping code reviews to show quality consequences</li></ul>
</li>
<li>Adopting code review practices, incrementally</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 01 Nov 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/9a011c9c/0d514c3b.mp3" length="87264522" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5454</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: November 1st, 2021</b></p><p>On Code Review</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/JZdXDyeSvtc">the recording for our Twitter Space for November 1st, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on November 1st included <a href="https://twitter.com/kendallmorgan">Kendall Morgan</a>, <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/rzezeski">Ryan Zezeski</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/hoeflich_joshua">Joshua Hoeflich</a>, <a href="https://twitter.com/zkmiyavi">ZK Miyavi</a>, <a href="https://twitter.com/JasonOzolins">Jason Ozolins</a>, <a href="https://twitter.com/sherron_nick">Nick Sherron</a> and <a href="https://twitter.com/AustinWise">Austin Wise</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Context <a href="https://twitter.com/bcantrill/status/1455294426226462723">tweet</a>
</li>
<li>Kendall Morgan (2021) “Thoughts on Code Review” <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/">essay</a>
</li>
<li>[@3:57](https://youtu.be/JZdXDyeSvtc?t=237) Adam’s story, first code review at Sun</li>
<li>[@6:32](https://youtu.be/JZdXDyeSvtc?t=392) Choosing a reviewer</li>
<li>[@9:43](https://youtu.be/JZdXDyeSvtc?t=583) Unblocking others. Empathy in feedback. Asking questions, learning.</li>
<li>[@15:43](https://youtu.be/JZdXDyeSvtc?t=943) Bryan reviewing Jeff Bonwick’s code at Sun <ul>
<li>Odd working hours</li>
<li>Screaming Red Chairs</li>
</ul>
</li>
<li>[@19:47](https://youtu.be/JZdXDyeSvtc?t=1187) In-person code review vs digitized. Tools</li>
<li>[@24:29](https://youtu.be/JZdXDyeSvtc?t=1469) Not just finding bugs. <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/#darins-law-cover-your-ass">Darin’s Law</a>
</li>
<li>[@25:59](https://youtu.be/JZdXDyeSvtc?t=1559) Adam’s story around a bug in a big diff, tracepoints in the kernel</li>
<li>[@32:28](https://youtu.be/JZdXDyeSvtc?t=1948) Adam’s favorite useless code review comment <ul>
<li>Marginally useful changes, what to do with multiple good alternatives</li>
<li>Matters of style and taste &gt; Joe Kowalski: Is there a problem with this code, or is it not &gt; implemented the way you would implement it?</li>
</ul>
</li>
<li>[@38:41](https://youtu.be/JZdXDyeSvtc?t=2321) Ian on tools. Different languages, mediums. <a href="https://www.loom.com/">loom</a> for short video messages</li>
<li>[@44:37](https://youtu.be/JZdXDyeSvtc?t=2677) Tools designed for specific tasks. <ul>
<li><a href="https://en.wikipedia.org/wiki/Gerrit_(software)">Gerrit</a></li>
<li>Code review policies</li>
</ul>
</li>
<li>[@49:31](https://youtu.be/JZdXDyeSvtc?t=2971) Jason’s story about HPE project with SCSI bug. Patch submitted to kernel group</li>
<li>[@54:59](https://youtu.be/JZdXDyeSvtc?t=3299) Bryan’s story about an n^3 algorithm in SCSI target code</li>
<li>[@56:55](https://youtu.be/JZdXDyeSvtc?t=3415) Rust compiler, resource awareness, error paths <ul>
<li>Often more modular than C code</li>
<li>
<a href="https://rust-analyzer.github.io/">rust-analyzer</a>, seeing inferred types</li>
</ul>
</li>
<li>[@1:01:15](https://youtu.be/JZdXDyeSvtc?t=3675) Joshua’s experience with in-person reviews, whiteboarding <ul>
<li>Working arm-in-arm with people</li>
<li>Sourcegraph Dev Tool Time <a href="https://youtube.com/playlist?list=PL6zLuuRVa1_iDEP4EicZ8972RgyccCRGF">videos</a>
</li>
</ul>
</li>
<li>[@1:05:21](https://youtu.be/JZdXDyeSvtc?t=3921) How do you scale quality code review in bigger teams? <ul><li>Culture of code review at a company</li></ul>
</li>
<li>[@1:07:15](https://youtu.be/JZdXDyeSvtc?t=4035) How to convince your team of the value of code review? <ul>
<li>Review can catch bugs</li>
<li>Cross team knowledge, bus factor</li>
<li>Speed in the short term vs speed in the long term</li>
</ul>
</li>
<li>[@1:14:39](https://youtu.be/JZdXDyeSvtc?t=4479) Ian on cultivating organizational review practices</li>
<li>[@1:16:32](https://youtu.be/JZdXDyeSvtc?t=4592) Austin’s story on assuaging management fears around new practices <ul>
<li>Joshua: communication, writing, and accountability</li>
<li>What code don’t we review?</li>
</ul>
</li>
<li>Code review as quality check</li>
<li>[@1:23:55](https://youtu.be/JZdXDyeSvtc?t=5035) Engineering product quality, not always obviously of benefit to the business <ul><li>Skipping code reviews to show quality consequences</li></ul>
</li>
<li>Adopting code review practices, incrementally</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Coder's Block</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>19</itunes:episode>
      <podcast:episode>19</podcast:episode>
      <itunes:title>Coder's Block</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">92ba751c-e8c1-4e16-aacb-e439cc574e43</guid>
      <link>https://share.transistor.fm/s/bd16258f</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 25th, 2021</b></p><p>Coder’s Block</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/QGs5hlH6cLk">the recording for our Twitter Space for October 25th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 25th included <a href="https://twitter.com/bgaff">Brigid Gaffikin</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/hoeflich_joshua">Joshua Hoeflich</a>, <a href="https://twitter.com/billblum">Bill</a>, <a href="https://twitter.com/ArielGMachado">Ariel Machado</a>, and <a href="https://twitter.com/kendallmorgan">Kendall Morgan</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>BattleTris stories</li>
<li>[@10:15](https://youtu.be/QGs5hlH6cLk?t=615) Writer’s block, flow (instigating <a href="https://twitter.com/bcantrill/status/1452671229572222979">tweet</a>)</li>
<li>National Novel Writing Month <a href="https://nanowrimo.org/">NaNoWriMo</a>
</li>
<li>Flow <a href="https://en.wikipedia.org/wiki/Flow_(psychology)">wiki</a>
</li>
<li>[@16:54](https://youtu.be/QGs5hlH6cLk?t=1014) “If you’re just problem solving, you can’t have writers block” <ul>
<li>Many degrees of freedom</li>
<li>Shiny new object</li>
</ul>
</li>
<li>[@20:39](https://youtu.be/QGs5hlH6cLk?t=1239) Remedies for writer’s block? <ul>
<li>Decide if you’re looking for tactics or strategy; is it small technical issues or not?</li>
<li>Tactics: Hone in on ‘the craft’ – work on the language</li>
<li>Strategy: Is this going to reach an audience/get an agent?</li>
<li>Write a scene from a different character’s PoV; write a vignette</li>
<li>This sounds like prototyping in software</li>
<li>If you’re stuck on debugging, write some debug infrastructure</li>
</ul>
</li>
<li>[@24:16](https://youtu.be/QGs5hlH6cLk?t=1456) Doing something else entirely <ul><li>Brigid: ceramics, sound walks</li></ul>
</li>
<li>[@27:43](https://youtu.be/QGs5hlH6cLk?t=1663) Not everything is burnout</li>
<li>[@34:13](https://youtu.be/QGs5hlH6cLk?t=2053) Software analogies to writer’s techniques</li>
<li>[@36:04](https://youtu.be/QGs5hlH6cLk?t=2164) Personal productivity obsession <ul>
<li>Writer Emergency Pack by John August, <a href="https://www.writeremergency.com/">site</a>
</li>
<li>“You’ve got to get back to the coal face. You’ve got to finish it.”</li>
</ul>
</li>
<li>[@41:00](https://youtu.be/QGs5hlH6cLk?t=2460) Does Rust make this indecision worse? <ul><li>Pressure to find the “right” way</li></ul>
</li>
<li>[@43:56](https://youtu.be/QGs5hlH6cLk?t=2636) Arthur Whitney (<a href="https://en.wikipedia.org/wiki/Arthur_Whitney_(computer_scientist)">wiki</a>) &gt; The best analog for software is poetry</li>
<li>Pandemic life, collaboration and conferences</li>
<li>[@51:51](https://youtu.be/QGs5hlH6cLk?t=3111) Hallway track. Software is collaborative but ultimately programming is a solitary act <ul><li>Nimo’s experience, it’s all collaborative. Code review, art</li></ul>
</li>
<li>[@59:36](https://youtu.be/QGs5hlH6cLk?t=3576) Cliff code reviews, how to do good reviews <ul><li>Lack of code reviewers for Rust at Google</li></ul>
</li>
<li>[@1:04:16](https://youtu.be/QGs5hlH6cLk?t=3856) Writer’s groups, different focuses</li>
<li>[@1:08:04](https://youtu.be/QGs5hlH6cLk?t=4084) Grad school during pandemic, <a href="https://www.gather.town/">gather.town</a> - video chat platform for virtual interactions</li>
<li>[@1:11:54](https://youtu.be/QGs5hlH6cLk?t=4314) Goals, take the wins that you can, boundaries between work life and home life</li>
<li>Kendall Morgan “Thoughts on Code Reviews” blog <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/">post</a>
</li>
<li>[@1:17:38](https://youtu.be/QGs5hlH6cLk?t=4658) Bill’s experience switching things up, and enjoying computing again</li>
<li>Wrap up <a href="https://twitter.com/ahl/status/1452842286757208069">tweet</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 25th, 2021</b></p><p>Coder’s Block</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/QGs5hlH6cLk">the recording for our Twitter Space for October 25th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 25th included <a href="https://twitter.com/bgaff">Brigid Gaffikin</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/hoeflich_joshua">Joshua Hoeflich</a>, <a href="https://twitter.com/billblum">Bill</a>, <a href="https://twitter.com/ArielGMachado">Ariel Machado</a>, and <a href="https://twitter.com/kendallmorgan">Kendall Morgan</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>BattleTris stories</li>
<li>[@10:15](https://youtu.be/QGs5hlH6cLk?t=615) Writer’s block, flow (instigating <a href="https://twitter.com/bcantrill/status/1452671229572222979">tweet</a>)</li>
<li>National Novel Writing Month <a href="https://nanowrimo.org/">NaNoWriMo</a>
</li>
<li>Flow <a href="https://en.wikipedia.org/wiki/Flow_(psychology)">wiki</a>
</li>
<li>[@16:54](https://youtu.be/QGs5hlH6cLk?t=1014) “If you’re just problem solving, you can’t have writers block” <ul>
<li>Many degrees of freedom</li>
<li>Shiny new object</li>
</ul>
</li>
<li>[@20:39](https://youtu.be/QGs5hlH6cLk?t=1239) Remedies for writer’s block? <ul>
<li>Decide if you’re looking for tactics or strategy; is it small technical issues or not?</li>
<li>Tactics: Hone in on ‘the craft’ – work on the language</li>
<li>Strategy: Is this going to reach an audience/get an agent?</li>
<li>Write a scene from a different character’s PoV; write a vignette</li>
<li>This sounds like prototyping in software</li>
<li>If you’re stuck on debugging, write some debug infrastructure</li>
</ul>
</li>
<li>[@24:16](https://youtu.be/QGs5hlH6cLk?t=1456) Doing something else entirely <ul><li>Brigid: ceramics, sound walks</li></ul>
</li>
<li>[@27:43](https://youtu.be/QGs5hlH6cLk?t=1663) Not everything is burnout</li>
<li>[@34:13](https://youtu.be/QGs5hlH6cLk?t=2053) Software analogies to writer’s techniques</li>
<li>[@36:04](https://youtu.be/QGs5hlH6cLk?t=2164) Personal productivity obsession <ul>
<li>Writer Emergency Pack by John August, <a href="https://www.writeremergency.com/">site</a>
</li>
<li>“You’ve got to get back to the coal face. You’ve got to finish it.”</li>
</ul>
</li>
<li>[@41:00](https://youtu.be/QGs5hlH6cLk?t=2460) Does Rust make this indecision worse? <ul><li>Pressure to find the “right” way</li></ul>
</li>
<li>[@43:56](https://youtu.be/QGs5hlH6cLk?t=2636) Arthur Whitney (<a href="https://en.wikipedia.org/wiki/Arthur_Whitney_(computer_scientist)">wiki</a>) &gt; The best analog for software is poetry</li>
<li>Pandemic life, collaboration and conferences</li>
<li>[@51:51](https://youtu.be/QGs5hlH6cLk?t=3111) Hallway track. Software is collaborative but ultimately programming is a solitary act <ul><li>Nimo’s experience, it’s all collaborative. Code review, art</li></ul>
</li>
<li>[@59:36](https://youtu.be/QGs5hlH6cLk?t=3576) Cliff code reviews, how to do good reviews <ul><li>Lack of code reviewers for Rust at Google</li></ul>
</li>
<li>[@1:04:16](https://youtu.be/QGs5hlH6cLk?t=3856) Writer’s groups, different focuses</li>
<li>[@1:08:04](https://youtu.be/QGs5hlH6cLk?t=4084) Grad school during pandemic, <a href="https://www.gather.town/">gather.town</a> - video chat platform for virtual interactions</li>
<li>[@1:11:54](https://youtu.be/QGs5hlH6cLk?t=4314) Goals, take the wins that you can, boundaries between work life and home life</li>
<li>Kendall Morgan “Thoughts on Code Reviews” blog <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/">post</a>
</li>
<li>[@1:17:38](https://youtu.be/QGs5hlH6cLk?t=4658) Bill’s experience switching things up, and enjoying computing again</li>
<li>Wrap up <a href="https://twitter.com/ahl/status/1452842286757208069">tweet</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 25 Oct 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/bd16258f/8336d806.mp3" length="77573512" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4848</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 25th, 2021</b></p><p>Coder’s Block</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/QGs5hlH6cLk">the recording for our Twitter Space for October 25th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 25th included <a href="https://twitter.com/bgaff">Brigid Gaffikin</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/hoeflich_joshua">Joshua Hoeflich</a>, <a href="https://twitter.com/billblum">Bill</a>, <a href="https://twitter.com/ArielGMachado">Ariel Machado</a>, and <a href="https://twitter.com/kendallmorgan">Kendall Morgan</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>BattleTris stories</li>
<li>[@10:15](https://youtu.be/QGs5hlH6cLk?t=615) Writer’s block, flow (instigating <a href="https://twitter.com/bcantrill/status/1452671229572222979">tweet</a>)</li>
<li>National Novel Writing Month <a href="https://nanowrimo.org/">NaNoWriMo</a>
</li>
<li>Flow <a href="https://en.wikipedia.org/wiki/Flow_(psychology)">wiki</a>
</li>
<li>[@16:54](https://youtu.be/QGs5hlH6cLk?t=1014) “If you’re just problem solving, you can’t have writers block” <ul>
<li>Many degrees of freedom</li>
<li>Shiny new object</li>
</ul>
</li>
<li>[@20:39](https://youtu.be/QGs5hlH6cLk?t=1239) Remedies for writer’s block? <ul>
<li>Decide if you’re looking for tactics or strategy; is it small technical issues or not?</li>
<li>Tactics: Hone in on ‘the craft’ – work on the language</li>
<li>Strategy: Is this going to reach an audience/get an agent?</li>
<li>Write a scene from a different character’s PoV; write a vignette</li>
<li>This sounds like prototyping in software</li>
<li>If you’re stuck on debugging, write some debug infrastructure</li>
</ul>
</li>
<li>[@24:16](https://youtu.be/QGs5hlH6cLk?t=1456) Doing something else entirely <ul><li>Brigid: ceramics, sound walks</li></ul>
</li>
<li>[@27:43](https://youtu.be/QGs5hlH6cLk?t=1663) Not everything is burnout</li>
<li>[@34:13](https://youtu.be/QGs5hlH6cLk?t=2053) Software analogies to writer’s techniques</li>
<li>[@36:04](https://youtu.be/QGs5hlH6cLk?t=2164) Personal productivity obsession <ul>
<li>Writer Emergency Pack by John August, <a href="https://www.writeremergency.com/">site</a>
</li>
<li>“You’ve got to get back to the coal face. You’ve got to finish it.”</li>
</ul>
</li>
<li>[@41:00](https://youtu.be/QGs5hlH6cLk?t=2460) Does Rust make this indecision worse? <ul><li>Pressure to find the “right” way</li></ul>
</li>
<li>[@43:56](https://youtu.be/QGs5hlH6cLk?t=2636) Arthur Whitney (<a href="https://en.wikipedia.org/wiki/Arthur_Whitney_(computer_scientist)">wiki</a>) &gt; The best analog for software is poetry</li>
<li>Pandemic life, collaboration and conferences</li>
<li>[@51:51](https://youtu.be/QGs5hlH6cLk?t=3111) Hallway track. Software is collaborative but ultimately programming is a solitary act <ul><li>Nimo’s experience, it’s all collaborative. Code review, art</li></ul>
</li>
<li>[@59:36](https://youtu.be/QGs5hlH6cLk?t=3576) Cliff code reviews, how to do good reviews <ul><li>Lack of code reviewers for Rust at Google</li></ul>
</li>
<li>[@1:04:16](https://youtu.be/QGs5hlH6cLk?t=3856) Writer’s groups, different focuses</li>
<li>[@1:08:04](https://youtu.be/QGs5hlH6cLk?t=4084) Grad school during pandemic, <a href="https://www.gather.town/">gather.town</a> - video chat platform for virtual interactions</li>
<li>[@1:11:54](https://youtu.be/QGs5hlH6cLk?t=4314) Goals, take the wins that you can, boundaries between work life and home life</li>
<li>Kendall Morgan “Thoughts on Code Reviews” blog <a href="https://kendallmorgan.com/posts/thoughts-on-code-reviews/">post</a>
</li>
<li>[@1:17:38](https://youtu.be/QGs5hlH6cLk?t=4658) Bill’s experience switching things up, and enjoying computing again</li>
<li>Wrap up <a href="https://twitter.com/ahl/status/1452842286757208069">tweet</a>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Dijkstra's Tweetstorm</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>18</itunes:episode>
      <podcast:episode>18</podcast:episode>
      <itunes:title>Dijkstra's Tweetstorm</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">5978cb78-c9ed-421f-9c32-9afaff7c40a9</guid>
      <link>https://share.transistor.fm/s/2e8351f8</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 18th, 2021</b></p><p>Dijkstra’s Tweetstorm</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/D-Uzo7M-ioQ">the recording for our Twitter Space for October 18th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 18th included <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/rzezeski">Ryan Zezeski</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/perlhack">Nate</a>, <a href="https://twitter.com/raycar5">raycar5</a>, <a href="https://twitter.com/0xCLI">night</a>, and <a href="https://twitter.com/drewonpaper">Drew Vogel</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul><li>Dijkstra’s 1975 “How do we tell truths that might hurt?” <a href="https://www.cs.virginia.edu/~evans/cs655/readings/ewd498.html">EWD 498</a> <a href="https://twitter.com/bcantrill/status/1449865842091442181">tweet</a> &gt; <a href="https://en.wikipedia.org/wiki/PL/I">PL/1</a> &gt; belongs more to the problem set than to the solution set</li></ul>The use of <a href="https://en.wikipedia.org/wiki/COBOL">COBOL</a> cripples the mind; its teaching should, therefore, be regarded as a criminal offence<a href="https://en.wikipedia.org/wiki/APL_(programming_language)">APL</a> is a mistake, carried through to perfection. It is the language of the future for the programming techniques of the past: it creates a new generation of coding bums - [@3:08](https://youtu.be/D-Uzo7M-ioQ?t=188) Languages affect the way you think It is practically impossible to teach good programming to students that have had a prior exposure to <a href="https://en.wikipedia.org/wiki/BASIC">BASIC</a>: as potential programmers they are mentally mutilated beyond hope of regeneration. - [@4:33](https://youtu.be/D-Uzo7M-ioQ?t=273) Adam’s Perl story - The <a href="https://en.wikipedia.org/wiki/Programming_Perl">Camel Book</a>, not to be confused with <a href="https://en.wikipedia.org/wiki/OCaml">OCaml</a> - “You <em>needed</em> books to learn how to do things” - <a href="https://en.wikipedia.org/wiki/Common_Gateway_Interface">CGI</a> - [@9:04](https://youtu.be/D-Uzo7M-ioQ?t=544) Adam meets Larry Wall - [@11:59](https://youtu.be/D-Uzo7M-ioQ?t=719) Meeting Dennis Ritchie - “We were <em>very</em> excited; too excited some would say…” - [@15:04](https://youtu.be/D-Uzo7M-ioQ?t=904) Effects of learning languages, goals of a language, impediments to learning - <a href="https://en.wikipedia.org/wiki/Roger_Hui">Roger Hui</a> of APL and J fame, <a href="https://www.joyk.com/dig/detail/1634518612863856">RIP</a>. - Accessible as a language value - <a href="https://en.wikipedia.org/wiki/Microsoft_Pascal">Microsoft Pascal</a>, <a href="https://en.wikipedia.org/wiki/Turbo_Pascal">Turbo Pascal</a> - <a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> - <a href="https://en.wikipedia.org/wiki/LabVIEW">LabVIEW</a> - [@25:31](https://youtu.be/D-Uzo7M-ioQ?t=1531) Nate’s experience - Languages have different audiences - [@27:18](https://youtu.be/D-Uzo7M-ioQ?t=1638) Human languages - The <a href="https://en.wikipedia.org/wiki/Esperanto">Esperanto</a> con-lang - <a href="https://en.wikipedia.org/wiki/Tone_(linguistics)">Tonal langages</a> - Learning new and different programming languages - [@37:06](https://youtu.be/D-Uzo7M-ioQ?t=2226) Adam’s early JavaScript (<a href="https://twitter.com/ahl/status/1450268016650842113">tweet</a>) - &lt;SCRIPT LANGUARE="JavaScript"&gt; circa 1996 - [@44:10](https://youtu.be/D-Uzo7M-ioQ?t=2650) Learning from books, sitting down and learning by typing out examples - How do you learn to program in a language? - <a href="https://en.wikipedia.org/wiki/Zed_Shaw">Zed Shaw</a> on learning programming through <a href="https://en.wikipedia.org/wiki/Spaced_repetition">spaced repetition</a> <a href="https://zedshaw.com/blog/2017-04-24-copying-repetition/">blog</a> - Rigid advice on how to learn - <a href="https://en.wikipedia.org/wiki/ALGOL_68">ALGOL 68</a>, planned successor to <a href="https://en.wikipedia.org/wiki/ALGOL_60">ALGOL 60</a> - ALGOL 60, was, according to <a href="https://en.wikipedia.org/wiki/Tony_Hoare">Tony Hoare</a>, “<a href="http://web.eecs.umich.edu/~bchandra/courses/papers/Hoare_Hints.pdf">An improvment on nearly all of its successors</a>” - [@50:41](https://youtu.be/D-Uzo7M-ioQ?t=3041) Where does Rust belong in the progression of languages someone learns? Rust is what happens when you’ve got 25 years of experience with C++, and you remove most of the rough edges and make it safer? - “Everyone needs to learn enough C, to appreciate what it is and what it isn’t” - [@52:45](https://youtu.be/D-Uzo7M-ioQ?t=3165) “I wish I had learned Rust instead of C++” - [@53:35](https://youtu.be/D-Uzo7M-ioQ?t=3215) Adam: Brown revisits intro curriculum, teaching Scheme, ML, then Java - Adam learning Rust back in 2015 (<a href="https://twitter.com/ahl/status/613146504954417152">tweet</a>) “First Rust Program Pain (So you can avoid it…)” Tom: There’s a tension in learning between the people who hate magic and want to know how everything works in great detail, versus the people who just want to see something useful done. It’s hard to satisfy both. - [@1:00:02](https://youtu.be/D-Uzo7M-ioQ?t=3602) Bryan coming to Rust - “Learn Rust with entirely too many linked lists” <a href="https://rust-unofficial.github.io/too-many-lists/">guide</a> - Rob Pike <a href="https://www.red-gate.com/simple-talk/opinion/geek-of-the-week/rob-pike-geek-of-the-week/">interview</a> Its concurrency is rooted in <a href="https://en.wikipedia.org/wiki/Communicating_sequential_processes">CSP</a>, but evolved through a series of languages done at Bell Labs in the 1980s and 1990s, such as <a href="https://en.wikipedia.org/wiki/Newsqueak">Newsqueak</a>, <a href="https://en.wikipedia.org/wiki/Alef_(programming_language)">Alef</a>, and <a href="https://en.wikipedia.org/wiki/Limbo_(programming_language)">Limbo</a>. - [@1:03:01](https://youtu.be/D-Uzo7M-ioQ?t=3781) Debugging Erlang processes. Ryan on runtime v. language - Tuning runtimes. Go and Rust - [@1:06:42](https://youtu.be/D-Uzo7M-ioQ?t=4002) Rust is its own build system - Bryan’s 2018 “Falling in love with Rust” <a href="http://dtrace.org/blogs/bmc/2018/09/18/falling-in-love-with-rust/">post</a> - Lisp macros, <a href="https://en.wikipedia.org/wiki/Clean_(programming_language)">Clean</a>, <a href="https://en.wikipedia.org/wiki/Logo_(programming_language)">Logo</a>, <a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> - [@1:11:27](https://youtu.be/D-Uzo7M-ioQ?t=4287) The use of anthropomorphic terminology when dealing with computing systems is a symptom of professional immaturity. - [@1:12:09](https://youtu.be/D-Uzo7M-ioQ?t=4329) Oxide bringup updates - <a href="https://en.wikipedia.org/wiki/I%C2%B2C">I2C</a> Inter-Integrated Circuit - <a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface">SPI</a> Serial Peripheral Interface - <a href="https://en.wikipedia.org/wiki/ICE_(FPGA)#iCE40_(40_nm)">iCE40</a><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 18th, 2021</b></p><p>Dijkstra’s Tweetstorm</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/D-Uzo7M-ioQ">the recording for our Twitter Space for October 18th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 18th included <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/rzezeski">Ryan Zezeski</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/perlhack">Nate</a>, <a href="https://twitter.com/raycar5">raycar5</a>, <a href="https://twitter.com/0xCLI">night</a>, and <a href="https://twitter.com/drewonpaper">Drew Vogel</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul><li>Dijkstra’s 1975 “How do we tell truths that might hurt?” <a href="https://www.cs.virginia.edu/~evans/cs655/readings/ewd498.html">EWD 498</a> <a href="https://twitter.com/bcantrill/status/1449865842091442181">tweet</a> &gt; <a href="https://en.wikipedia.org/wiki/PL/I">PL/1</a> &gt; belongs more to the problem set than to the solution set</li></ul>The use of <a href="https://en.wikipedia.org/wiki/COBOL">COBOL</a> cripples the mind; its teaching should, therefore, be regarded as a criminal offence<a href="https://en.wikipedia.org/wiki/APL_(programming_language)">APL</a> is a mistake, carried through to perfection. It is the language of the future for the programming techniques of the past: it creates a new generation of coding bums - [@3:08](https://youtu.be/D-Uzo7M-ioQ?t=188) Languages affect the way you think It is practically impossible to teach good programming to students that have had a prior exposure to <a href="https://en.wikipedia.org/wiki/BASIC">BASIC</a>: as potential programmers they are mentally mutilated beyond hope of regeneration. - [@4:33](https://youtu.be/D-Uzo7M-ioQ?t=273) Adam’s Perl story - The <a href="https://en.wikipedia.org/wiki/Programming_Perl">Camel Book</a>, not to be confused with <a href="https://en.wikipedia.org/wiki/OCaml">OCaml</a> - “You <em>needed</em> books to learn how to do things” - <a href="https://en.wikipedia.org/wiki/Common_Gateway_Interface">CGI</a> - [@9:04](https://youtu.be/D-Uzo7M-ioQ?t=544) Adam meets Larry Wall - [@11:59](https://youtu.be/D-Uzo7M-ioQ?t=719) Meeting Dennis Ritchie - “We were <em>very</em> excited; too excited some would say…” - [@15:04](https://youtu.be/D-Uzo7M-ioQ?t=904) Effects of learning languages, goals of a language, impediments to learning - <a href="https://en.wikipedia.org/wiki/Roger_Hui">Roger Hui</a> of APL and J fame, <a href="https://www.joyk.com/dig/detail/1634518612863856">RIP</a>. - Accessible as a language value - <a href="https://en.wikipedia.org/wiki/Microsoft_Pascal">Microsoft Pascal</a>, <a href="https://en.wikipedia.org/wiki/Turbo_Pascal">Turbo Pascal</a> - <a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> - <a href="https://en.wikipedia.org/wiki/LabVIEW">LabVIEW</a> - [@25:31](https://youtu.be/D-Uzo7M-ioQ?t=1531) Nate’s experience - Languages have different audiences - [@27:18](https://youtu.be/D-Uzo7M-ioQ?t=1638) Human languages - The <a href="https://en.wikipedia.org/wiki/Esperanto">Esperanto</a> con-lang - <a href="https://en.wikipedia.org/wiki/Tone_(linguistics)">Tonal langages</a> - Learning new and different programming languages - [@37:06](https://youtu.be/D-Uzo7M-ioQ?t=2226) Adam’s early JavaScript (<a href="https://twitter.com/ahl/status/1450268016650842113">tweet</a>) - &lt;SCRIPT LANGUARE="JavaScript"&gt; circa 1996 - [@44:10](https://youtu.be/D-Uzo7M-ioQ?t=2650) Learning from books, sitting down and learning by typing out examples - How do you learn to program in a language? - <a href="https://en.wikipedia.org/wiki/Zed_Shaw">Zed Shaw</a> on learning programming through <a href="https://en.wikipedia.org/wiki/Spaced_repetition">spaced repetition</a> <a href="https://zedshaw.com/blog/2017-04-24-copying-repetition/">blog</a> - Rigid advice on how to learn - <a href="https://en.wikipedia.org/wiki/ALGOL_68">ALGOL 68</a>, planned successor to <a href="https://en.wikipedia.org/wiki/ALGOL_60">ALGOL 60</a> - ALGOL 60, was, according to <a href="https://en.wikipedia.org/wiki/Tony_Hoare">Tony Hoare</a>, “<a href="http://web.eecs.umich.edu/~bchandra/courses/papers/Hoare_Hints.pdf">An improvment on nearly all of its successors</a>” - [@50:41](https://youtu.be/D-Uzo7M-ioQ?t=3041) Where does Rust belong in the progression of languages someone learns? Rust is what happens when you’ve got 25 years of experience with C++, and you remove most of the rough edges and make it safer? - “Everyone needs to learn enough C, to appreciate what it is and what it isn’t” - [@52:45](https://youtu.be/D-Uzo7M-ioQ?t=3165) “I wish I had learned Rust instead of C++” - [@53:35](https://youtu.be/D-Uzo7M-ioQ?t=3215) Adam: Brown revisits intro curriculum, teaching Scheme, ML, then Java - Adam learning Rust back in 2015 (<a href="https://twitter.com/ahl/status/613146504954417152">tweet</a>) “First Rust Program Pain (So you can avoid it…)” Tom: There’s a tension in learning between the people who hate magic and want to know how everything works in great detail, versus the people who just want to see something useful done. It’s hard to satisfy both. - [@1:00:02](https://youtu.be/D-Uzo7M-ioQ?t=3602) Bryan coming to Rust - “Learn Rust with entirely too many linked lists” <a href="https://rust-unofficial.github.io/too-many-lists/">guide</a> - Rob Pike <a href="https://www.red-gate.com/simple-talk/opinion/geek-of-the-week/rob-pike-geek-of-the-week/">interview</a> Its concurrency is rooted in <a href="https://en.wikipedia.org/wiki/Communicating_sequential_processes">CSP</a>, but evolved through a series of languages done at Bell Labs in the 1980s and 1990s, such as <a href="https://en.wikipedia.org/wiki/Newsqueak">Newsqueak</a>, <a href="https://en.wikipedia.org/wiki/Alef_(programming_language)">Alef</a>, and <a href="https://en.wikipedia.org/wiki/Limbo_(programming_language)">Limbo</a>. - [@1:03:01](https://youtu.be/D-Uzo7M-ioQ?t=3781) Debugging Erlang processes. Ryan on runtime v. language - Tuning runtimes. Go and Rust - [@1:06:42](https://youtu.be/D-Uzo7M-ioQ?t=4002) Rust is its own build system - Bryan’s 2018 “Falling in love with Rust” <a href="http://dtrace.org/blogs/bmc/2018/09/18/falling-in-love-with-rust/">post</a> - Lisp macros, <a href="https://en.wikipedia.org/wiki/Clean_(programming_language)">Clean</a>, <a href="https://en.wikipedia.org/wiki/Logo_(programming_language)">Logo</a>, <a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> - [@1:11:27](https://youtu.be/D-Uzo7M-ioQ?t=4287) The use of anthropomorphic terminology when dealing with computing systems is a symptom of professional immaturity. - [@1:12:09](https://youtu.be/D-Uzo7M-ioQ?t=4329) Oxide bringup updates - <a href="https://en.wikipedia.org/wiki/I%C2%B2C">I2C</a> Inter-Integrated Circuit - <a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface">SPI</a> Serial Peripheral Interface - <a href="https://en.wikipedia.org/wiki/ICE_(FPGA)#iCE40_(40_nm)">iCE40</a><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 18 Oct 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/2e8351f8/7246fc56.mp3" length="83379195" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5211</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 18th, 2021</b></p><p>Dijkstra’s Tweetstorm</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/D-Uzo7M-ioQ">the recording for our Twitter Space for October 18th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 18th included <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/rzezeski">Ryan Zezeski</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/perlhack">Nate</a>, <a href="https://twitter.com/raycar5">raycar5</a>, <a href="https://twitter.com/0xCLI">night</a>, and <a href="https://twitter.com/drewonpaper">Drew Vogel</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul><li>Dijkstra’s 1975 “How do we tell truths that might hurt?” <a href="https://www.cs.virginia.edu/~evans/cs655/readings/ewd498.html">EWD 498</a> <a href="https://twitter.com/bcantrill/status/1449865842091442181">tweet</a> &gt; <a href="https://en.wikipedia.org/wiki/PL/I">PL/1</a> &gt; belongs more to the problem set than to the solution set</li></ul>The use of <a href="https://en.wikipedia.org/wiki/COBOL">COBOL</a> cripples the mind; its teaching should, therefore, be regarded as a criminal offence<a href="https://en.wikipedia.org/wiki/APL_(programming_language)">APL</a> is a mistake, carried through to perfection. It is the language of the future for the programming techniques of the past: it creates a new generation of coding bums - [@3:08](https://youtu.be/D-Uzo7M-ioQ?t=188) Languages affect the way you think It is practically impossible to teach good programming to students that have had a prior exposure to <a href="https://en.wikipedia.org/wiki/BASIC">BASIC</a>: as potential programmers they are mentally mutilated beyond hope of regeneration. - [@4:33](https://youtu.be/D-Uzo7M-ioQ?t=273) Adam’s Perl story - The <a href="https://en.wikipedia.org/wiki/Programming_Perl">Camel Book</a>, not to be confused with <a href="https://en.wikipedia.org/wiki/OCaml">OCaml</a> - “You <em>needed</em> books to learn how to do things” - <a href="https://en.wikipedia.org/wiki/Common_Gateway_Interface">CGI</a> - [@9:04](https://youtu.be/D-Uzo7M-ioQ?t=544) Adam meets Larry Wall - [@11:59](https://youtu.be/D-Uzo7M-ioQ?t=719) Meeting Dennis Ritchie - “We were <em>very</em> excited; too excited some would say…” - [@15:04](https://youtu.be/D-Uzo7M-ioQ?t=904) Effects of learning languages, goals of a language, impediments to learning - <a href="https://en.wikipedia.org/wiki/Roger_Hui">Roger Hui</a> of APL and J fame, <a href="https://www.joyk.com/dig/detail/1634518612863856">RIP</a>. - Accessible as a language value - <a href="https://en.wikipedia.org/wiki/Microsoft_Pascal">Microsoft Pascal</a>, <a href="https://en.wikipedia.org/wiki/Turbo_Pascal">Turbo Pascal</a> - <a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> - <a href="https://en.wikipedia.org/wiki/LabVIEW">LabVIEW</a> - [@25:31](https://youtu.be/D-Uzo7M-ioQ?t=1531) Nate’s experience - Languages have different audiences - [@27:18](https://youtu.be/D-Uzo7M-ioQ?t=1638) Human languages - The <a href="https://en.wikipedia.org/wiki/Esperanto">Esperanto</a> con-lang - <a href="https://en.wikipedia.org/wiki/Tone_(linguistics)">Tonal langages</a> - Learning new and different programming languages - [@37:06](https://youtu.be/D-Uzo7M-ioQ?t=2226) Adam’s early JavaScript (<a href="https://twitter.com/ahl/status/1450268016650842113">tweet</a>) - &lt;SCRIPT LANGUARE="JavaScript"&gt; circa 1996 - [@44:10](https://youtu.be/D-Uzo7M-ioQ?t=2650) Learning from books, sitting down and learning by typing out examples - How do you learn to program in a language? - <a href="https://en.wikipedia.org/wiki/Zed_Shaw">Zed Shaw</a> on learning programming through <a href="https://en.wikipedia.org/wiki/Spaced_repetition">spaced repetition</a> <a href="https://zedshaw.com/blog/2017-04-24-copying-repetition/">blog</a> - Rigid advice on how to learn - <a href="https://en.wikipedia.org/wiki/ALGOL_68">ALGOL 68</a>, planned successor to <a href="https://en.wikipedia.org/wiki/ALGOL_60">ALGOL 60</a> - ALGOL 60, was, according to <a href="https://en.wikipedia.org/wiki/Tony_Hoare">Tony Hoare</a>, “<a href="http://web.eecs.umich.edu/~bchandra/courses/papers/Hoare_Hints.pdf">An improvment on nearly all of its successors</a>” - [@50:41](https://youtu.be/D-Uzo7M-ioQ?t=3041) Where does Rust belong in the progression of languages someone learns? Rust is what happens when you’ve got 25 years of experience with C++, and you remove most of the rough edges and make it safer? - “Everyone needs to learn enough C, to appreciate what it is and what it isn’t” - [@52:45](https://youtu.be/D-Uzo7M-ioQ?t=3165) “I wish I had learned Rust instead of C++” - [@53:35](https://youtu.be/D-Uzo7M-ioQ?t=3215) Adam: Brown revisits intro curriculum, teaching Scheme, ML, then Java - Adam learning Rust back in 2015 (<a href="https://twitter.com/ahl/status/613146504954417152">tweet</a>) “First Rust Program Pain (So you can avoid it…)” Tom: There’s a tension in learning between the people who hate magic and want to know how everything works in great detail, versus the people who just want to see something useful done. It’s hard to satisfy both. - [@1:00:02](https://youtu.be/D-Uzo7M-ioQ?t=3602) Bryan coming to Rust - “Learn Rust with entirely too many linked lists” <a href="https://rust-unofficial.github.io/too-many-lists/">guide</a> - Rob Pike <a href="https://www.red-gate.com/simple-talk/opinion/geek-of-the-week/rob-pike-geek-of-the-week/">interview</a> Its concurrency is rooted in <a href="https://en.wikipedia.org/wiki/Communicating_sequential_processes">CSP</a>, but evolved through a series of languages done at Bell Labs in the 1980s and 1990s, such as <a href="https://en.wikipedia.org/wiki/Newsqueak">Newsqueak</a>, <a href="https://en.wikipedia.org/wiki/Alef_(programming_language)">Alef</a>, and <a href="https://en.wikipedia.org/wiki/Limbo_(programming_language)">Limbo</a>. - [@1:03:01](https://youtu.be/D-Uzo7M-ioQ?t=3781) Debugging Erlang processes. Ryan on runtime v. language - Tuning runtimes. Go and Rust - [@1:06:42](https://youtu.be/D-Uzo7M-ioQ?t=4002) Rust is its own build system - Bryan’s 2018 “Falling in love with Rust” <a href="http://dtrace.org/blogs/bmc/2018/09/18/falling-in-love-with-rust/">post</a> - Lisp macros, <a href="https://en.wikipedia.org/wiki/Clean_(programming_language)">Clean</a>, <a href="https://en.wikipedia.org/wiki/Logo_(programming_language)">Logo</a>, <a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> - [@1:11:27](https://youtu.be/D-Uzo7M-ioQ?t=4287) The use of anthropomorphic terminology when dealing with computing systems is a symptom of professional immaturity. - [@1:12:09](https://youtu.be/D-Uzo7M-ioQ?t=4329) Oxide bringup updates - <a href="https://en.wikipedia.org/wiki/I%C2%B2C">I2C</a> Inter-Integrated Circuit - <a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface">SPI</a> Serial Peripheral Interface - <a href="https://en.wikipedia.org/wiki/ICE_(FPGA)#iCE40_(40_nm)">iCE40</a><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Economics and Open Source</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>17</itunes:episode>
      <podcast:episode>17</podcast:episode>
      <itunes:title>Economics and Open Source</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">10d4c637-5de2-48bb-b520-b8f203d09cc7</guid>
      <link>https://share.transistor.fm/s/046b64ad</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 4th, 2021</b></p><p>Economics and Open Source</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/JDd8xGSP9DA">the recording for our Twitter Space for October 4th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 4th included <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/jwtodd">James Todd</a>, <a href="https://twitter.com/PeterCorless">Peter Corless</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/caffeinepresent">Joe Thompson</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/AstroBurnham">Tim Burnham</a>, and <a href="https://twitter.com/ZackMaril">vint serp</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Mark Jones Lorenzo (2017) <em>Endless Loop: The History of the BASIC Programming Language</em> <a href="https://www.google.com/books/edition/Endless_Loop/G8ELtAEACAAJ">book</a><ul><li>John Kemeny <a href="https://en.wikipedia.org/wiki/John_G._Kemeny">wiki</a>
</li></ul>
</li>
<li>[@3:11](https://youtu.be/JDd8xGSP9DA?t=191) Tim’s excellent <a href="https://twitter.com/AstroBurnham/status/1444717950477422599">tweet</a><ul>
<li>William Gibson <a href="https://en.wikipedia.org/wiki/William_Gibson">wiki</a>
</li>
<li>John Browne (1996) <em>The Bug Count Also Rises</em> <a href="http://www.workpump.com/bugcount/bugcount.html">short story</a>
</li>
</ul>
</li>
<li>[@5:38](https://youtu.be/JDd8xGSP9DA?t=338) Growing up with BASIC</li>
<li>[@8:03](https://youtu.be/JDd8xGSP9DA?t=483) Braille ’n Speak PDA (<a href="https://youtu.be/RAvGNixqSIU">intro video</a>), BASIC programming</li>
<li>
<a href="https://en.wikipedia.org/wiki/TI-BASIC">TI-BASIC</a> language</li>
<li>[@10:39](https://youtu.be/JDd8xGSP9DA?t=639) Speaking program reading off system calls in real time <ul><li>
<a href="https://docs.oracle.com/cd/E19253-01/816-5166/snoop-1m/index.html">snoop</a> could output to /dev/audio</li></ul>
</li>
<li>[@13:39](https://youtu.be/JDd8xGSP9DA?t=819) Joel Spolsky (2002) <em>Strategy Letter V</em> <a href="https://www.joelonsoftware.com/2002/06/12/strategy-letter-v/">blog</a><ul>
<li>Bryan’s (2004) <em>The Economics of Software</em> <a href="http://dtrace.org/blogs/bmc/2004/08/28/the-economics-of-software/">blog</a>
</li>
<li>Software “maintenance”</li>
</ul>
</li>
<li>[@20:02](https://youtu.be/JDd8xGSP9DA?t=1202) Cathedral and the Bazaar, <a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar">wiki</a><ul><li>“Forkophilic” development model and the <a href="https://lkml.org/lkml/2001/5/25/214">Alan Cox -ac Linux tree</a>
</li></ul>
</li>
<li>[@26:07](https://youtu.be/JDd8xGSP9DA?t=1567) Open source as something in the commercial best interest of a business <ul>
<li>SCO v IBM <a href="https://en.wikipedia.org/wiki/SCO_Group,_Inc._v._International_Business_Machines_Corp.">wiki</a>
</li>
<li>Halloween documents <a href="https://en.wikipedia.org/wiki/Halloween_documents">wiki</a>
</li>
<li>Steve Ballmer’s “Linux is a cancer” quote in the <a href="https://web.archive.org/web/20011108013601/http://www.suntimes.com/output/tech/cst-fin-micro01.html">Chicago Sun-Times</a>
</li>
<li>OpenOffice.org <a href="https://en.wikipedia.org/wiki/OpenOffice.org">wiki</a> (open sourced from <a href="https://en.wikipedia.org/wiki/StarOffice">StarOffice</a>)</li>
</ul>
</li>
<li>[@30:29](https://youtu.be/JDd8xGSP9DA?t=1829) Document editing as a service. Services and open source</li>
<li>Richard Stallman on <a href="https://www.gnu.org/philosophy/who-does-that-server-really-serve.en.html">SaaS</a>
</li>
<li>[@33:34](https://youtu.be/JDd8xGSP9DA?t=2014) The Joel Test <a href="https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/">link</a><ul>
<li>Joel’s (2007) <em>Strategy Letter VI</em> <a href="https://www.joelonsoftware.com/2007/09/18/strategy-letter-vi/">blog</a>
</li>
<li>“Everybody wants to be a platform”</li>
</ul>
</li>
<li>[@38:58](https://youtu.be/JDd8xGSP9DA?t=2338) Joel’s take on Sun <ul>
<li>Making the pie larger. Porting NFS to rival platforms</li>
<li>
<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.116.8621">The Sun Network Filesystem: Design, Implementation and Experience</a> has a section on porting experiences.</li>
<li>Monetizing software - “Sun could never monetize software, only hardware”</li>
</ul>
</li>
<li>[@44:44](https://youtu.be/JDd8xGSP9DA?t=2684) Window toolkits, “cross platform”, write once run anywhere</li>
<li>“Write once, debug everywhere”</li>
<li>What’s the directory separator on <a href="https://en.wikipedia.org/wiki/MVS#MVS_filesystem">MVS</a>? or <a href="https://en.wikipedia.org/wiki/Stratus_VOS#File_system">Stratos VOS</a>?</li>
<li>[@51:40](https://youtu.be/JDd8xGSP9DA?t=3100) James’ experience working on Tomcat <ul>
<li>Joel’s (2002) <em>Lord Palmerston on Programming</em> <a href="https://www.joelonsoftware.com/2002/12/11/lord-palmerston-on-programming/">blog</a>
</li>
<li>Graphics toolkits, Electron/Web vs Native</li>
</ul>
</li>
<li>[@1:05:21](https://youtu.be/JDd8xGSP9DA?t=3921) “OpenSolaris downloads are potential buyers for the ZFS appliance”</li>
<li>[@1:06:17](https://youtu.be/JDd8xGSP9DA?t=3977) Jason Hoffman “<a href="https://web.archive.org/web/20090207083715/joyeur.com/2006/03/20/the-sun-doesnt-shine-on-me">The Sun does not shine on me</a>” <ul>
<li>Strategy cannot make up for poor execution</li>
<li>Sun CEO Jonathan Schwartz didn’t travel to meet customers</li>
<li>Demoing to a hostile audience</li>
<li>“Asteroid named Linux on a collision course” <a href="https://twitter.com/bcantrill/status/1444358643051237376">tweet</a>
</li>
</ul>
</li>
<li>[@1:13:20](https://youtu.be/JDd8xGSP9DA?t=4400) <a href="https://en.wikipedia.org/wiki/Open-core_model">Open-core</a>, AWS services, monetizing open source <ul>
<li>“People <em>will</em> pay for a service”</li>
<li>Could Apple open source?</li>
</ul>
</li>
<li>[@1:18:43](https://youtu.be/JDd8xGSP9DA?t=4723) Packaged solutions; giving mom a linux box. Free software: free for whom? <ul><li>Support relationships. People want support</li></ul>
</li>
<li>[@1:22:05](https://youtu.be/JDd8xGSP9DA?t=4925) Why didn’t Sun embrace Linux? <ul>
<li>ZFS on Linux, Ubuntu</li>
<li>
<a href="https://web.archive.org/web/20130326031244/http://www.bitmover.com/lm/papers/srcos.html">The Sourceware Operating System Proposal</a> – <a href="https://en.wikipedia.org/wiki/Larry_McVoy">Larry McVoy</a>’s open source SunOS 4 proposal.</li>
<li>Sun bought Cobalt <a href="https://en.wikipedia.org/wiki/Cobalt_Networks">wiki</a>
</li>
</ul>
</li>
<li>[@1:25:33](https://youtu.be/JDd8xGSP9DA?t=5133) “The writing was on the wall for Sun..” <ul>
<li>x86 price-performance</li>
<li>“Couldn’t you buy like 100 x86 computers for that price?”</li>
<li>RISC machine in-fighting, while Intel undercuts the market</li>
</ul>
</li>
<li>[@1:31:01](https://youtu.be/JDd8xGSP9DA?t=5461) Josh’s work on frustrating hardware configuration</li>
<li>[@1:33:25](https://youtu.be/JDd8xGSP9DA?t=5605) Peter’s experience as a Sun customer <ul>
<li>Vertical scaling, but not so much horizontal scaling</li>
<li>Clusters of cheap commodity hardware outperforming big multiway boxes</li>
<li>Importance of open source for big internet companies</li>
<li>Traders used Sun workstations, for fast trading</li>
</ul>
</li>
<li>[@1:38:39](https://youtu.be/JDd8xGSP9DA?t=5919) Oxide is bringing up their first server boards!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 4th, 2021</b></p><p>Economics and Open Source</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/JDd8xGSP9DA">the recording for our Twitter Space for October 4th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 4th included <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/jwtodd">James Todd</a>, <a href="https://twitter.com/PeterCorless">Peter Corless</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/caffeinepresent">Joe Thompson</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/AstroBurnham">Tim Burnham</a>, and <a href="https://twitter.com/ZackMaril">vint serp</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Mark Jones Lorenzo (2017) <em>Endless Loop: The History of the BASIC Programming Language</em> <a href="https://www.google.com/books/edition/Endless_Loop/G8ELtAEACAAJ">book</a><ul><li>John Kemeny <a href="https://en.wikipedia.org/wiki/John_G._Kemeny">wiki</a>
</li></ul>
</li>
<li>[@3:11](https://youtu.be/JDd8xGSP9DA?t=191) Tim’s excellent <a href="https://twitter.com/AstroBurnham/status/1444717950477422599">tweet</a><ul>
<li>William Gibson <a href="https://en.wikipedia.org/wiki/William_Gibson">wiki</a>
</li>
<li>John Browne (1996) <em>The Bug Count Also Rises</em> <a href="http://www.workpump.com/bugcount/bugcount.html">short story</a>
</li>
</ul>
</li>
<li>[@5:38](https://youtu.be/JDd8xGSP9DA?t=338) Growing up with BASIC</li>
<li>[@8:03](https://youtu.be/JDd8xGSP9DA?t=483) Braille ’n Speak PDA (<a href="https://youtu.be/RAvGNixqSIU">intro video</a>), BASIC programming</li>
<li>
<a href="https://en.wikipedia.org/wiki/TI-BASIC">TI-BASIC</a> language</li>
<li>[@10:39](https://youtu.be/JDd8xGSP9DA?t=639) Speaking program reading off system calls in real time <ul><li>
<a href="https://docs.oracle.com/cd/E19253-01/816-5166/snoop-1m/index.html">snoop</a> could output to /dev/audio</li></ul>
</li>
<li>[@13:39](https://youtu.be/JDd8xGSP9DA?t=819) Joel Spolsky (2002) <em>Strategy Letter V</em> <a href="https://www.joelonsoftware.com/2002/06/12/strategy-letter-v/">blog</a><ul>
<li>Bryan’s (2004) <em>The Economics of Software</em> <a href="http://dtrace.org/blogs/bmc/2004/08/28/the-economics-of-software/">blog</a>
</li>
<li>Software “maintenance”</li>
</ul>
</li>
<li>[@20:02](https://youtu.be/JDd8xGSP9DA?t=1202) Cathedral and the Bazaar, <a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar">wiki</a><ul><li>“Forkophilic” development model and the <a href="https://lkml.org/lkml/2001/5/25/214">Alan Cox -ac Linux tree</a>
</li></ul>
</li>
<li>[@26:07](https://youtu.be/JDd8xGSP9DA?t=1567) Open source as something in the commercial best interest of a business <ul>
<li>SCO v IBM <a href="https://en.wikipedia.org/wiki/SCO_Group,_Inc._v._International_Business_Machines_Corp.">wiki</a>
</li>
<li>Halloween documents <a href="https://en.wikipedia.org/wiki/Halloween_documents">wiki</a>
</li>
<li>Steve Ballmer’s “Linux is a cancer” quote in the <a href="https://web.archive.org/web/20011108013601/http://www.suntimes.com/output/tech/cst-fin-micro01.html">Chicago Sun-Times</a>
</li>
<li>OpenOffice.org <a href="https://en.wikipedia.org/wiki/OpenOffice.org">wiki</a> (open sourced from <a href="https://en.wikipedia.org/wiki/StarOffice">StarOffice</a>)</li>
</ul>
</li>
<li>[@30:29](https://youtu.be/JDd8xGSP9DA?t=1829) Document editing as a service. Services and open source</li>
<li>Richard Stallman on <a href="https://www.gnu.org/philosophy/who-does-that-server-really-serve.en.html">SaaS</a>
</li>
<li>[@33:34](https://youtu.be/JDd8xGSP9DA?t=2014) The Joel Test <a href="https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/">link</a><ul>
<li>Joel’s (2007) <em>Strategy Letter VI</em> <a href="https://www.joelonsoftware.com/2007/09/18/strategy-letter-vi/">blog</a>
</li>
<li>“Everybody wants to be a platform”</li>
</ul>
</li>
<li>[@38:58](https://youtu.be/JDd8xGSP9DA?t=2338) Joel’s take on Sun <ul>
<li>Making the pie larger. Porting NFS to rival platforms</li>
<li>
<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.116.8621">The Sun Network Filesystem: Design, Implementation and Experience</a> has a section on porting experiences.</li>
<li>Monetizing software - “Sun could never monetize software, only hardware”</li>
</ul>
</li>
<li>[@44:44](https://youtu.be/JDd8xGSP9DA?t=2684) Window toolkits, “cross platform”, write once run anywhere</li>
<li>“Write once, debug everywhere”</li>
<li>What’s the directory separator on <a href="https://en.wikipedia.org/wiki/MVS#MVS_filesystem">MVS</a>? or <a href="https://en.wikipedia.org/wiki/Stratus_VOS#File_system">Stratos VOS</a>?</li>
<li>[@51:40](https://youtu.be/JDd8xGSP9DA?t=3100) James’ experience working on Tomcat <ul>
<li>Joel’s (2002) <em>Lord Palmerston on Programming</em> <a href="https://www.joelonsoftware.com/2002/12/11/lord-palmerston-on-programming/">blog</a>
</li>
<li>Graphics toolkits, Electron/Web vs Native</li>
</ul>
</li>
<li>[@1:05:21](https://youtu.be/JDd8xGSP9DA?t=3921) “OpenSolaris downloads are potential buyers for the ZFS appliance”</li>
<li>[@1:06:17](https://youtu.be/JDd8xGSP9DA?t=3977) Jason Hoffman “<a href="https://web.archive.org/web/20090207083715/joyeur.com/2006/03/20/the-sun-doesnt-shine-on-me">The Sun does not shine on me</a>” <ul>
<li>Strategy cannot make up for poor execution</li>
<li>Sun CEO Jonathan Schwartz didn’t travel to meet customers</li>
<li>Demoing to a hostile audience</li>
<li>“Asteroid named Linux on a collision course” <a href="https://twitter.com/bcantrill/status/1444358643051237376">tweet</a>
</li>
</ul>
</li>
<li>[@1:13:20](https://youtu.be/JDd8xGSP9DA?t=4400) <a href="https://en.wikipedia.org/wiki/Open-core_model">Open-core</a>, AWS services, monetizing open source <ul>
<li>“People <em>will</em> pay for a service”</li>
<li>Could Apple open source?</li>
</ul>
</li>
<li>[@1:18:43](https://youtu.be/JDd8xGSP9DA?t=4723) Packaged solutions; giving mom a linux box. Free software: free for whom? <ul><li>Support relationships. People want support</li></ul>
</li>
<li>[@1:22:05](https://youtu.be/JDd8xGSP9DA?t=4925) Why didn’t Sun embrace Linux? <ul>
<li>ZFS on Linux, Ubuntu</li>
<li>
<a href="https://web.archive.org/web/20130326031244/http://www.bitmover.com/lm/papers/srcos.html">The Sourceware Operating System Proposal</a> – <a href="https://en.wikipedia.org/wiki/Larry_McVoy">Larry McVoy</a>’s open source SunOS 4 proposal.</li>
<li>Sun bought Cobalt <a href="https://en.wikipedia.org/wiki/Cobalt_Networks">wiki</a>
</li>
</ul>
</li>
<li>[@1:25:33](https://youtu.be/JDd8xGSP9DA?t=5133) “The writing was on the wall for Sun..” <ul>
<li>x86 price-performance</li>
<li>“Couldn’t you buy like 100 x86 computers for that price?”</li>
<li>RISC machine in-fighting, while Intel undercuts the market</li>
</ul>
</li>
<li>[@1:31:01](https://youtu.be/JDd8xGSP9DA?t=5461) Josh’s work on frustrating hardware configuration</li>
<li>[@1:33:25](https://youtu.be/JDd8xGSP9DA?t=5605) Peter’s experience as a Sun customer <ul>
<li>Vertical scaling, but not so much horizontal scaling</li>
<li>Clusters of cheap commodity hardware outperforming big multiway boxes</li>
<li>Importance of open source for big internet companies</li>
<li>Traders used Sun workstations, for fast trading</li>
</ul>
</li>
<li>[@1:38:39](https://youtu.be/JDd8xGSP9DA?t=5919) Oxide is bringing up their first server boards!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 04 Oct 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/046b64ad/f0a2009d.mp3" length="95441824" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5965</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: October 4th, 2021</b></p><p>Economics and Open Source</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/JDd8xGSP9DA">the recording for our Twitter Space for October 4th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on October 4th included <a href="https://twitter.com/EdwinPeer">Edwin Peer</a>, <a href="https://twitter.com/jwtodd">James Todd</a>, <a href="https://twitter.com/PeterCorless">Peter Corless</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/jasonbking">jasonbking</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/caffeinepresent">Joe Thompson</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/AstroBurnham">Tim Burnham</a>, and <a href="https://twitter.com/ZackMaril">vint serp</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Mark Jones Lorenzo (2017) <em>Endless Loop: The History of the BASIC Programming Language</em> <a href="https://www.google.com/books/edition/Endless_Loop/G8ELtAEACAAJ">book</a><ul><li>John Kemeny <a href="https://en.wikipedia.org/wiki/John_G._Kemeny">wiki</a>
</li></ul>
</li>
<li>[@3:11](https://youtu.be/JDd8xGSP9DA?t=191) Tim’s excellent <a href="https://twitter.com/AstroBurnham/status/1444717950477422599">tweet</a><ul>
<li>William Gibson <a href="https://en.wikipedia.org/wiki/William_Gibson">wiki</a>
</li>
<li>John Browne (1996) <em>The Bug Count Also Rises</em> <a href="http://www.workpump.com/bugcount/bugcount.html">short story</a>
</li>
</ul>
</li>
<li>[@5:38](https://youtu.be/JDd8xGSP9DA?t=338) Growing up with BASIC</li>
<li>[@8:03](https://youtu.be/JDd8xGSP9DA?t=483) Braille ’n Speak PDA (<a href="https://youtu.be/RAvGNixqSIU">intro video</a>), BASIC programming</li>
<li>
<a href="https://en.wikipedia.org/wiki/TI-BASIC">TI-BASIC</a> language</li>
<li>[@10:39](https://youtu.be/JDd8xGSP9DA?t=639) Speaking program reading off system calls in real time <ul><li>
<a href="https://docs.oracle.com/cd/E19253-01/816-5166/snoop-1m/index.html">snoop</a> could output to /dev/audio</li></ul>
</li>
<li>[@13:39](https://youtu.be/JDd8xGSP9DA?t=819) Joel Spolsky (2002) <em>Strategy Letter V</em> <a href="https://www.joelonsoftware.com/2002/06/12/strategy-letter-v/">blog</a><ul>
<li>Bryan’s (2004) <em>The Economics of Software</em> <a href="http://dtrace.org/blogs/bmc/2004/08/28/the-economics-of-software/">blog</a>
</li>
<li>Software “maintenance”</li>
</ul>
</li>
<li>[@20:02](https://youtu.be/JDd8xGSP9DA?t=1202) Cathedral and the Bazaar, <a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar">wiki</a><ul><li>“Forkophilic” development model and the <a href="https://lkml.org/lkml/2001/5/25/214">Alan Cox -ac Linux tree</a>
</li></ul>
</li>
<li>[@26:07](https://youtu.be/JDd8xGSP9DA?t=1567) Open source as something in the commercial best interest of a business <ul>
<li>SCO v IBM <a href="https://en.wikipedia.org/wiki/SCO_Group,_Inc._v._International_Business_Machines_Corp.">wiki</a>
</li>
<li>Halloween documents <a href="https://en.wikipedia.org/wiki/Halloween_documents">wiki</a>
</li>
<li>Steve Ballmer’s “Linux is a cancer” quote in the <a href="https://web.archive.org/web/20011108013601/http://www.suntimes.com/output/tech/cst-fin-micro01.html">Chicago Sun-Times</a>
</li>
<li>OpenOffice.org <a href="https://en.wikipedia.org/wiki/OpenOffice.org">wiki</a> (open sourced from <a href="https://en.wikipedia.org/wiki/StarOffice">StarOffice</a>)</li>
</ul>
</li>
<li>[@30:29](https://youtu.be/JDd8xGSP9DA?t=1829) Document editing as a service. Services and open source</li>
<li>Richard Stallman on <a href="https://www.gnu.org/philosophy/who-does-that-server-really-serve.en.html">SaaS</a>
</li>
<li>[@33:34](https://youtu.be/JDd8xGSP9DA?t=2014) The Joel Test <a href="https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/">link</a><ul>
<li>Joel’s (2007) <em>Strategy Letter VI</em> <a href="https://www.joelonsoftware.com/2007/09/18/strategy-letter-vi/">blog</a>
</li>
<li>“Everybody wants to be a platform”</li>
</ul>
</li>
<li>[@38:58](https://youtu.be/JDd8xGSP9DA?t=2338) Joel’s take on Sun <ul>
<li>Making the pie larger. Porting NFS to rival platforms</li>
<li>
<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.116.8621">The Sun Network Filesystem: Design, Implementation and Experience</a> has a section on porting experiences.</li>
<li>Monetizing software - “Sun could never monetize software, only hardware”</li>
</ul>
</li>
<li>[@44:44](https://youtu.be/JDd8xGSP9DA?t=2684) Window toolkits, “cross platform”, write once run anywhere</li>
<li>“Write once, debug everywhere”</li>
<li>What’s the directory separator on <a href="https://en.wikipedia.org/wiki/MVS#MVS_filesystem">MVS</a>? or <a href="https://en.wikipedia.org/wiki/Stratus_VOS#File_system">Stratos VOS</a>?</li>
<li>[@51:40](https://youtu.be/JDd8xGSP9DA?t=3100) James’ experience working on Tomcat <ul>
<li>Joel’s (2002) <em>Lord Palmerston on Programming</em> <a href="https://www.joelonsoftware.com/2002/12/11/lord-palmerston-on-programming/">blog</a>
</li>
<li>Graphics toolkits, Electron/Web vs Native</li>
</ul>
</li>
<li>[@1:05:21](https://youtu.be/JDd8xGSP9DA?t=3921) “OpenSolaris downloads are potential buyers for the ZFS appliance”</li>
<li>[@1:06:17](https://youtu.be/JDd8xGSP9DA?t=3977) Jason Hoffman “<a href="https://web.archive.org/web/20090207083715/joyeur.com/2006/03/20/the-sun-doesnt-shine-on-me">The Sun does not shine on me</a>” <ul>
<li>Strategy cannot make up for poor execution</li>
<li>Sun CEO Jonathan Schwartz didn’t travel to meet customers</li>
<li>Demoing to a hostile audience</li>
<li>“Asteroid named Linux on a collision course” <a href="https://twitter.com/bcantrill/status/1444358643051237376">tweet</a>
</li>
</ul>
</li>
<li>[@1:13:20](https://youtu.be/JDd8xGSP9DA?t=4400) <a href="https://en.wikipedia.org/wiki/Open-core_model">Open-core</a>, AWS services, monetizing open source <ul>
<li>“People <em>will</em> pay for a service”</li>
<li>Could Apple open source?</li>
</ul>
</li>
<li>[@1:18:43](https://youtu.be/JDd8xGSP9DA?t=4723) Packaged solutions; giving mom a linux box. Free software: free for whom? <ul><li>Support relationships. People want support</li></ul>
</li>
<li>[@1:22:05](https://youtu.be/JDd8xGSP9DA?t=4925) Why didn’t Sun embrace Linux? <ul>
<li>ZFS on Linux, Ubuntu</li>
<li>
<a href="https://web.archive.org/web/20130326031244/http://www.bitmover.com/lm/papers/srcos.html">The Sourceware Operating System Proposal</a> – <a href="https://en.wikipedia.org/wiki/Larry_McVoy">Larry McVoy</a>’s open source SunOS 4 proposal.</li>
<li>Sun bought Cobalt <a href="https://en.wikipedia.org/wiki/Cobalt_Networks">wiki</a>
</li>
</ul>
</li>
<li>[@1:25:33](https://youtu.be/JDd8xGSP9DA?t=5133) “The writing was on the wall for Sun..” <ul>
<li>x86 price-performance</li>
<li>“Couldn’t you buy like 100 x86 computers for that price?”</li>
<li>RISC machine in-fighting, while Intel undercuts the market</li>
</ul>
</li>
<li>[@1:31:01](https://youtu.be/JDd8xGSP9DA?t=5461) Josh’s work on frustrating hardware configuration</li>
<li>[@1:33:25](https://youtu.be/JDd8xGSP9DA?t=5605) Peter’s experience as a Sun customer <ul>
<li>Vertical scaling, but not so much horizontal scaling</li>
<li>Clusters of cheap commodity hardware outperforming big multiway boxes</li>
<li>Importance of open source for big internet companies</li>
<li>Traders used Sun workstations, for fast trading</li>
</ul>
</li>
<li>[@1:38:39](https://youtu.be/JDd8xGSP9DA?t=5919) Oxide is bringing up their first server boards!</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Books in the Box</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>16</itunes:episode>
      <podcast:episode>16</podcast:episode>
      <itunes:title>The Books in the Box</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">860e4093-3b81-4f5f-8ba8-9e665c404e10</guid>
      <link>https://share.transistor.fm/s/7809611e</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 27th, 2021</b></p><p>The Books in the Box</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/zrZAHO89XGk">the recording for our Twitter Space for September 27th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 27th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a> <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/Penguin">Jeremy Tanner</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/AstroBurnham">Tim Burnham</a>, and <a href="https://twitter.com/nrr">Nathaniel Reindl</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Not recommended :-( <ul>
<li>Dave Hitz and Pat Walsh (2008) <em>How to Castrate a Bull</em> <a href="https://www.google.com/books/edition/How_to_Castrate_a_Bull/zpefDwAAQBAJ">book</a>
</li>
<li>Peter Thiel (2014) <em>Zero to One</em> <a href="https://en.wikipedia.org/wiki/Zero_to_One">book</a>
</li>
</ul>
</li>
<li>[@2:45](https://youtu.be/zrZAHO89XGk?t=165) David Jacques Gerber (2015) <em>The Inventor’s Dilemma: The Remarkable Life of H. Joseph Gerber</em> <a href="https://www.google.com/books/edition/The_Inventor_s_Dilemma/8YKqCgAAQBAJ">book</a>
</li>
<li>[@7:21](https://youtu.be/zrZAHO89XGk?t=441) Sidney Dekker (2011) <em>Drift into Failure: From Hunting Broken Components to Understanding Complex Systems</em> <a href="https://www.google.com/books/edition/Drift_into_Failure/uOF6BgAAQBAJ">book</a>
</li>
<li>[@13:08](https://youtu.be/zrZAHO89XGk?t=788) Robert Buderi (1996) <em>The Invention that Changed the World: The Story of Radar from War to Peace</em> <a href="https://www.google.com/books/edition/The_Invention_that_Changed_the_World/-fqiGwAACAAJ">book</a><ul>
<li>MIT Rad Lab Series <a href="http://web.mit.edu/klund/www/books/radlab.html">info</a>
</li>
<li>Nuclear Magnetic Resonance <a href="https://en.wikipedia.org/wiki/Nuclear_magnetic_resonance">wiki</a>
</li>
<li>Richard Rhodes (1995) <em>Dark Sun: The Making of the Hydrogen Bomb</em> <a href="https://www.google.com/books/edition/Dark_Sun/x4vfAAAAMAAJ">book</a>
</li>
<li>Michael Riordan and Lillian Hoddeson (1997) <em>Crystal Fire: The Birth of the Information Age</em> <a href="https://www.google.com/books/edition/Crystal_Fire/0bTpcTLCu6MC">book</a>
</li>
<li>Craig Canine (1995) <em>Dream Reaper: The Story of an Old-Fashioned Inventor in the High-Tech, High-Stakes World of Modern Agriculture</em> <a href="https://www.google.com/books/edition/Dream_Reaper/ONa3Jh0Fq7oC">book</a>
</li>
<li>David Fisher and Marshall Fisher (1996) <em>Tube: The Invention of Television</em> <a href="https://www.google.com/books/edition/Tube/eApTAAAAMAAJ">book</a>
</li>
<li>Michael Hiltzik (2015) <em>Big Science: Ernest Lawrence and the Invention that Launched the Military-Industrial Complex</em> <a href="https://www.google.com/books/edition/Big_Science/vT0jBQAAQBAJ">book</a>
</li>
</ul>
</li>
<li>[@18:05](https://youtu.be/zrZAHO89XGk?t=1085) Ben Rich and Leo Janos (1994) <em>Skunk Works: A Personal Memoir of My Years at Lockheed</em> <a href="https://www.google.com/books/edition/Skunk_Works/OI9cDwAAQBAJ">book</a>
</li>
<li>Network Software Environment</li>
<li>
<a href="https://en.wikipedia.org/wiki/Lockheed_SR-71_Blackbird">Lockheed SR-71</a> on display at the <a href="https://www.intrepidmuseum.org/">Sea, Air and Space Museum</a> in NYC.</li>
<li>[@26:52](https://youtu.be/zrZAHO89XGk?t=1612) Brian Dear (2017) <em>The Friendly Orange Glow: The Untold Story of the Rise of Cyberculture</em> <a href="https://www.google.com/books/edition/The_Friendly_Orange_Glow/NqknDgAAQBAJ">book</a>
</li>
<li>[@30:15](https://youtu.be/zrZAHO89XGk?t=1815) Randall Stross (1993) <em>Steve Jobs and the NeXT Big Thing</em> <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">book</a>
</li>
<li>[@32:21](https://youtu.be/zrZAHO89XGk?t=1941) Christophe Lécuyer and David C. Brock (2010) <em>Makers of the Microchip: A Documentary History of Fairchild Semiconductor</em> <a href="https://www.google.com/books/edition/Makers_of_the_Microchip/iov-DwAAQBAJ">book</a>
</li>
<li>[@33:06](https://youtu.be/zrZAHO89XGk?t=1986) Lamont Wood (2012) <em>Datapoint: The Lost Story of the Texans Who Invented the Personal Computer Revolution</em> <a href="https://www.google.com/books/edition/Datapoint_The_Lost_Story_of_the_Texans_W/idTeAAAAQBAJ">book</a>
</li>
<li>Charles Kenney (1992) <em>Riding the Runaway Horse: The Rise and Decline of Wang Laboratories</em> <a href="https://www.google.com/books/edition/Riding_the_Runaway_Horse/GY19QgAACAAJ">book</a><ul><li>Tom’s <a href="https://twitter.com/aka_pugs/status/1370950825724366848">tweet</a>
</li></ul>
</li>
<li>[@34:06](https://youtu.be/zrZAHO89XGk?t=2046) Bryan’s Lost Box of Books!</li>
<li>Edgar H. Schein et al (2003) <em>DEC is Dead, Long Live DEC: The Lasting Legacy of Digital Equipment Corporation</em> <a href="https://www.google.com/books/edition/DEC_Is_Dead_Long_Live_DEC/G07yAAAAMAAJ">book</a>
</li>
<li>[@36:56](https://youtu.be/zrZAHO89XGk?t=2216) Alan Payne (2021) <em>Built to Fail: The Inside Story of Blockbuster’s Inevitable Bust</em> <a href="https://g.co/kgs/gpT44T">book</a><ul><li>Videotape format war <a href="https://en.wikipedia.org/wiki/Videotape_format_war">wiki</a>
</li></ul>
</li>
<li>Hackers (1995) <a href="https://en.wikipedia.org/wiki/Hackers_(film)">movie</a>. Watch the <a href="https://youtu.be/Rn2cf_wJ4f4?t=10">trailer</a> ~2mins</li>
<li>Steven Levy (1984) <em>Hackers: Heroes of the Computer Revolution</em> <a href="https://en.wikipedia.org/wiki/Hackers:_Heroes_of_the_Computer_Revolution">book</a>
</li>
<li>[@42:32](https://youtu.be/zrZAHO89XGk?t=2552) Paul Halmos (1985) <em>I Want to be a Mathematician: An Automathography</em> <a href="https://www.google.com/books/edition/I_Want_to_be_a_Mathematician/hhpZAAAAYAAJ">book</a>
</li>
<li>Paul Hoffman (1998) <em>The Man Who Loved Only Numbers</em> about Paul Erdős <a href="https://en.wikipedia.org/wiki/The_Man_Who_Loved_Only_Numbers">book</a>
</li>
<li>1981 text adventure game for the Apple II by Sierra On-Line, “Softporn Adventure” (<a href="https://en.wikipedia.org/wiki/Softporn_Adventure">wiki</a>)</li>
<li>[@49:16](https://youtu.be/zrZAHO89XGk?t=2956) Douglas Engelbart <em>The Mother of All Demos</em> <a href="https://en.wikipedia.org/wiki/The_Mother_of_All_Demos">wiki</a><ul><li>John Markoff (2005) <em>What the Dormouse Said: How the Sixties Counterculture Shaped the Personal Computer Industry</em> <a href="https://en.wikipedia.org/wiki/What_the_Dormouse_Said">book</a>
</li></ul>
</li>
<li>Katie Hafner and Matthew Lyon (1998) <em>Where Wizards Stay Up Late</em> <a href="https://www.google.com/books/edition/Where_Wizards_Stay_Up_Late/H6ZzQhM0vSYC">book</a>
</li>
<li>1972 <em>Computer Networks: The Heralds of Resource Sharing</em> <a href="https://archive.org/details/ComputerNetworks_TheHeraldsOfResourceSharing">documentary</a> ~26mins (<a href="https://en.wikipedia.org/wiki/Computer_Networks:_The_Heralds_of_Resource_Sharing">wiki</a>) included big names like Corbató, Licklider and Bob Kahn.</li>
<li>Gordon Moore (1965) <em>Cramming more components onto integrated circuits</em> <a href="https://scholar.google.com/scholar_lookup?author=moore&amp;title=cramming+more+components+onto+integrated+circuits">paper</a> and Moore’s Law <a href="https://en.wikipedia.org/wiki/Moore%27s_law">wiki</a>
</li>
<li>[@52:37](https://youtu.be/zrZAHO89XGk?t=3157) Physicists, mathematicians, number theory, proofs <ul>
<li>Wiles’s proof of Fermat’s Last Theorem 1993 <a href="https://en.wikipedia.org/wiki/Wiles%27s_proof_of_Fermat%27s_Last_Theorem">wiki</a>
</li>
<li>Simon Singh (1997) <em>Fermat’s Last Theorem</em> <a href="https://en.wikipedia.org/wiki/Fermat%27s_Last_Theorem_(book)">book</a>
</li>
<li>Ronald Calinger (2015) <em>Leonhard Euler: Mathematical Genius in the Enlightenment</em> purports to be the first full-scale “comprehensive and authoritative” <a href="https://www.google.com/books/edition/Leonhard_Euler/TM2bDwAAQBAJ">biography</a>
</li>
</ul>
</li>
<li>[@1:00:12](https://youtu.be/zrZAHO89XGk?t=3612) Robert X. Cringely (1992) <em>Accidental Empires: How the Boys of Silicon Valley Make Their Millions, Battle Foreign Competition, and Still Can’t Get a Date</em> <a href="https://en.wikipedia.org/wiki/Accidental_Empires">book</a>
</li>
<li>Jerry Kaplan (1996) <em>Startup: A Silicon Valley Adventure</em> <a href="https://www.google.com/books/edition/Startup/dih2GDy5cHEC">book</a>
</li>
<li>Brian Kernighan (2019) <em>UNIX: A History and a Memoir</em> <a href="https://www.google.com/books/edition/Unix/s0n9ygEACAAJ">book</a>
</li>
<li>[@1:03:03](https://youtu.be/zrZAHO89XGk?t=3783) Douglas Coupland (1995) <em>Microserfs</em> <a href="https://en.wikipedia.org/wiki/Microserfs">book</a><ul>
<li>Douglas Coupland (1991) <em>Generation X: Tales for an Accelerated Culture</em> <a href="https://en.wikipedia.org/wiki/Generation_X:_Tales_for_an_Accelerated_Culture">book</a>
</li>
<li>Fry’s Electronics <a href="https://en.wikipedia.org/wiki/Fry's_Electronics">wiki</a>
</li>
</ul>
</li>
<li>[@1:06:49](https://youtu.be/zrZAHO89XGk?t=4009) Michael A. Hiltzik (1999) <em>Dealers of Lightning: Xerox PARC and the Dawn of the Computer Age</em> <a href="https://www.google.com/books/edition/Dealers_of_Lightning/EylLmLzFCTMC">book</a>
</li>
<li>Albert Cory (pen name for Bob Purvy) (2021) <em>Inventing the Future</em> <a href="https://www.google.com/books/edition/Inventing_the_Future/T4tCzgEACAAJ">book</a><ul><li>Xerox Star <a href="https://en.wikipedia.org/wiki/Xerox_Star">wiki</a>
</li></ul>
</li>
<li>[@1:11:20](https://youtu.be/zrZAHO89XGk?t=4280) Corporate espionage, VMWare and Parallels, Cadence v. Avanti <a href="https://en.wikipedia.org/wiki/Cadence_Design_Systems,_Inc._v._Avanti_Corp">wiki</a>, Cisco and Huawei (<a href="https://www.wired.com/story/us-hits-huawei-new-charges-trade-secret-theft/">article</a>)</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 27th, 2021</b></p><p>The Books in the Box</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/zrZAHO89XGk">the recording for our Twitter Space for September 27th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 27th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a> <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/Penguin">Jeremy Tanner</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/AstroBurnham">Tim Burnham</a>, and <a href="https://twitter.com/nrr">Nathaniel Reindl</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Not recommended :-( <ul>
<li>Dave Hitz and Pat Walsh (2008) <em>How to Castrate a Bull</em> <a href="https://www.google.com/books/edition/How_to_Castrate_a_Bull/zpefDwAAQBAJ">book</a>
</li>
<li>Peter Thiel (2014) <em>Zero to One</em> <a href="https://en.wikipedia.org/wiki/Zero_to_One">book</a>
</li>
</ul>
</li>
<li>[@2:45](https://youtu.be/zrZAHO89XGk?t=165) David Jacques Gerber (2015) <em>The Inventor’s Dilemma: The Remarkable Life of H. Joseph Gerber</em> <a href="https://www.google.com/books/edition/The_Inventor_s_Dilemma/8YKqCgAAQBAJ">book</a>
</li>
<li>[@7:21](https://youtu.be/zrZAHO89XGk?t=441) Sidney Dekker (2011) <em>Drift into Failure: From Hunting Broken Components to Understanding Complex Systems</em> <a href="https://www.google.com/books/edition/Drift_into_Failure/uOF6BgAAQBAJ">book</a>
</li>
<li>[@13:08](https://youtu.be/zrZAHO89XGk?t=788) Robert Buderi (1996) <em>The Invention that Changed the World: The Story of Radar from War to Peace</em> <a href="https://www.google.com/books/edition/The_Invention_that_Changed_the_World/-fqiGwAACAAJ">book</a><ul>
<li>MIT Rad Lab Series <a href="http://web.mit.edu/klund/www/books/radlab.html">info</a>
</li>
<li>Nuclear Magnetic Resonance <a href="https://en.wikipedia.org/wiki/Nuclear_magnetic_resonance">wiki</a>
</li>
<li>Richard Rhodes (1995) <em>Dark Sun: The Making of the Hydrogen Bomb</em> <a href="https://www.google.com/books/edition/Dark_Sun/x4vfAAAAMAAJ">book</a>
</li>
<li>Michael Riordan and Lillian Hoddeson (1997) <em>Crystal Fire: The Birth of the Information Age</em> <a href="https://www.google.com/books/edition/Crystal_Fire/0bTpcTLCu6MC">book</a>
</li>
<li>Craig Canine (1995) <em>Dream Reaper: The Story of an Old-Fashioned Inventor in the High-Tech, High-Stakes World of Modern Agriculture</em> <a href="https://www.google.com/books/edition/Dream_Reaper/ONa3Jh0Fq7oC">book</a>
</li>
<li>David Fisher and Marshall Fisher (1996) <em>Tube: The Invention of Television</em> <a href="https://www.google.com/books/edition/Tube/eApTAAAAMAAJ">book</a>
</li>
<li>Michael Hiltzik (2015) <em>Big Science: Ernest Lawrence and the Invention that Launched the Military-Industrial Complex</em> <a href="https://www.google.com/books/edition/Big_Science/vT0jBQAAQBAJ">book</a>
</li>
</ul>
</li>
<li>[@18:05](https://youtu.be/zrZAHO89XGk?t=1085) Ben Rich and Leo Janos (1994) <em>Skunk Works: A Personal Memoir of My Years at Lockheed</em> <a href="https://www.google.com/books/edition/Skunk_Works/OI9cDwAAQBAJ">book</a>
</li>
<li>Network Software Environment</li>
<li>
<a href="https://en.wikipedia.org/wiki/Lockheed_SR-71_Blackbird">Lockheed SR-71</a> on display at the <a href="https://www.intrepidmuseum.org/">Sea, Air and Space Museum</a> in NYC.</li>
<li>[@26:52](https://youtu.be/zrZAHO89XGk?t=1612) Brian Dear (2017) <em>The Friendly Orange Glow: The Untold Story of the Rise of Cyberculture</em> <a href="https://www.google.com/books/edition/The_Friendly_Orange_Glow/NqknDgAAQBAJ">book</a>
</li>
<li>[@30:15](https://youtu.be/zrZAHO89XGk?t=1815) Randall Stross (1993) <em>Steve Jobs and the NeXT Big Thing</em> <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">book</a>
</li>
<li>[@32:21](https://youtu.be/zrZAHO89XGk?t=1941) Christophe Lécuyer and David C. Brock (2010) <em>Makers of the Microchip: A Documentary History of Fairchild Semiconductor</em> <a href="https://www.google.com/books/edition/Makers_of_the_Microchip/iov-DwAAQBAJ">book</a>
</li>
<li>[@33:06](https://youtu.be/zrZAHO89XGk?t=1986) Lamont Wood (2012) <em>Datapoint: The Lost Story of the Texans Who Invented the Personal Computer Revolution</em> <a href="https://www.google.com/books/edition/Datapoint_The_Lost_Story_of_the_Texans_W/idTeAAAAQBAJ">book</a>
</li>
<li>Charles Kenney (1992) <em>Riding the Runaway Horse: The Rise and Decline of Wang Laboratories</em> <a href="https://www.google.com/books/edition/Riding_the_Runaway_Horse/GY19QgAACAAJ">book</a><ul><li>Tom’s <a href="https://twitter.com/aka_pugs/status/1370950825724366848">tweet</a>
</li></ul>
</li>
<li>[@34:06](https://youtu.be/zrZAHO89XGk?t=2046) Bryan’s Lost Box of Books!</li>
<li>Edgar H. Schein et al (2003) <em>DEC is Dead, Long Live DEC: The Lasting Legacy of Digital Equipment Corporation</em> <a href="https://www.google.com/books/edition/DEC_Is_Dead_Long_Live_DEC/G07yAAAAMAAJ">book</a>
</li>
<li>[@36:56](https://youtu.be/zrZAHO89XGk?t=2216) Alan Payne (2021) <em>Built to Fail: The Inside Story of Blockbuster’s Inevitable Bust</em> <a href="https://g.co/kgs/gpT44T">book</a><ul><li>Videotape format war <a href="https://en.wikipedia.org/wiki/Videotape_format_war">wiki</a>
</li></ul>
</li>
<li>Hackers (1995) <a href="https://en.wikipedia.org/wiki/Hackers_(film)">movie</a>. Watch the <a href="https://youtu.be/Rn2cf_wJ4f4?t=10">trailer</a> ~2mins</li>
<li>Steven Levy (1984) <em>Hackers: Heroes of the Computer Revolution</em> <a href="https://en.wikipedia.org/wiki/Hackers:_Heroes_of_the_Computer_Revolution">book</a>
</li>
<li>[@42:32](https://youtu.be/zrZAHO89XGk?t=2552) Paul Halmos (1985) <em>I Want to be a Mathematician: An Automathography</em> <a href="https://www.google.com/books/edition/I_Want_to_be_a_Mathematician/hhpZAAAAYAAJ">book</a>
</li>
<li>Paul Hoffman (1998) <em>The Man Who Loved Only Numbers</em> about Paul Erdős <a href="https://en.wikipedia.org/wiki/The_Man_Who_Loved_Only_Numbers">book</a>
</li>
<li>1981 text adventure game for the Apple II by Sierra On-Line, “Softporn Adventure” (<a href="https://en.wikipedia.org/wiki/Softporn_Adventure">wiki</a>)</li>
<li>[@49:16](https://youtu.be/zrZAHO89XGk?t=2956) Douglas Engelbart <em>The Mother of All Demos</em> <a href="https://en.wikipedia.org/wiki/The_Mother_of_All_Demos">wiki</a><ul><li>John Markoff (2005) <em>What the Dormouse Said: How the Sixties Counterculture Shaped the Personal Computer Industry</em> <a href="https://en.wikipedia.org/wiki/What_the_Dormouse_Said">book</a>
</li></ul>
</li>
<li>Katie Hafner and Matthew Lyon (1998) <em>Where Wizards Stay Up Late</em> <a href="https://www.google.com/books/edition/Where_Wizards_Stay_Up_Late/H6ZzQhM0vSYC">book</a>
</li>
<li>1972 <em>Computer Networks: The Heralds of Resource Sharing</em> <a href="https://archive.org/details/ComputerNetworks_TheHeraldsOfResourceSharing">documentary</a> ~26mins (<a href="https://en.wikipedia.org/wiki/Computer_Networks:_The_Heralds_of_Resource_Sharing">wiki</a>) included big names like Corbató, Licklider and Bob Kahn.</li>
<li>Gordon Moore (1965) <em>Cramming more components onto integrated circuits</em> <a href="https://scholar.google.com/scholar_lookup?author=moore&amp;title=cramming+more+components+onto+integrated+circuits">paper</a> and Moore’s Law <a href="https://en.wikipedia.org/wiki/Moore%27s_law">wiki</a>
</li>
<li>[@52:37](https://youtu.be/zrZAHO89XGk?t=3157) Physicists, mathematicians, number theory, proofs <ul>
<li>Wiles’s proof of Fermat’s Last Theorem 1993 <a href="https://en.wikipedia.org/wiki/Wiles%27s_proof_of_Fermat%27s_Last_Theorem">wiki</a>
</li>
<li>Simon Singh (1997) <em>Fermat’s Last Theorem</em> <a href="https://en.wikipedia.org/wiki/Fermat%27s_Last_Theorem_(book)">book</a>
</li>
<li>Ronald Calinger (2015) <em>Leonhard Euler: Mathematical Genius in the Enlightenment</em> purports to be the first full-scale “comprehensive and authoritative” <a href="https://www.google.com/books/edition/Leonhard_Euler/TM2bDwAAQBAJ">biography</a>
</li>
</ul>
</li>
<li>[@1:00:12](https://youtu.be/zrZAHO89XGk?t=3612) Robert X. Cringely (1992) <em>Accidental Empires: How the Boys of Silicon Valley Make Their Millions, Battle Foreign Competition, and Still Can’t Get a Date</em> <a href="https://en.wikipedia.org/wiki/Accidental_Empires">book</a>
</li>
<li>Jerry Kaplan (1996) <em>Startup: A Silicon Valley Adventure</em> <a href="https://www.google.com/books/edition/Startup/dih2GDy5cHEC">book</a>
</li>
<li>Brian Kernighan (2019) <em>UNIX: A History and a Memoir</em> <a href="https://www.google.com/books/edition/Unix/s0n9ygEACAAJ">book</a>
</li>
<li>[@1:03:03](https://youtu.be/zrZAHO89XGk?t=3783) Douglas Coupland (1995) <em>Microserfs</em> <a href="https://en.wikipedia.org/wiki/Microserfs">book</a><ul>
<li>Douglas Coupland (1991) <em>Generation X: Tales for an Accelerated Culture</em> <a href="https://en.wikipedia.org/wiki/Generation_X:_Tales_for_an_Accelerated_Culture">book</a>
</li>
<li>Fry’s Electronics <a href="https://en.wikipedia.org/wiki/Fry's_Electronics">wiki</a>
</li>
</ul>
</li>
<li>[@1:06:49](https://youtu.be/zrZAHO89XGk?t=4009) Michael A. Hiltzik (1999) <em>Dealers of Lightning: Xerox PARC and the Dawn of the Computer Age</em> <a href="https://www.google.com/books/edition/Dealers_of_Lightning/EylLmLzFCTMC">book</a>
</li>
<li>Albert Cory (pen name for Bob Purvy) (2021) <em>Inventing the Future</em> <a href="https://www.google.com/books/edition/Inventing_the_Future/T4tCzgEACAAJ">book</a><ul><li>Xerox Star <a href="https://en.wikipedia.org/wiki/Xerox_Star">wiki</a>
</li></ul>
</li>
<li>[@1:11:20](https://youtu.be/zrZAHO89XGk?t=4280) Corporate espionage, VMWare and Parallels, Cadence v. Avanti <a href="https://en.wikipedia.org/wiki/Cadence_Design_Systems,_Inc._v._Avanti_Corp">wiki</a>, Cisco and Huawei (<a href="https://www.wired.com/story/us-hits-huawei-new-charges-trade-secret-theft/">article</a>)</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 27 Sep 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/7809611e/0912aabd.mp3" length="74212758" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4638</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 27th, 2021</b></p><p>The Books in the Box</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/zrZAHO89XGk">the recording for our Twitter Space for September 27th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 27th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a> <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/Penguin">Jeremy Tanner</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/AstroBurnham">Tim Burnham</a>, and <a href="https://twitter.com/nrr">Nathaniel Reindl</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Not recommended :-( <ul>
<li>Dave Hitz and Pat Walsh (2008) <em>How to Castrate a Bull</em> <a href="https://www.google.com/books/edition/How_to_Castrate_a_Bull/zpefDwAAQBAJ">book</a>
</li>
<li>Peter Thiel (2014) <em>Zero to One</em> <a href="https://en.wikipedia.org/wiki/Zero_to_One">book</a>
</li>
</ul>
</li>
<li>[@2:45](https://youtu.be/zrZAHO89XGk?t=165) David Jacques Gerber (2015) <em>The Inventor’s Dilemma: The Remarkable Life of H. Joseph Gerber</em> <a href="https://www.google.com/books/edition/The_Inventor_s_Dilemma/8YKqCgAAQBAJ">book</a>
</li>
<li>[@7:21](https://youtu.be/zrZAHO89XGk?t=441) Sidney Dekker (2011) <em>Drift into Failure: From Hunting Broken Components to Understanding Complex Systems</em> <a href="https://www.google.com/books/edition/Drift_into_Failure/uOF6BgAAQBAJ">book</a>
</li>
<li>[@13:08](https://youtu.be/zrZAHO89XGk?t=788) Robert Buderi (1996) <em>The Invention that Changed the World: The Story of Radar from War to Peace</em> <a href="https://www.google.com/books/edition/The_Invention_that_Changed_the_World/-fqiGwAACAAJ">book</a><ul>
<li>MIT Rad Lab Series <a href="http://web.mit.edu/klund/www/books/radlab.html">info</a>
</li>
<li>Nuclear Magnetic Resonance <a href="https://en.wikipedia.org/wiki/Nuclear_magnetic_resonance">wiki</a>
</li>
<li>Richard Rhodes (1995) <em>Dark Sun: The Making of the Hydrogen Bomb</em> <a href="https://www.google.com/books/edition/Dark_Sun/x4vfAAAAMAAJ">book</a>
</li>
<li>Michael Riordan and Lillian Hoddeson (1997) <em>Crystal Fire: The Birth of the Information Age</em> <a href="https://www.google.com/books/edition/Crystal_Fire/0bTpcTLCu6MC">book</a>
</li>
<li>Craig Canine (1995) <em>Dream Reaper: The Story of an Old-Fashioned Inventor in the High-Tech, High-Stakes World of Modern Agriculture</em> <a href="https://www.google.com/books/edition/Dream_Reaper/ONa3Jh0Fq7oC">book</a>
</li>
<li>David Fisher and Marshall Fisher (1996) <em>Tube: The Invention of Television</em> <a href="https://www.google.com/books/edition/Tube/eApTAAAAMAAJ">book</a>
</li>
<li>Michael Hiltzik (2015) <em>Big Science: Ernest Lawrence and the Invention that Launched the Military-Industrial Complex</em> <a href="https://www.google.com/books/edition/Big_Science/vT0jBQAAQBAJ">book</a>
</li>
</ul>
</li>
<li>[@18:05](https://youtu.be/zrZAHO89XGk?t=1085) Ben Rich and Leo Janos (1994) <em>Skunk Works: A Personal Memoir of My Years at Lockheed</em> <a href="https://www.google.com/books/edition/Skunk_Works/OI9cDwAAQBAJ">book</a>
</li>
<li>Network Software Environment</li>
<li>
<a href="https://en.wikipedia.org/wiki/Lockheed_SR-71_Blackbird">Lockheed SR-71</a> on display at the <a href="https://www.intrepidmuseum.org/">Sea, Air and Space Museum</a> in NYC.</li>
<li>[@26:52](https://youtu.be/zrZAHO89XGk?t=1612) Brian Dear (2017) <em>The Friendly Orange Glow: The Untold Story of the Rise of Cyberculture</em> <a href="https://www.google.com/books/edition/The_Friendly_Orange_Glow/NqknDgAAQBAJ">book</a>
</li>
<li>[@30:15](https://youtu.be/zrZAHO89XGk?t=1815) Randall Stross (1993) <em>Steve Jobs and the NeXT Big Thing</em> <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">book</a>
</li>
<li>[@32:21](https://youtu.be/zrZAHO89XGk?t=1941) Christophe Lécuyer and David C. Brock (2010) <em>Makers of the Microchip: A Documentary History of Fairchild Semiconductor</em> <a href="https://www.google.com/books/edition/Makers_of_the_Microchip/iov-DwAAQBAJ">book</a>
</li>
<li>[@33:06](https://youtu.be/zrZAHO89XGk?t=1986) Lamont Wood (2012) <em>Datapoint: The Lost Story of the Texans Who Invented the Personal Computer Revolution</em> <a href="https://www.google.com/books/edition/Datapoint_The_Lost_Story_of_the_Texans_W/idTeAAAAQBAJ">book</a>
</li>
<li>Charles Kenney (1992) <em>Riding the Runaway Horse: The Rise and Decline of Wang Laboratories</em> <a href="https://www.google.com/books/edition/Riding_the_Runaway_Horse/GY19QgAACAAJ">book</a><ul><li>Tom’s <a href="https://twitter.com/aka_pugs/status/1370950825724366848">tweet</a>
</li></ul>
</li>
<li>[@34:06](https://youtu.be/zrZAHO89XGk?t=2046) Bryan’s Lost Box of Books!</li>
<li>Edgar H. Schein et al (2003) <em>DEC is Dead, Long Live DEC: The Lasting Legacy of Digital Equipment Corporation</em> <a href="https://www.google.com/books/edition/DEC_Is_Dead_Long_Live_DEC/G07yAAAAMAAJ">book</a>
</li>
<li>[@36:56](https://youtu.be/zrZAHO89XGk?t=2216) Alan Payne (2021) <em>Built to Fail: The Inside Story of Blockbuster’s Inevitable Bust</em> <a href="https://g.co/kgs/gpT44T">book</a><ul><li>Videotape format war <a href="https://en.wikipedia.org/wiki/Videotape_format_war">wiki</a>
</li></ul>
</li>
<li>Hackers (1995) <a href="https://en.wikipedia.org/wiki/Hackers_(film)">movie</a>. Watch the <a href="https://youtu.be/Rn2cf_wJ4f4?t=10">trailer</a> ~2mins</li>
<li>Steven Levy (1984) <em>Hackers: Heroes of the Computer Revolution</em> <a href="https://en.wikipedia.org/wiki/Hackers:_Heroes_of_the_Computer_Revolution">book</a>
</li>
<li>[@42:32](https://youtu.be/zrZAHO89XGk?t=2552) Paul Halmos (1985) <em>I Want to be a Mathematician: An Automathography</em> <a href="https://www.google.com/books/edition/I_Want_to_be_a_Mathematician/hhpZAAAAYAAJ">book</a>
</li>
<li>Paul Hoffman (1998) <em>The Man Who Loved Only Numbers</em> about Paul Erdős <a href="https://en.wikipedia.org/wiki/The_Man_Who_Loved_Only_Numbers">book</a>
</li>
<li>1981 text adventure game for the Apple II by Sierra On-Line, “Softporn Adventure” (<a href="https://en.wikipedia.org/wiki/Softporn_Adventure">wiki</a>)</li>
<li>[@49:16](https://youtu.be/zrZAHO89XGk?t=2956) Douglas Engelbart <em>The Mother of All Demos</em> <a href="https://en.wikipedia.org/wiki/The_Mother_of_All_Demos">wiki</a><ul><li>John Markoff (2005) <em>What the Dormouse Said: How the Sixties Counterculture Shaped the Personal Computer Industry</em> <a href="https://en.wikipedia.org/wiki/What_the_Dormouse_Said">book</a>
</li></ul>
</li>
<li>Katie Hafner and Matthew Lyon (1998) <em>Where Wizards Stay Up Late</em> <a href="https://www.google.com/books/edition/Where_Wizards_Stay_Up_Late/H6ZzQhM0vSYC">book</a>
</li>
<li>1972 <em>Computer Networks: The Heralds of Resource Sharing</em> <a href="https://archive.org/details/ComputerNetworks_TheHeraldsOfResourceSharing">documentary</a> ~26mins (<a href="https://en.wikipedia.org/wiki/Computer_Networks:_The_Heralds_of_Resource_Sharing">wiki</a>) included big names like Corbató, Licklider and Bob Kahn.</li>
<li>Gordon Moore (1965) <em>Cramming more components onto integrated circuits</em> <a href="https://scholar.google.com/scholar_lookup?author=moore&amp;title=cramming+more+components+onto+integrated+circuits">paper</a> and Moore’s Law <a href="https://en.wikipedia.org/wiki/Moore%27s_law">wiki</a>
</li>
<li>[@52:37](https://youtu.be/zrZAHO89XGk?t=3157) Physicists, mathematicians, number theory, proofs <ul>
<li>Wiles’s proof of Fermat’s Last Theorem 1993 <a href="https://en.wikipedia.org/wiki/Wiles%27s_proof_of_Fermat%27s_Last_Theorem">wiki</a>
</li>
<li>Simon Singh (1997) <em>Fermat’s Last Theorem</em> <a href="https://en.wikipedia.org/wiki/Fermat%27s_Last_Theorem_(book)">book</a>
</li>
<li>Ronald Calinger (2015) <em>Leonhard Euler: Mathematical Genius in the Enlightenment</em> purports to be the first full-scale “comprehensive and authoritative” <a href="https://www.google.com/books/edition/Leonhard_Euler/TM2bDwAAQBAJ">biography</a>
</li>
</ul>
</li>
<li>[@1:00:12](https://youtu.be/zrZAHO89XGk?t=3612) Robert X. Cringely (1992) <em>Accidental Empires: How the Boys of Silicon Valley Make Their Millions, Battle Foreign Competition, and Still Can’t Get a Date</em> <a href="https://en.wikipedia.org/wiki/Accidental_Empires">book</a>
</li>
<li>Jerry Kaplan (1996) <em>Startup: A Silicon Valley Adventure</em> <a href="https://www.google.com/books/edition/Startup/dih2GDy5cHEC">book</a>
</li>
<li>Brian Kernighan (2019) <em>UNIX: A History and a Memoir</em> <a href="https://www.google.com/books/edition/Unix/s0n9ygEACAAJ">book</a>
</li>
<li>[@1:03:03](https://youtu.be/zrZAHO89XGk?t=3783) Douglas Coupland (1995) <em>Microserfs</em> <a href="https://en.wikipedia.org/wiki/Microserfs">book</a><ul>
<li>Douglas Coupland (1991) <em>Generation X: Tales for an Accelerated Culture</em> <a href="https://en.wikipedia.org/wiki/Generation_X:_Tales_for_an_Accelerated_Culture">book</a>
</li>
<li>Fry’s Electronics <a href="https://en.wikipedia.org/wiki/Fry's_Electronics">wiki</a>
</li>
</ul>
</li>
<li>[@1:06:49](https://youtu.be/zrZAHO89XGk?t=4009) Michael A. Hiltzik (1999) <em>Dealers of Lightning: Xerox PARC and the Dawn of the Computer Age</em> <a href="https://www.google.com/books/edition/Dealers_of_Lightning/EylLmLzFCTMC">book</a>
</li>
<li>Albert Cory (pen name for Bob Purvy) (2021) <em>Inventing the Future</em> <a href="https://www.google.com/books/edition/Inventing_the_Future/T4tCzgEACAAJ">book</a><ul><li>Xerox Star <a href="https://en.wikipedia.org/wiki/Xerox_Star">wiki</a>
</li></ul>
</li>
<li>[@1:11:20](https://youtu.be/zrZAHO89XGk?t=4280) Corporate espionage, VMWare and Parallels, Cadence v. Avanti <a href="https://en.wikipedia.org/wiki/Cadence_Design_Systems,_Inc._v._Avanti_Corp">wiki</a>, Cisco and Huawei (<a href="https://www.wired.com/story/us-hits-huawei-new-charges-trade-secret-theft/">article</a>)</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Theranos, Silicon Valley, and the March Madness of Tech Fraud</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>15</itunes:episode>
      <podcast:episode>15</podcast:episode>
      <itunes:title>Theranos, Silicon Valley, and the March Madness of Tech Fraud</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">16f759d5-eba5-4dd0-bf91-5799e93e5d8e</guid>
      <link>https://share.transistor.fm/s/002528dc</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 20th, 2021</b></p><p>Theranos, Silicon Valley, and the March Madness of Tech Fraud</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/YWdk9CKML2g">the recording for our Twitter Space for September 20th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 20th included <a href="https://twitter.com/LBelenky">Land Belenky</a>, <a href="https://twitter.com/TheRealToaster">Toasterson</a>, <a href="https://twitter.com/csp_frederick">Cole Frederick</a>, and <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>John Carreyrou on Theranos <ul>
<li>“Bad Blood: Secrets and Lies in a Silicon Valley Startup” 2018 <a href="https://en.wikipedia.org/wiki/Bad_Blood:_Secrets_and_Lies_in_a_Silicon_Valley_Startup">book</a>
</li>
<li>“Bad Blood the Final Chapter” podcast as the trial proceeds (<a href="https://twitter.com/JohnCarreyrou/status/1413152952294940679">announcement</a>), on <a href="https://podcasts.apple.com/us/podcast/bad-blood-the-final-chapter/id1575738174">apple</a>, <a href="https://podcasts.apple.com/us/podcast/bad-blood-the-final-chapter/id1575738174">spotify</a>
</li>
</ul>
</li>
<li>Cole’s <a href="https://twitter.com/csp_frederick/status/1440094757045211137">tweet</a> linking to a ~5min <a href="https://youtu.be/M1BbZ_qIMgM?t=225">video</a> of a would-be Theranos competitor commenting on its collapse &gt; The lone inventor is a dangerous impression to give people.</li>
<li>Related: Brian Fitzpatrick and Ben Collins-Sussman “The Myth of the Genius Programmer” 2009 <a href="https://youtu.be/0SARbwvhupQ">talk</a> ~55mins</li>
<li>[@9:47](https://youtu.be/YWdk9CKML2g?t=587) Companies that drive scientific people nuts <ul>
<li>
<a href="https://en.wikipedia.org/wiki/SonicEnergy">uBeam</a> “claims to be developing a wireless charging system to work via ultrasound. Scientists have strongly criticised the plausibility under physics of this proposal.”</li>
<li>
<a href="https://en.wikipedia.org/wiki/UBiome">uBiome</a> &gt; To innovate, you have to balance the world as it is with the world as it isn’t.</li>
</ul>
</li>
<li>[@13:44](https://youtu.be/YWdk9CKML2g?t=824) Theranos’ fantastical vision. European attitudes around business and innovation. <ul><li>
<a href="https://en.wikipedia.org/wiki/Polymerase_chain_reaction">PCR</a> Polymerase chain reaction invented 1983 by Kary Mullis.</li></ul>
</li>
<li>[@18:39](https://youtu.be/YWdk9CKML2g?t=1119) Fake it till you make it? <ul><li>
<a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a> &gt; The secrecy of Theranos should have been a red flag</li></ul>
</li>
<li>[@23:57](https://youtu.be/YWdk9CKML2g?t=1437) Whistleblower <a href="https://en.wikipedia.org/wiki/Avie_Tevanian">Avie Tevanian</a>. Smoke and mirrors, giving the board the run around.</li>
<li>[@29:05](https://youtu.be/YWdk9CKML2g?t=1745) “Everyone was relying on someone else to do their due diligence” <ul>
<li>Tech risk, venture capital</li>
<li>
<a href="https://cerebras.net/">Cerebras Systems</a> wafer scale processors</li>
<li>Ellen Pao NYT <a href="https://www.nytimes.com/2021/09/15/opinion/elizabeth-holmes-trial-sexism.html">editorial</a> “The Elizabeth Holmes Trial is a Wake-up Call for Sexism in Tech”</li>
</ul>
</li>
<li>[@35:20](https://youtu.be/YWdk9CKML2g?t=2120) Software cure-all <ul><li><a href="https://en.wikipedia.org/wiki/Boeing_737_MAX_groundings">737 MAX failures</a></li></ul>
</li>
<li>[@40:14](https://youtu.be/YWdk9CKML2g?t=2414) Founding myths <ul><li>
<a href="https://en.wikipedia.org/wiki/Jean-Louis_Gass%C3%A9e">Jean-Louis Gassée</a><ul>
<li>2015 “Theranos Trouble: A First Person Account” <a href="https://mondaynote.com/theranos-trouble-a-first-person-account-1690b827539f">blog</a>
</li>
<li>2018 “Theranos Could Have Been Stopped” <a href="https://mondaynote.com/theranos-could-have-been-stopped-9670793e3431">blog</a>
</li>
</ul>
</li></ul>
</li>
<li>[@44:06](https://youtu.be/YWdk9CKML2g?t=2646) Tesla “Autopilot”, Uber self driving <ul><li>
<a href="https://en.wikipedia.org/wiki/Anthony_Levandowski">Anthony Levandowski</a> &gt; Judge Alsup: This is the biggest trade secret crime I have ever seen. &gt; This was not small. This was massive in scale.</li></ul>
</li>
<li>[@48:21](https://youtu.be/YWdk9CKML2g?t=2901) March Madness of Silicon Valley Fraudsters <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Solyndra">Solyndra</a> bankrupt 2011</li>
<li><a href="https://en.wikipedia.org/wiki/Tether_(cryptocurrency)#Questions_about_dollar_reserves">Tether</a></li>
</ul>
</li>
<li>[@59:02](https://youtu.be/YWdk9CKML2g?t=3542) Levandowski jeopardizes employee <ul>
<li><a href="https://en.wikipedia.org/wiki/Better_Place_(company)">Better Place</a></li>
<li><a href="https://www.economist.com/obituary">The Economist Obituary</a></li>
<li><a href="https://en.wikipedia.org/wiki/Juicero">Juicero</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Flip_Video">Flip Video</a> bought by Cisco 2009</li>
</ul>
</li>
<li>[@1:04:35](https://youtu.be/YWdk9CKML2g?t=3875) Warning signs of fraudulent companies <ul>
<li>Transparency, celebrity boards</li>
<li><a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a></li>
<li>Inconsistency between board and leadership on what the coming milestones are</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 20th, 2021</b></p><p>Theranos, Silicon Valley, and the March Madness of Tech Fraud</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/YWdk9CKML2g">the recording for our Twitter Space for September 20th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 20th included <a href="https://twitter.com/LBelenky">Land Belenky</a>, <a href="https://twitter.com/TheRealToaster">Toasterson</a>, <a href="https://twitter.com/csp_frederick">Cole Frederick</a>, and <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>John Carreyrou on Theranos <ul>
<li>“Bad Blood: Secrets and Lies in a Silicon Valley Startup” 2018 <a href="https://en.wikipedia.org/wiki/Bad_Blood:_Secrets_and_Lies_in_a_Silicon_Valley_Startup">book</a>
</li>
<li>“Bad Blood the Final Chapter” podcast as the trial proceeds (<a href="https://twitter.com/JohnCarreyrou/status/1413152952294940679">announcement</a>), on <a href="https://podcasts.apple.com/us/podcast/bad-blood-the-final-chapter/id1575738174">apple</a>, <a href="https://podcasts.apple.com/us/podcast/bad-blood-the-final-chapter/id1575738174">spotify</a>
</li>
</ul>
</li>
<li>Cole’s <a href="https://twitter.com/csp_frederick/status/1440094757045211137">tweet</a> linking to a ~5min <a href="https://youtu.be/M1BbZ_qIMgM?t=225">video</a> of a would-be Theranos competitor commenting on its collapse &gt; The lone inventor is a dangerous impression to give people.</li>
<li>Related: Brian Fitzpatrick and Ben Collins-Sussman “The Myth of the Genius Programmer” 2009 <a href="https://youtu.be/0SARbwvhupQ">talk</a> ~55mins</li>
<li>[@9:47](https://youtu.be/YWdk9CKML2g?t=587) Companies that drive scientific people nuts <ul>
<li>
<a href="https://en.wikipedia.org/wiki/SonicEnergy">uBeam</a> “claims to be developing a wireless charging system to work via ultrasound. Scientists have strongly criticised the plausibility under physics of this proposal.”</li>
<li>
<a href="https://en.wikipedia.org/wiki/UBiome">uBiome</a> &gt; To innovate, you have to balance the world as it is with the world as it isn’t.</li>
</ul>
</li>
<li>[@13:44](https://youtu.be/YWdk9CKML2g?t=824) Theranos’ fantastical vision. European attitudes around business and innovation. <ul><li>
<a href="https://en.wikipedia.org/wiki/Polymerase_chain_reaction">PCR</a> Polymerase chain reaction invented 1983 by Kary Mullis.</li></ul>
</li>
<li>[@18:39](https://youtu.be/YWdk9CKML2g?t=1119) Fake it till you make it? <ul><li>
<a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a> &gt; The secrecy of Theranos should have been a red flag</li></ul>
</li>
<li>[@23:57](https://youtu.be/YWdk9CKML2g?t=1437) Whistleblower <a href="https://en.wikipedia.org/wiki/Avie_Tevanian">Avie Tevanian</a>. Smoke and mirrors, giving the board the run around.</li>
<li>[@29:05](https://youtu.be/YWdk9CKML2g?t=1745) “Everyone was relying on someone else to do their due diligence” <ul>
<li>Tech risk, venture capital</li>
<li>
<a href="https://cerebras.net/">Cerebras Systems</a> wafer scale processors</li>
<li>Ellen Pao NYT <a href="https://www.nytimes.com/2021/09/15/opinion/elizabeth-holmes-trial-sexism.html">editorial</a> “The Elizabeth Holmes Trial is a Wake-up Call for Sexism in Tech”</li>
</ul>
</li>
<li>[@35:20](https://youtu.be/YWdk9CKML2g?t=2120) Software cure-all <ul><li><a href="https://en.wikipedia.org/wiki/Boeing_737_MAX_groundings">737 MAX failures</a></li></ul>
</li>
<li>[@40:14](https://youtu.be/YWdk9CKML2g?t=2414) Founding myths <ul><li>
<a href="https://en.wikipedia.org/wiki/Jean-Louis_Gass%C3%A9e">Jean-Louis Gassée</a><ul>
<li>2015 “Theranos Trouble: A First Person Account” <a href="https://mondaynote.com/theranos-trouble-a-first-person-account-1690b827539f">blog</a>
</li>
<li>2018 “Theranos Could Have Been Stopped” <a href="https://mondaynote.com/theranos-could-have-been-stopped-9670793e3431">blog</a>
</li>
</ul>
</li></ul>
</li>
<li>[@44:06](https://youtu.be/YWdk9CKML2g?t=2646) Tesla “Autopilot”, Uber self driving <ul><li>
<a href="https://en.wikipedia.org/wiki/Anthony_Levandowski">Anthony Levandowski</a> &gt; Judge Alsup: This is the biggest trade secret crime I have ever seen. &gt; This was not small. This was massive in scale.</li></ul>
</li>
<li>[@48:21](https://youtu.be/YWdk9CKML2g?t=2901) March Madness of Silicon Valley Fraudsters <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Solyndra">Solyndra</a> bankrupt 2011</li>
<li><a href="https://en.wikipedia.org/wiki/Tether_(cryptocurrency)#Questions_about_dollar_reserves">Tether</a></li>
</ul>
</li>
<li>[@59:02](https://youtu.be/YWdk9CKML2g?t=3542) Levandowski jeopardizes employee <ul>
<li><a href="https://en.wikipedia.org/wiki/Better_Place_(company)">Better Place</a></li>
<li><a href="https://www.economist.com/obituary">The Economist Obituary</a></li>
<li><a href="https://en.wikipedia.org/wiki/Juicero">Juicero</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Flip_Video">Flip Video</a> bought by Cisco 2009</li>
</ul>
</li>
<li>[@1:04:35](https://youtu.be/YWdk9CKML2g?t=3875) Warning signs of fraudulent companies <ul>
<li>Transparency, celebrity boards</li>
<li><a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a></li>
<li>Inconsistency between board and leadership on what the coming milestones are</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 20 Sep 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/002528dc/c9215939.mp3" length="69918568" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4369</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 20th, 2021</b></p><p>Theranos, Silicon Valley, and the March Madness of Tech Fraud</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/YWdk9CKML2g">the recording for our Twitter Space for September 20th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 20th included <a href="https://twitter.com/LBelenky">Land Belenky</a>, <a href="https://twitter.com/TheRealToaster">Toasterson</a>, <a href="https://twitter.com/csp_frederick">Cole Frederick</a>, and <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>John Carreyrou on Theranos <ul>
<li>“Bad Blood: Secrets and Lies in a Silicon Valley Startup” 2018 <a href="https://en.wikipedia.org/wiki/Bad_Blood:_Secrets_and_Lies_in_a_Silicon_Valley_Startup">book</a>
</li>
<li>“Bad Blood the Final Chapter” podcast as the trial proceeds (<a href="https://twitter.com/JohnCarreyrou/status/1413152952294940679">announcement</a>), on <a href="https://podcasts.apple.com/us/podcast/bad-blood-the-final-chapter/id1575738174">apple</a>, <a href="https://podcasts.apple.com/us/podcast/bad-blood-the-final-chapter/id1575738174">spotify</a>
</li>
</ul>
</li>
<li>Cole’s <a href="https://twitter.com/csp_frederick/status/1440094757045211137">tweet</a> linking to a ~5min <a href="https://youtu.be/M1BbZ_qIMgM?t=225">video</a> of a would-be Theranos competitor commenting on its collapse &gt; The lone inventor is a dangerous impression to give people.</li>
<li>Related: Brian Fitzpatrick and Ben Collins-Sussman “The Myth of the Genius Programmer” 2009 <a href="https://youtu.be/0SARbwvhupQ">talk</a> ~55mins</li>
<li>[@9:47](https://youtu.be/YWdk9CKML2g?t=587) Companies that drive scientific people nuts <ul>
<li>
<a href="https://en.wikipedia.org/wiki/SonicEnergy">uBeam</a> “claims to be developing a wireless charging system to work via ultrasound. Scientists have strongly criticised the plausibility under physics of this proposal.”</li>
<li>
<a href="https://en.wikipedia.org/wiki/UBiome">uBiome</a> &gt; To innovate, you have to balance the world as it is with the world as it isn’t.</li>
</ul>
</li>
<li>[@13:44](https://youtu.be/YWdk9CKML2g?t=824) Theranos’ fantastical vision. European attitudes around business and innovation. <ul><li>
<a href="https://en.wikipedia.org/wiki/Polymerase_chain_reaction">PCR</a> Polymerase chain reaction invented 1983 by Kary Mullis.</li></ul>
</li>
<li>[@18:39](https://youtu.be/YWdk9CKML2g?t=1119) Fake it till you make it? <ul><li>
<a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a> &gt; The secrecy of Theranos should have been a red flag</li></ul>
</li>
<li>[@23:57](https://youtu.be/YWdk9CKML2g?t=1437) Whistleblower <a href="https://en.wikipedia.org/wiki/Avie_Tevanian">Avie Tevanian</a>. Smoke and mirrors, giving the board the run around.</li>
<li>[@29:05](https://youtu.be/YWdk9CKML2g?t=1745) “Everyone was relying on someone else to do their due diligence” <ul>
<li>Tech risk, venture capital</li>
<li>
<a href="https://cerebras.net/">Cerebras Systems</a> wafer scale processors</li>
<li>Ellen Pao NYT <a href="https://www.nytimes.com/2021/09/15/opinion/elizabeth-holmes-trial-sexism.html">editorial</a> “The Elizabeth Holmes Trial is a Wake-up Call for Sexism in Tech”</li>
</ul>
</li>
<li>[@35:20](https://youtu.be/YWdk9CKML2g?t=2120) Software cure-all <ul><li><a href="https://en.wikipedia.org/wiki/Boeing_737_MAX_groundings">737 MAX failures</a></li></ul>
</li>
<li>[@40:14](https://youtu.be/YWdk9CKML2g?t=2414) Founding myths <ul><li>
<a href="https://en.wikipedia.org/wiki/Jean-Louis_Gass%C3%A9e">Jean-Louis Gassée</a><ul>
<li>2015 “Theranos Trouble: A First Person Account” <a href="https://mondaynote.com/theranos-trouble-a-first-person-account-1690b827539f">blog</a>
</li>
<li>2018 “Theranos Could Have Been Stopped” <a href="https://mondaynote.com/theranos-could-have-been-stopped-9670793e3431">blog</a>
</li>
</ul>
</li></ul>
</li>
<li>[@44:06](https://youtu.be/YWdk9CKML2g?t=2646) Tesla “Autopilot”, Uber self driving <ul><li>
<a href="https://en.wikipedia.org/wiki/Anthony_Levandowski">Anthony Levandowski</a> &gt; Judge Alsup: This is the biggest trade secret crime I have ever seen. &gt; This was not small. This was massive in scale.</li></ul>
</li>
<li>[@48:21](https://youtu.be/YWdk9CKML2g?t=2901) March Madness of Silicon Valley Fraudsters <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Solyndra">Solyndra</a> bankrupt 2011</li>
<li><a href="https://en.wikipedia.org/wiki/Tether_(cryptocurrency)#Questions_about_dollar_reserves">Tether</a></li>
</ul>
</li>
<li>[@59:02](https://youtu.be/YWdk9CKML2g?t=3542) Levandowski jeopardizes employee <ul>
<li><a href="https://en.wikipedia.org/wiki/Better_Place_(company)">Better Place</a></li>
<li><a href="https://www.economist.com/obituary">The Economist Obituary</a></li>
<li><a href="https://en.wikipedia.org/wiki/Juicero">Juicero</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Flip_Video">Flip Video</a> bought by Cisco 2009</li>
</ul>
</li>
<li>[@1:04:35](https://youtu.be/YWdk9CKML2g?t=3875) Warning signs of fraudulent companies <ul>
<li>Transparency, celebrity boards</li>
<li><a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a></li>
<li>Inconsistency between board and leadership on what the coming milestones are</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Docker, Inc., an Early Epitaph</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>14</itunes:episode>
      <podcast:episode>14</podcast:episode>
      <itunes:title>Docker, Inc., an Early Epitaph</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">57ab6a65-6fe9-4233-8fd1-01e4d6a61363</guid>
      <link>https://share.transistor.fm/s/ac98148d</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 13th, 2021</b></p><p>Docker, Inc., an Early Epitaph</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/l9LTJdT0sZ8">the recording for our Twitter Space for September 13th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 13th included <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/nickgeracehacks">Nick Gerace</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/drewonpaper">Drew Vogel</a>, and <a href="https://twitter.com/ZackMaril">vint serp</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Topic: Scott Carey’s article <a href="https://www.infoworld.com/article/3632142/how-docker-broke-in-half.html">How Docker broke in half</a><ul><li>More by Carey on Docker: <ul>
<li><a href="https://www.infoworld.com/article/3630393/docker-desktop-is-no-longer-free-for-enterprise-users.html">Docker Desktop is no longer free for enterprise users</a></li>
<li><a href="https://www.infoworld.com/article/3204171/what-is-docker-the-spark-for-the-container-revolution.html">What is Docker? The spark for the container revolution</a></li>
</ul>
</li></ul>
</li>
<li>Andrej Karpathy’s <a href="https://twitter.com/karpathy/status/1435827240286109702">tweet</a> showing InfoWorld.com spamming ads</li>
<li>Carey talked to:<ul>
<li>
<a href="https://twitter.com/solomonstre">Solomon Hykes</a> (Docker cofounder with Sebastien Pahl)</li>
<li>
<a href="https://twitter.com/golubbe">Ben Golub</a> (Docker CEO 2013-2017)</li>
<li>
<a href="https://twitter.com/cmcluck">Craig McLuckie</a> (Kubernetes cofounder)</li>
<li>
<a href="https://twitter.com/nickstinemates">Nick Stinemates</a> (early employee and former VP of Business Development)</li>
</ul>
</li>
<li>[@5:21](https://youtu.be/l9LTJdT0sZ8?t=321) Akira Kurosawa’s 1950 <a href="https://en.wikipedia.org/wiki/Rashomon">Rashomon</a> ~90mins. Watch a 2min <a href="https://www.youtube.com/watch?v=xCZ9TguVOIA">trailer</a>
</li>
<li>Box office bomb “The Hottie and the Nottie” <a href="https://en.wikipedia.org/wiki/The_Hottie_and_the_Nottie">movie</a>. Other stinkers: <a href="https://en.wikipedia.org/wiki/Gigli">Gigli</a>, <a href="https://en.wikipedia.org/wiki/Gotti_(2018_film)">Gotti</a>
</li>
<li>[@9:31](https://youtu.be/l9LTJdT0sZ8?t=571) Jerry Kaplan’s 1996 book <a href="https://www.google.com/books/edition/Startup/dih2GDy5cHEC?hl=en">Startup: A Silicon Valley Adventure</a>
</li>
<li>Steve’s take on commercialization &gt; Bryan: There’s no question that they hit on something very big. &gt; We saw a container as an operational vessel, but we failed to see &gt; a container as a development vessel.</li>
<li>[@14:36](https://youtu.be/l9LTJdT0sZ8?t=876) dotCloud (PaaS) struggles to find a buyer; ultimately open sources as last resort &gt; All of a sudden a company that nobody had heard of, &gt; was a company that everybody had heard of.</li>
<li>They took too much money.</li>
<li>[@17:40](https://youtu.be/l9LTJdT0sZ8?t=1060) Pitfalls in raising money and scaling sales by imitating big companies<ul><li>HBO’s <a href="https://en.wikipedia.org/wiki/Silicon_Valley_(TV_series)">Silicon Valley</a><ul><li>
<a href="https://youtu.be/de5vU7NLu8o">Clip</a> ~1min with Jan the Man, Keith, and Doug (I’m shadowing Keith) &gt; Everybody should be spending time arm in arm with customers understanding &gt; how is this technology going to solve a problem &gt; which they’ll want to pay to have a solution.</li></ul>
</li></ul>
</li>
<li>Tom: Was there actually a business anyways? Or was it just technology?</li>
<li>What if developers are attracted to those things they know cannot be monetized?</li>
<li>There was this belief that if a technology is this ubiquitous, it will be readily monetizable.</li>
<li>[@27:26](https://youtu.be/l9LTJdT0sZ8?t=1646) Docker Swarm and Kubernetes &gt; Hykes: We didn’t work at Google, we didn’t go to Stanford, &gt; we didn’t have a PhD in computer science.</li>
<li>Stinemates: (The Kubernetes team) had strong opinions about the need for a service level API and Docker technically had its own opinion about a single API from a simplicity standpoint. We couldn’t agree.<ul>
<li>DockerCon 2015: No mentioning Kubernetes! <ul><li>Brendan Burns’ talk “The distributed system toolkit: Container patterns for modular distributed system design” was unfortunately made private by <a href="https://www.youtube.com/c/DockerIo">Docker</a> sometime in the last two years. The internet archive only has <a href="https://web.archive.org/web/20151014150029/https://www.youtube.com/watch?v=Ph3t8jIt894">this</a>. Burns wrote a <a href="https://kubernetes.io/blog/2015/06/the-distributed-system-toolkit-patterns/">blog post</a> about the topics from his talk.</li></ul>
</li>
<li>
<a href="https://github.com/rkt/rkt/">rkt</a> (“Rocket”), <a href="https://en.wikipedia.org/wiki/Container_Linux">CoreOS</a>
</li>
</ul>
</li>
<li>[@36:11](https://youtu.be/l9LTJdT0sZ8?t=2171) Docker coming to market<ul>
<li>Enterprise teams wanted support</li>
<li>Initial support offerings were expensive and limited (no after hours, no weekends) &gt; Bryan: I floated to Solomon in 2014: run container management as a service.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Rancher_Labs">Rancher Labs</a>, K3s (lightweight kubernetes)</li>
<li>People care about GitHub stars (for better or worse)</li>
</ul>
</li>
<li>[@48:02](https://youtu.be/l9LTJdT0sZ8?t=2882) Monetizing open source technologies<ul>
<li>Triton implementing the Docker API</li>
<li>The support relationships are the foothold to figure out the product.</li>
</ul>
</li>
<li>[@54:36](https://youtu.be/l9LTJdT0sZ8?t=3276) Venture capital going into Docker<ul><li>Docker acquires <a href="https://www.docker.com/blog/docker-acquires-tutum/">Tutum</a>
</li></ul>
</li>
<li>Product market fit<ul><li>Acquisitions</li></ul>
</li>
<li>[@1:04:42](https://youtu.be/l9LTJdT0sZ8?t=3882) Could the outcome have been materially different?<ul>
<li>Who made money on Docker? Cloud companies? Developers?</li>
<li>VMware acquires <a href="https://techcrunch.com/2018/11/06/vmware-acquires-heptio-the-startup-founded-by-2-co-founders-of-kubernetes/">Heptio</a>
</li>
<li>Who invented containers? <ul><li>BSD Jails, Plan9 namespaces?</li></ul>
</li>
<li>Tyler Tringas’ <a href="https://calmfund.com/writing/investment-memo-calm-fund-2">post</a> about how small teams can create value with little outside investment, as a result of the Peace Dividend of the SaaS Wars.</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 13th, 2021</b></p><p>Docker, Inc., an Early Epitaph</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/l9LTJdT0sZ8">the recording for our Twitter Space for September 13th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 13th included <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/nickgeracehacks">Nick Gerace</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/drewonpaper">Drew Vogel</a>, and <a href="https://twitter.com/ZackMaril">vint serp</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Topic: Scott Carey’s article <a href="https://www.infoworld.com/article/3632142/how-docker-broke-in-half.html">How Docker broke in half</a><ul><li>More by Carey on Docker: <ul>
<li><a href="https://www.infoworld.com/article/3630393/docker-desktop-is-no-longer-free-for-enterprise-users.html">Docker Desktop is no longer free for enterprise users</a></li>
<li><a href="https://www.infoworld.com/article/3204171/what-is-docker-the-spark-for-the-container-revolution.html">What is Docker? The spark for the container revolution</a></li>
</ul>
</li></ul>
</li>
<li>Andrej Karpathy’s <a href="https://twitter.com/karpathy/status/1435827240286109702">tweet</a> showing InfoWorld.com spamming ads</li>
<li>Carey talked to:<ul>
<li>
<a href="https://twitter.com/solomonstre">Solomon Hykes</a> (Docker cofounder with Sebastien Pahl)</li>
<li>
<a href="https://twitter.com/golubbe">Ben Golub</a> (Docker CEO 2013-2017)</li>
<li>
<a href="https://twitter.com/cmcluck">Craig McLuckie</a> (Kubernetes cofounder)</li>
<li>
<a href="https://twitter.com/nickstinemates">Nick Stinemates</a> (early employee and former VP of Business Development)</li>
</ul>
</li>
<li>[@5:21](https://youtu.be/l9LTJdT0sZ8?t=321) Akira Kurosawa’s 1950 <a href="https://en.wikipedia.org/wiki/Rashomon">Rashomon</a> ~90mins. Watch a 2min <a href="https://www.youtube.com/watch?v=xCZ9TguVOIA">trailer</a>
</li>
<li>Box office bomb “The Hottie and the Nottie” <a href="https://en.wikipedia.org/wiki/The_Hottie_and_the_Nottie">movie</a>. Other stinkers: <a href="https://en.wikipedia.org/wiki/Gigli">Gigli</a>, <a href="https://en.wikipedia.org/wiki/Gotti_(2018_film)">Gotti</a>
</li>
<li>[@9:31](https://youtu.be/l9LTJdT0sZ8?t=571) Jerry Kaplan’s 1996 book <a href="https://www.google.com/books/edition/Startup/dih2GDy5cHEC?hl=en">Startup: A Silicon Valley Adventure</a>
</li>
<li>Steve’s take on commercialization &gt; Bryan: There’s no question that they hit on something very big. &gt; We saw a container as an operational vessel, but we failed to see &gt; a container as a development vessel.</li>
<li>[@14:36](https://youtu.be/l9LTJdT0sZ8?t=876) dotCloud (PaaS) struggles to find a buyer; ultimately open sources as last resort &gt; All of a sudden a company that nobody had heard of, &gt; was a company that everybody had heard of.</li>
<li>They took too much money.</li>
<li>[@17:40](https://youtu.be/l9LTJdT0sZ8?t=1060) Pitfalls in raising money and scaling sales by imitating big companies<ul><li>HBO’s <a href="https://en.wikipedia.org/wiki/Silicon_Valley_(TV_series)">Silicon Valley</a><ul><li>
<a href="https://youtu.be/de5vU7NLu8o">Clip</a> ~1min with Jan the Man, Keith, and Doug (I’m shadowing Keith) &gt; Everybody should be spending time arm in arm with customers understanding &gt; how is this technology going to solve a problem &gt; which they’ll want to pay to have a solution.</li></ul>
</li></ul>
</li>
<li>Tom: Was there actually a business anyways? Or was it just technology?</li>
<li>What if developers are attracted to those things they know cannot be monetized?</li>
<li>There was this belief that if a technology is this ubiquitous, it will be readily monetizable.</li>
<li>[@27:26](https://youtu.be/l9LTJdT0sZ8?t=1646) Docker Swarm and Kubernetes &gt; Hykes: We didn’t work at Google, we didn’t go to Stanford, &gt; we didn’t have a PhD in computer science.</li>
<li>Stinemates: (The Kubernetes team) had strong opinions about the need for a service level API and Docker technically had its own opinion about a single API from a simplicity standpoint. We couldn’t agree.<ul>
<li>DockerCon 2015: No mentioning Kubernetes! <ul><li>Brendan Burns’ talk “The distributed system toolkit: Container patterns for modular distributed system design” was unfortunately made private by <a href="https://www.youtube.com/c/DockerIo">Docker</a> sometime in the last two years. The internet archive only has <a href="https://web.archive.org/web/20151014150029/https://www.youtube.com/watch?v=Ph3t8jIt894">this</a>. Burns wrote a <a href="https://kubernetes.io/blog/2015/06/the-distributed-system-toolkit-patterns/">blog post</a> about the topics from his talk.</li></ul>
</li>
<li>
<a href="https://github.com/rkt/rkt/">rkt</a> (“Rocket”), <a href="https://en.wikipedia.org/wiki/Container_Linux">CoreOS</a>
</li>
</ul>
</li>
<li>[@36:11](https://youtu.be/l9LTJdT0sZ8?t=2171) Docker coming to market<ul>
<li>Enterprise teams wanted support</li>
<li>Initial support offerings were expensive and limited (no after hours, no weekends) &gt; Bryan: I floated to Solomon in 2014: run container management as a service.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Rancher_Labs">Rancher Labs</a>, K3s (lightweight kubernetes)</li>
<li>People care about GitHub stars (for better or worse)</li>
</ul>
</li>
<li>[@48:02](https://youtu.be/l9LTJdT0sZ8?t=2882) Monetizing open source technologies<ul>
<li>Triton implementing the Docker API</li>
<li>The support relationships are the foothold to figure out the product.</li>
</ul>
</li>
<li>[@54:36](https://youtu.be/l9LTJdT0sZ8?t=3276) Venture capital going into Docker<ul><li>Docker acquires <a href="https://www.docker.com/blog/docker-acquires-tutum/">Tutum</a>
</li></ul>
</li>
<li>Product market fit<ul><li>Acquisitions</li></ul>
</li>
<li>[@1:04:42](https://youtu.be/l9LTJdT0sZ8?t=3882) Could the outcome have been materially different?<ul>
<li>Who made money on Docker? Cloud companies? Developers?</li>
<li>VMware acquires <a href="https://techcrunch.com/2018/11/06/vmware-acquires-heptio-the-startup-founded-by-2-co-founders-of-kubernetes/">Heptio</a>
</li>
<li>Who invented containers? <ul><li>BSD Jails, Plan9 namespaces?</li></ul>
</li>
<li>Tyler Tringas’ <a href="https://calmfund.com/writing/investment-memo-calm-fund-2">post</a> about how small teams can create value with little outside investment, as a result of the Peace Dividend of the SaaS Wars.</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 13 Sep 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/ac98148d/e70a8491.mp3" length="68713514" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4294</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 13th, 2021</b></p><p>Docker, Inc., an Early Epitaph</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/l9LTJdT0sZ8">the recording for our Twitter Space for September 13th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 13th included <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/iangrunert">Ian</a>, <a href="https://twitter.com/nickgeracehacks">Nick Gerace</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, <a href="https://twitter.com/drewonpaper">Drew Vogel</a>, and <a href="https://twitter.com/ZackMaril">vint serp</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Topic: Scott Carey’s article <a href="https://www.infoworld.com/article/3632142/how-docker-broke-in-half.html">How Docker broke in half</a><ul><li>More by Carey on Docker: <ul>
<li><a href="https://www.infoworld.com/article/3630393/docker-desktop-is-no-longer-free-for-enterprise-users.html">Docker Desktop is no longer free for enterprise users</a></li>
<li><a href="https://www.infoworld.com/article/3204171/what-is-docker-the-spark-for-the-container-revolution.html">What is Docker? The spark for the container revolution</a></li>
</ul>
</li></ul>
</li>
<li>Andrej Karpathy’s <a href="https://twitter.com/karpathy/status/1435827240286109702">tweet</a> showing InfoWorld.com spamming ads</li>
<li>Carey talked to:<ul>
<li>
<a href="https://twitter.com/solomonstre">Solomon Hykes</a> (Docker cofounder with Sebastien Pahl)</li>
<li>
<a href="https://twitter.com/golubbe">Ben Golub</a> (Docker CEO 2013-2017)</li>
<li>
<a href="https://twitter.com/cmcluck">Craig McLuckie</a> (Kubernetes cofounder)</li>
<li>
<a href="https://twitter.com/nickstinemates">Nick Stinemates</a> (early employee and former VP of Business Development)</li>
</ul>
</li>
<li>[@5:21](https://youtu.be/l9LTJdT0sZ8?t=321) Akira Kurosawa’s 1950 <a href="https://en.wikipedia.org/wiki/Rashomon">Rashomon</a> ~90mins. Watch a 2min <a href="https://www.youtube.com/watch?v=xCZ9TguVOIA">trailer</a>
</li>
<li>Box office bomb “The Hottie and the Nottie” <a href="https://en.wikipedia.org/wiki/The_Hottie_and_the_Nottie">movie</a>. Other stinkers: <a href="https://en.wikipedia.org/wiki/Gigli">Gigli</a>, <a href="https://en.wikipedia.org/wiki/Gotti_(2018_film)">Gotti</a>
</li>
<li>[@9:31](https://youtu.be/l9LTJdT0sZ8?t=571) Jerry Kaplan’s 1996 book <a href="https://www.google.com/books/edition/Startup/dih2GDy5cHEC?hl=en">Startup: A Silicon Valley Adventure</a>
</li>
<li>Steve’s take on commercialization &gt; Bryan: There’s no question that they hit on something very big. &gt; We saw a container as an operational vessel, but we failed to see &gt; a container as a development vessel.</li>
<li>[@14:36](https://youtu.be/l9LTJdT0sZ8?t=876) dotCloud (PaaS) struggles to find a buyer; ultimately open sources as last resort &gt; All of a sudden a company that nobody had heard of, &gt; was a company that everybody had heard of.</li>
<li>They took too much money.</li>
<li>[@17:40](https://youtu.be/l9LTJdT0sZ8?t=1060) Pitfalls in raising money and scaling sales by imitating big companies<ul><li>HBO’s <a href="https://en.wikipedia.org/wiki/Silicon_Valley_(TV_series)">Silicon Valley</a><ul><li>
<a href="https://youtu.be/de5vU7NLu8o">Clip</a> ~1min with Jan the Man, Keith, and Doug (I’m shadowing Keith) &gt; Everybody should be spending time arm in arm with customers understanding &gt; how is this technology going to solve a problem &gt; which they’ll want to pay to have a solution.</li></ul>
</li></ul>
</li>
<li>Tom: Was there actually a business anyways? Or was it just technology?</li>
<li>What if developers are attracted to those things they know cannot be monetized?</li>
<li>There was this belief that if a technology is this ubiquitous, it will be readily monetizable.</li>
<li>[@27:26](https://youtu.be/l9LTJdT0sZ8?t=1646) Docker Swarm and Kubernetes &gt; Hykes: We didn’t work at Google, we didn’t go to Stanford, &gt; we didn’t have a PhD in computer science.</li>
<li>Stinemates: (The Kubernetes team) had strong opinions about the need for a service level API and Docker technically had its own opinion about a single API from a simplicity standpoint. We couldn’t agree.<ul>
<li>DockerCon 2015: No mentioning Kubernetes! <ul><li>Brendan Burns’ talk “The distributed system toolkit: Container patterns for modular distributed system design” was unfortunately made private by <a href="https://www.youtube.com/c/DockerIo">Docker</a> sometime in the last two years. The internet archive only has <a href="https://web.archive.org/web/20151014150029/https://www.youtube.com/watch?v=Ph3t8jIt894">this</a>. Burns wrote a <a href="https://kubernetes.io/blog/2015/06/the-distributed-system-toolkit-patterns/">blog post</a> about the topics from his talk.</li></ul>
</li>
<li>
<a href="https://github.com/rkt/rkt/">rkt</a> (“Rocket”), <a href="https://en.wikipedia.org/wiki/Container_Linux">CoreOS</a>
</li>
</ul>
</li>
<li>[@36:11](https://youtu.be/l9LTJdT0sZ8?t=2171) Docker coming to market<ul>
<li>Enterprise teams wanted support</li>
<li>Initial support offerings were expensive and limited (no after hours, no weekends) &gt; Bryan: I floated to Solomon in 2014: run container management as a service.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Rancher_Labs">Rancher Labs</a>, K3s (lightweight kubernetes)</li>
<li>People care about GitHub stars (for better or worse)</li>
</ul>
</li>
<li>[@48:02](https://youtu.be/l9LTJdT0sZ8?t=2882) Monetizing open source technologies<ul>
<li>Triton implementing the Docker API</li>
<li>The support relationships are the foothold to figure out the product.</li>
</ul>
</li>
<li>[@54:36](https://youtu.be/l9LTJdT0sZ8?t=3276) Venture capital going into Docker<ul><li>Docker acquires <a href="https://www.docker.com/blog/docker-acquires-tutum/">Tutum</a>
</li></ul>
</li>
<li>Product market fit<ul><li>Acquisitions</li></ul>
</li>
<li>[@1:04:42](https://youtu.be/l9LTJdT0sZ8?t=3882) Could the outcome have been materially different?<ul>
<li>Who made money on Docker? Cloud companies? Developers?</li>
<li>VMware acquires <a href="https://techcrunch.com/2018/11/06/vmware-acquires-heptio-the-startup-founded-by-2-co-founders-of-kubernetes/">Heptio</a>
</li>
<li>Who invented containers? <ul><li>BSD Jails, Plan9 namespaces?</li></ul>
</li>
<li>Tyler Tringas’ <a href="https://calmfund.com/writing/investment-memo-calm-fund-2">post</a> about how small teams can create value with little outside investment, as a result of the Peace Dividend of the SaaS Wars.</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Put the OS back in OSDI</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>13</itunes:episode>
      <podcast:episode>13</podcast:episode>
      <itunes:title>Put the OS back in OSDI</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">9fef0c8b-b64a-438f-a5d9-4e00b60ef4ce</guid>
      <link>https://share.transistor.fm/s/42e834de</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 6th, 2021</b></p><p>Put the OS back in OSDI</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/PVJfqjJJCkg">the recording for our Twitter Space for September 6th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 6th included <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/OrangeCMS">Daniel Maslowski</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a> and <a href="https://twitter.com/MoritzFago">Moritz</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Adam’s <a href="https://twitter.com/ahl/status/1394528921379500034">tweets</a> on recording Twitter Spaces.</li>
<li>
<a href="https://twitter.com/ahl/status/1433664622620381186">Tweet</a> on recovering a recording!</li>
<li>[@4:57](https://youtu.be/PVJfqjJJCkg?t=297) Timothy Roscoe’s Keynote <ul>
<li>
<a href="https://twitter.com/bagchi_saurabh/status/1416066717118251020">Screenshots</a> teasing his slides</li>
<li>Conf <a href="https://youtu.be/36myc8wQhLo">video</a>
</li>
</ul>
</li>
<li>Complicated relationship with academia and industry <ul>
<li>[@8:09](https://youtu.be/PVJfqjJJCkg?t=489) Adam’s MS graphics experience</li>
<li>Bryan’s USENIX 2016 <a href="https://www.usenix.org/conference/atc16/technical-sessions/presentation/cantrill">keynote</a> ~1hr: A Wardrobe for the Emperor – Stitching Practical Bias into Systems Software Research <ul><li>Conferences as the publishing vector for CS research</li></ul>
</li>
</ul>
</li>
<li>[@13:47](https://youtu.be/PVJfqjJJCkg?t=827) What a modern OS does &gt; … accreted and not designed.<br> &gt; They were not designed, they congealed.</li>
<li>[@17:10](https://youtu.be/PVJfqjJJCkg?t=1030) Rob Pike’s 2000 “Systems Software Research is Irrelevant” <a href="https://tianyin.github.io/misc/irrelevant.pdf">paper</a><ul><li>The value of incremental improvements</li></ul>
</li>
<li>[@21:47](https://youtu.be/PVJfqjJJCkg?t=1307) Building on extant working components and interfaces <ul>
<li>Opaque, proprietary hardware</li>
<li>AMD <a href="https://en.wikipedia.org/wiki/AMD_Platform_Security_Processor">Platform Security Processor</a> &gt; Artifacts of the OS implementation tend to have outsized impact &gt; on overall system performance</li>
</ul>
</li>
<li>[@26:27](https://youtu.be/PVJfqjJJCkg?t=1587) Performance is not the only axis of a system <ul><li>Security, malleability, convenience, reliability</li></ul>
</li>
<li>[@31:12](https://youtu.be/PVJfqjJJCkg?t=1872) Specialization <ul>
<li>
<a href="https://en.wikipedia.org/wiki/HarmonyOS">HarmonyOS</a>, <a href="https://en.wikipedia.org/wiki/Google_Fuchsia">Fuchsia</a>
</li>
<li>Different chips performing different tasks</li>
<li>Firmware everywhere</li>
<li>Intel <a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a>
</li>
<li>Intel <a href="https://en.wikipedia.org/wiki/Intel_8051">8051</a>
</li>
</ul>
</li>
<li>[@37:02](https://youtu.be/PVJfqjJJCkg?t=2222) Open hardware and firmware <ul><li>ARM <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M0">Cortex-M0</a> &gt; That’s why we land at incrementalism, we ossify at some boundary. &gt; And it’s very hard to change things on either side without moving in lockstep.</li></ul>
</li>
<li>Tom: The PC architecture was a great thing, but now the OS vendors have abdicated any knowledge of the hardware. Give us UEFI and we don’t care what happens beneath that.<ul><li>Should ARM have <a href="https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface">UEFI</a>? (or something like it)</li></ul>
</li>
<li>[@45:29](https://youtu.be/PVJfqjJJCkg?t=2729) Developing hardware is still challenging, but has never been easier than today (especially low-speed) <ul>
<li>Tom’s <a href="https://twitter.com/aka_pugs/status/1375869621631262721">tweet</a> about parallels with homebrew computing in the 70’s</li>
<li>
<a href="https://www.crowdsupply.com/sutajio-kosagi/precursor">Precursor</a> and <a href="https://xobs.io/announcing-xous-the-betrusted-operating-system/">Xous</a>
</li>
</ul>
</li>
<li>[@50:58](https://youtu.be/PVJfqjJJCkg?t=3058) Where will new systems development fit in with our existing (working) systems? <ul>
<li>Low-speed is an opportunity area</li>
<li>
<a href="https://en.wikipedia.org/wiki/RISC-V">RISC-V</a> for peripherals</li>
</ul>
</li>
<li>[@56:37](https://youtu.be/PVJfqjJJCkg?t=3397) Backwards compatibility seems to be more important than marginal gains: <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Shingled_magnetic_recording">Shingled magnetic recording</a> offered &lt;25% density gain at the cost of compatibility</li>
<li>
<a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a>: gains didn’t justify the cost</li>
<li>
<a href="https://en.wikipedia.org/wiki/Data_processing_unit">Smart NICs</a> only made sense in hyperscale server fleets &gt; Josh: If you’re going to change the programming model, you have to blow the doors off on at least one axis</li>
</ul>
</li>
<li>[@1:00:45] Moving management plane to a NIC. <ul><li>
<a href="https://aws.amazon.com/ec2/nitro">AWS Nitro</a> implements this with a series of <a href="https://cseweb.ucsd.edu/~yiying/cse291j-winter20/reading/Nitro.pdf">PCIe offload cards</a>.</li></ul>
</li>
<li>[@1:01:22](https://youtu.be/PVJfqjJJCkg?t=3682) Abstraction boundaries not designed for the current circumstances <ul>
<li>Coordination problems between vendors</li>
<li>Vestigial components</li>
<li>
<a href="https://en.wikipedia.org/wiki/American_Megatrends">AMI</a>, <a href="http://www.aspeedtech.com/server_ast2500/">AST2500</a>
</li>
<li>Arcane boot processes and shortcuts available for cloud compute <ul><li><a href="https://github.com/machyve/xhyve">xhyve</a></li></ul>
</li>
</ul>
</li>
<li>[@1:08:57](https://youtu.be/PVJfqjJJCkg?t=4137) Removing things is so hard <ul>
<li>Things change given enough time</li>
<li>Graham Lee’s essay on legacy and software dependencies <a href="https://www.sicpers.info/2015/01/and-in-the-end-there-will-be-the-command-line/">…and in the end will be the command line</a>
</li>
<li>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</li>
</ul>
</li>
</ul>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 6th, 2021</b></p><p>Put the OS back in OSDI</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/PVJfqjJJCkg">the recording for our Twitter Space for September 6th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 6th included <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/OrangeCMS">Daniel Maslowski</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a> and <a href="https://twitter.com/MoritzFago">Moritz</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Adam’s <a href="https://twitter.com/ahl/status/1394528921379500034">tweets</a> on recording Twitter Spaces.</li>
<li>
<a href="https://twitter.com/ahl/status/1433664622620381186">Tweet</a> on recovering a recording!</li>
<li>[@4:57](https://youtu.be/PVJfqjJJCkg?t=297) Timothy Roscoe’s Keynote <ul>
<li>
<a href="https://twitter.com/bagchi_saurabh/status/1416066717118251020">Screenshots</a> teasing his slides</li>
<li>Conf <a href="https://youtu.be/36myc8wQhLo">video</a>
</li>
</ul>
</li>
<li>Complicated relationship with academia and industry <ul>
<li>[@8:09](https://youtu.be/PVJfqjJJCkg?t=489) Adam’s MS graphics experience</li>
<li>Bryan’s USENIX 2016 <a href="https://www.usenix.org/conference/atc16/technical-sessions/presentation/cantrill">keynote</a> ~1hr: A Wardrobe for the Emperor – Stitching Practical Bias into Systems Software Research <ul><li>Conferences as the publishing vector for CS research</li></ul>
</li>
</ul>
</li>
<li>[@13:47](https://youtu.be/PVJfqjJJCkg?t=827) What a modern OS does &gt; … accreted and not designed.<br> &gt; They were not designed, they congealed.</li>
<li>[@17:10](https://youtu.be/PVJfqjJJCkg?t=1030) Rob Pike’s 2000 “Systems Software Research is Irrelevant” <a href="https://tianyin.github.io/misc/irrelevant.pdf">paper</a><ul><li>The value of incremental improvements</li></ul>
</li>
<li>[@21:47](https://youtu.be/PVJfqjJJCkg?t=1307) Building on extant working components and interfaces <ul>
<li>Opaque, proprietary hardware</li>
<li>AMD <a href="https://en.wikipedia.org/wiki/AMD_Platform_Security_Processor">Platform Security Processor</a> &gt; Artifacts of the OS implementation tend to have outsized impact &gt; on overall system performance</li>
</ul>
</li>
<li>[@26:27](https://youtu.be/PVJfqjJJCkg?t=1587) Performance is not the only axis of a system <ul><li>Security, malleability, convenience, reliability</li></ul>
</li>
<li>[@31:12](https://youtu.be/PVJfqjJJCkg?t=1872) Specialization <ul>
<li>
<a href="https://en.wikipedia.org/wiki/HarmonyOS">HarmonyOS</a>, <a href="https://en.wikipedia.org/wiki/Google_Fuchsia">Fuchsia</a>
</li>
<li>Different chips performing different tasks</li>
<li>Firmware everywhere</li>
<li>Intel <a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a>
</li>
<li>Intel <a href="https://en.wikipedia.org/wiki/Intel_8051">8051</a>
</li>
</ul>
</li>
<li>[@37:02](https://youtu.be/PVJfqjJJCkg?t=2222) Open hardware and firmware <ul><li>ARM <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M0">Cortex-M0</a> &gt; That’s why we land at incrementalism, we ossify at some boundary. &gt; And it’s very hard to change things on either side without moving in lockstep.</li></ul>
</li>
<li>Tom: The PC architecture was a great thing, but now the OS vendors have abdicated any knowledge of the hardware. Give us UEFI and we don’t care what happens beneath that.<ul><li>Should ARM have <a href="https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface">UEFI</a>? (or something like it)</li></ul>
</li>
<li>[@45:29](https://youtu.be/PVJfqjJJCkg?t=2729) Developing hardware is still challenging, but has never been easier than today (especially low-speed) <ul>
<li>Tom’s <a href="https://twitter.com/aka_pugs/status/1375869621631262721">tweet</a> about parallels with homebrew computing in the 70’s</li>
<li>
<a href="https://www.crowdsupply.com/sutajio-kosagi/precursor">Precursor</a> and <a href="https://xobs.io/announcing-xous-the-betrusted-operating-system/">Xous</a>
</li>
</ul>
</li>
<li>[@50:58](https://youtu.be/PVJfqjJJCkg?t=3058) Where will new systems development fit in with our existing (working) systems? <ul>
<li>Low-speed is an opportunity area</li>
<li>
<a href="https://en.wikipedia.org/wiki/RISC-V">RISC-V</a> for peripherals</li>
</ul>
</li>
<li>[@56:37](https://youtu.be/PVJfqjJJCkg?t=3397) Backwards compatibility seems to be more important than marginal gains: <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Shingled_magnetic_recording">Shingled magnetic recording</a> offered &lt;25% density gain at the cost of compatibility</li>
<li>
<a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a>: gains didn’t justify the cost</li>
<li>
<a href="https://en.wikipedia.org/wiki/Data_processing_unit">Smart NICs</a> only made sense in hyperscale server fleets &gt; Josh: If you’re going to change the programming model, you have to blow the doors off on at least one axis</li>
</ul>
</li>
<li>[@1:00:45] Moving management plane to a NIC. <ul><li>
<a href="https://aws.amazon.com/ec2/nitro">AWS Nitro</a> implements this with a series of <a href="https://cseweb.ucsd.edu/~yiying/cse291j-winter20/reading/Nitro.pdf">PCIe offload cards</a>.</li></ul>
</li>
<li>[@1:01:22](https://youtu.be/PVJfqjJJCkg?t=3682) Abstraction boundaries not designed for the current circumstances <ul>
<li>Coordination problems between vendors</li>
<li>Vestigial components</li>
<li>
<a href="https://en.wikipedia.org/wiki/American_Megatrends">AMI</a>, <a href="http://www.aspeedtech.com/server_ast2500/">AST2500</a>
</li>
<li>Arcane boot processes and shortcuts available for cloud compute <ul><li><a href="https://github.com/machyve/xhyve">xhyve</a></li></ul>
</li>
</ul>
</li>
<li>[@1:08:57](https://youtu.be/PVJfqjJJCkg?t=4137) Removing things is so hard <ul>
<li>Things change given enough time</li>
<li>Graham Lee’s essay on legacy and software dependencies <a href="https://www.sicpers.info/2015/01/and-in-the-end-there-will-be-the-command-line/">…and in the end will be the command line</a>
</li>
<li>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</li>
</ul>
</li>
</ul>]]>
      </content:encoded>
      <pubDate>Mon, 06 Sep 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/42e834de/24ad4aa6.mp3" length="69745692" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4359</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: September 6th, 2021</b></p><p>Put the OS back in OSDI</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/PVJfqjJJCkg">the recording for our Twitter Space for September 6th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on September 6th included <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a>, <a href="https://twitter.com/OrangeCMS">Daniel Maslowski</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a> and <a href="https://twitter.com/MoritzFago">Moritz</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Adam’s <a href="https://twitter.com/ahl/status/1394528921379500034">tweets</a> on recording Twitter Spaces.</li>
<li>
<a href="https://twitter.com/ahl/status/1433664622620381186">Tweet</a> on recovering a recording!</li>
<li>[@4:57](https://youtu.be/PVJfqjJJCkg?t=297) Timothy Roscoe’s Keynote <ul>
<li>
<a href="https://twitter.com/bagchi_saurabh/status/1416066717118251020">Screenshots</a> teasing his slides</li>
<li>Conf <a href="https://youtu.be/36myc8wQhLo">video</a>
</li>
</ul>
</li>
<li>Complicated relationship with academia and industry <ul>
<li>[@8:09](https://youtu.be/PVJfqjJJCkg?t=489) Adam’s MS graphics experience</li>
<li>Bryan’s USENIX 2016 <a href="https://www.usenix.org/conference/atc16/technical-sessions/presentation/cantrill">keynote</a> ~1hr: A Wardrobe for the Emperor – Stitching Practical Bias into Systems Software Research <ul><li>Conferences as the publishing vector for CS research</li></ul>
</li>
</ul>
</li>
<li>[@13:47](https://youtu.be/PVJfqjJJCkg?t=827) What a modern OS does &gt; … accreted and not designed.<br> &gt; They were not designed, they congealed.</li>
<li>[@17:10](https://youtu.be/PVJfqjJJCkg?t=1030) Rob Pike’s 2000 “Systems Software Research is Irrelevant” <a href="https://tianyin.github.io/misc/irrelevant.pdf">paper</a><ul><li>The value of incremental improvements</li></ul>
</li>
<li>[@21:47](https://youtu.be/PVJfqjJJCkg?t=1307) Building on extant working components and interfaces <ul>
<li>Opaque, proprietary hardware</li>
<li>AMD <a href="https://en.wikipedia.org/wiki/AMD_Platform_Security_Processor">Platform Security Processor</a> &gt; Artifacts of the OS implementation tend to have outsized impact &gt; on overall system performance</li>
</ul>
</li>
<li>[@26:27](https://youtu.be/PVJfqjJJCkg?t=1587) Performance is not the only axis of a system <ul><li>Security, malleability, convenience, reliability</li></ul>
</li>
<li>[@31:12](https://youtu.be/PVJfqjJJCkg?t=1872) Specialization <ul>
<li>
<a href="https://en.wikipedia.org/wiki/HarmonyOS">HarmonyOS</a>, <a href="https://en.wikipedia.org/wiki/Google_Fuchsia">Fuchsia</a>
</li>
<li>Different chips performing different tasks</li>
<li>Firmware everywhere</li>
<li>Intel <a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a>
</li>
<li>Intel <a href="https://en.wikipedia.org/wiki/Intel_8051">8051</a>
</li>
</ul>
</li>
<li>[@37:02](https://youtu.be/PVJfqjJJCkg?t=2222) Open hardware and firmware <ul><li>ARM <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M0">Cortex-M0</a> &gt; That’s why we land at incrementalism, we ossify at some boundary. &gt; And it’s very hard to change things on either side without moving in lockstep.</li></ul>
</li>
<li>Tom: The PC architecture was a great thing, but now the OS vendors have abdicated any knowledge of the hardware. Give us UEFI and we don’t care what happens beneath that.<ul><li>Should ARM have <a href="https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface">UEFI</a>? (or something like it)</li></ul>
</li>
<li>[@45:29](https://youtu.be/PVJfqjJJCkg?t=2729) Developing hardware is still challenging, but has never been easier than today (especially low-speed) <ul>
<li>Tom’s <a href="https://twitter.com/aka_pugs/status/1375869621631262721">tweet</a> about parallels with homebrew computing in the 70’s</li>
<li>
<a href="https://www.crowdsupply.com/sutajio-kosagi/precursor">Precursor</a> and <a href="https://xobs.io/announcing-xous-the-betrusted-operating-system/">Xous</a>
</li>
</ul>
</li>
<li>[@50:58](https://youtu.be/PVJfqjJJCkg?t=3058) Where will new systems development fit in with our existing (working) systems? <ul>
<li>Low-speed is an opportunity area</li>
<li>
<a href="https://en.wikipedia.org/wiki/RISC-V">RISC-V</a> for peripherals</li>
</ul>
</li>
<li>[@56:37](https://youtu.be/PVJfqjJJCkg?t=3397) Backwards compatibility seems to be more important than marginal gains: <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Shingled_magnetic_recording">Shingled magnetic recording</a> offered &lt;25% density gain at the cost of compatibility</li>
<li>
<a href="https://en.wikipedia.org/wiki/3D_XPoint">Optane</a>: gains didn’t justify the cost</li>
<li>
<a href="https://en.wikipedia.org/wiki/Data_processing_unit">Smart NICs</a> only made sense in hyperscale server fleets &gt; Josh: If you’re going to change the programming model, you have to blow the doors off on at least one axis</li>
</ul>
</li>
<li>[@1:00:45] Moving management plane to a NIC. <ul><li>
<a href="https://aws.amazon.com/ec2/nitro">AWS Nitro</a> implements this with a series of <a href="https://cseweb.ucsd.edu/~yiying/cse291j-winter20/reading/Nitro.pdf">PCIe offload cards</a>.</li></ul>
</li>
<li>[@1:01:22](https://youtu.be/PVJfqjJJCkg?t=3682) Abstraction boundaries not designed for the current circumstances <ul>
<li>Coordination problems between vendors</li>
<li>Vestigial components</li>
<li>
<a href="https://en.wikipedia.org/wiki/American_Megatrends">AMI</a>, <a href="http://www.aspeedtech.com/server_ast2500/">AST2500</a>
</li>
<li>Arcane boot processes and shortcuts available for cloud compute <ul><li><a href="https://github.com/machyve/xhyve">xhyve</a></li></ul>
</li>
</ul>
</li>
<li>[@1:08:57](https://youtu.be/PVJfqjJJCkg?t=4137) Removing things is so hard <ul>
<li>Things change given enough time</li>
<li>Graham Lee’s essay on legacy and software dependencies <a href="https://www.sicpers.info/2015/01/and-in-the-end-there-will-be-the-command-line/">…and in the end will be the command line</a>
</li>
<li>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</li>
</ul>
</li>
</ul>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>A brief history of talking computers</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>12</itunes:episode>
      <podcast:episode>12</podcast:episode>
      <itunes:title>A brief history of talking computers</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">19a0bd2a-ed0f-4c14-a72c-1cd0a73710e9</guid>
      <link>https://share.transistor.fm/s/df34c486</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 30th, 2021</b></p><p>A brief history of talking computers</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/b9GVJg0LRX4">the recording for our Twitter Space for August 30, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 30th included special guest <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, as well as <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/TVRaman">TVRaman</a>, <a href="https://twitter.com/jessamyn">Jessamyn West</a> and <a href="https://twitter.com/dancrossnyc">Dan Cross</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Brian Dear’s <a href="https://www.amazon.com/Friendly-Orange-Glow-Untold-Cyberculture/dp/1101871555">The Friendly Orange Glow</a><ul>
<li>Brodie Lockard <a href="https://tedium.co/2017/11/15/mahjong-shanghai-brodie-lockard/">created amazing software</a> on PLATO</li>
<li>Control Data Corp <a href="https://umsi580.lsait.lsa.umich.edu/s/PLATOs-Citizens/media/2406">Homework</a>
</li>
</ul>
</li>
<li>[@2:47](https://youtu.be/b9GVJg0LRX4?t=167) Matt’s intro <ul>
<li>Deane Blazie <a href="https://www.washingtonpost.com/archive/local/1981/10/29/in-the-spotlight-computers-that-help-the-handicapped/f54226ef-2c56-4698-a721-2b86315546af/">created TotalTalk</a>, a speaking terminal. See his 2004 <a href="https://www.afb.org/blindness-and-low-vision/using-technology/interviews-technology-pioneers/deane-blazie/part-1-5">interview</a>.</li>
<li>Apple IIe <a href="https://en.wikipedia.org/wiki/Apple_IIe">computer</a> and the Echo II speech synthesizer <a href="https://en.wikipedia.org/wiki/Echo_2">card</a>.</li>
</ul>
</li>
<li>[@4:15](https://youtu.be/b9GVJg0LRX4?t=255) <a href="https://mwcampbell.us/a11y-history/echo.mp3">The Echo ][</a> sound sample <ul><li>Wargames computer: GREETINGS PROFESSOR FALKEN. <a href="https://youtu.be/uCWKZWieMSY?t=46">Listen</a> &gt; SHALL WE PLAY A GAME?<br> &gt; Love to. How about Global Thermonuclear War?<br> &gt; …<br> &gt; Is this a game or is it real?<br> &gt; WHAT'S THE DIFFERENCE?<br> &gt; …<br> &gt; What’s it doing?<br> &gt; It’s learning…<br> &gt; …<br> &gt; A STRANGE GAME.<br> &gt; THE ONLY WINNING MOVE IS<br> &gt; NOT TO PLAY.</li></ul>
</li>
<li>[@7:46](https://youtu.be/b9GVJg0LRX4?t=466) <ul>
<li>Prose 2000 <a href="https://mwcampbell.us/a11y-history/prose2000.mp3">sample</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a> audio <a href="https://mwcampbell.us/a11y-history/dectalk.mp3">sample</a>
</li>
</ul>
</li>
<li>[@12:14](https://youtu.be/b9GVJg0LRX4?t=734) Apple to PC <ul><li>Keynote Gold, Master Touch, Zoom Text</li></ul>
</li>
<li>[@14:53](https://youtu.be/b9GVJg0LRX4?t=893) Keynote Gold <a href="https://mwcampbell.us/a11y-history/keynote-gold.mp3">sample</a><ul><li>
<a href="https://en.wikipedia.org/wiki/Talking_Moose">Talking Moose</a>. Watch a <a href="https://youtu.be/1X_Uui4wLvI">sample</a>.</li></ul>
</li>
<li>[@17:17](https://youtu.be/b9GVJg0LRX4?t=1037) GUI screen readers <ul>
<li>
<a href="https://en.wikipedia.org/wiki/OutSpoken">outSPOKEN</a> used <a href="https://en.wikipedia.org/wiki/QuickDraw">QuickDraw</a>
</li>
<li>Window Bridge 1992</li>
</ul>
</li>
<li>[@21:58](https://youtu.be/b9GVJg0LRX4?t=1318) Meeting another sight impaired person on a <a href="https://en.wikipedia.org/wiki/MUD">MUD</a><ul>
<li><a href="http://www.talkinginterfaces.org/artifacts/pwwebspeak/">pwWebSpeak</a></li>
<li><a href="https://en.wikipedia.org/wiki/Emacspeak">Emacspeak</a></li>
</ul>
</li>
<li>[@26:44](https://youtu.be/b9GVJg0LRX4?t=1604) Early programming experiences <ul><li><a href="https://en.wikipedia.org/wiki/Apple_IIGS">Apple IIGS</a></li></ul>
</li>
<li>[@28:47](https://youtu.be/b9GVJg0LRX4?t=1727) Emacspeak user base</li>
<li>[@31:34](https://youtu.be/b9GVJg0LRX4?t=1894) Things were getting better on the Windows side.. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/JAWS_(screen_reader)">JAWS</a>, patch parody <a href="https://mwcampbell.us/a11y-history/jaws-patch.mp3">sample</a>
</li>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_Narrator">Narrator</a>
</li>
</ul>
</li>
<li>[@36:12](https://youtu.be/b9GVJg0LRX4?t=2172) Linux <ul>
<li><a href="http://www.linux-speakup.org/">Speakup</a></li>
<li>Mixing multiple sound streams, hardware limitations</li>
<li><a href="https://en.wikipedia.org/wiki/Slackware">Slackware</a></li>
<li>
<a href="http://slackware.cs.utah.edu/pub/slackware/slackware-7.1/zipspeak/ZIPSPEAK.TXT">ZipSpeak</a> by Matthew Campbell</li>
</ul>
</li>
<li>[@44:53](https://youtu.be/b9GVJg0LRX4?t=2693) Editors for the visually impaired? <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ed_(text_editor)">ed</a> text editor</li>
<li><a href="https://edbrowse.org/">Edbrowse</a></li>
</ul>
</li>
<li>[@49:36](https://youtu.be/b9GVJg0LRX4?t=2976) Working on accessibility (a11y) for pay <ul>
<li>FreedomBox</li>
<li>GNOME <a href="https://en.wikipedia.org/wiki/Enlightened_Sound_Daemon">EsounD</a>
</li>
<li>KDE <a href="https://en.wikipedia.org/wiki/ARts">aRts</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Gnopernicus">Gnopernicus</a></li>
<li><a href="https://en.wikipedia.org/wiki/Orca_(assistive_technology)">Orca</a></li>
</ul>
</li>
<li>[@57:46](https://youtu.be/b9GVJg0LRX4?t=3466) <ul>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_Active_Accessibility">Active Accessibility</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Assistive_Technology_Service_Provider_Interface">AT-SPI</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture">CORBA</a>, <a href="https://en.wikipedia.org/wiki/D-Bus">D-Bus</a>
</li>
</ul>
</li>
<li>[@1:03:11](https://youtu.be/b9GVJg0LRX4?t=3791) Handheld devices <ul>
<li>Apple <a href="https://en.wikipedia.org/wiki/VoiceOver">VoiceOver</a>
</li>
<li>Google <a href="https://en.wikipedia.org/wiki/Google_TalkBack">TalkBack</a>
</li>
<li>iPhone Screen Recognition <a href="https://www.imore.com/how-use-screen-recognition-your-iphone">article</a>
</li>
</ul>
</li>
<li>[@1:08:09](https://youtu.be/b9GVJg0LRX4?t=4089) What should software engineers know about accessibility? <ul>
<li>Use a mature UI framework!</li>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_UI_Automation">UI Automation</a> is the successor to MSAA.</li>
</ul>
</li>
<li>
<a href="https://github.com/AccessKit/accesskit">AccessKit</a> by today’s speaker Matt Campbell!</li>
<li>[@1:12:34](https://youtu.be/b9GVJg0LRX4?t=4354) DECtalk samples!</li>
<li>[@1:15:25](https://youtu.be/b9GVJg0LRX4?t=4525) One of the most important settings a blind person will want to change in their speech synthesizer is how fast it talks. <ul><li>JAWS parody <a href="https://mwcampbell.us/a11y-history/jaws-patch.mp3">clip</a>
</li></ul>
</li>
<li>Alt text image captions</li>
</ul><p>Topical recent conference presentation: - Emily Shea (2019) Voice Driven Development <a href="https://youtu.be/YKuRkGkf5HU">video</a></p><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 30th, 2021</b></p><p>A brief history of talking computers</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/b9GVJg0LRX4">the recording for our Twitter Space for August 30, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 30th included special guest <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, as well as <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/TVRaman">TVRaman</a>, <a href="https://twitter.com/jessamyn">Jessamyn West</a> and <a href="https://twitter.com/dancrossnyc">Dan Cross</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Brian Dear’s <a href="https://www.amazon.com/Friendly-Orange-Glow-Untold-Cyberculture/dp/1101871555">The Friendly Orange Glow</a><ul>
<li>Brodie Lockard <a href="https://tedium.co/2017/11/15/mahjong-shanghai-brodie-lockard/">created amazing software</a> on PLATO</li>
<li>Control Data Corp <a href="https://umsi580.lsait.lsa.umich.edu/s/PLATOs-Citizens/media/2406">Homework</a>
</li>
</ul>
</li>
<li>[@2:47](https://youtu.be/b9GVJg0LRX4?t=167) Matt’s intro <ul>
<li>Deane Blazie <a href="https://www.washingtonpost.com/archive/local/1981/10/29/in-the-spotlight-computers-that-help-the-handicapped/f54226ef-2c56-4698-a721-2b86315546af/">created TotalTalk</a>, a speaking terminal. See his 2004 <a href="https://www.afb.org/blindness-and-low-vision/using-technology/interviews-technology-pioneers/deane-blazie/part-1-5">interview</a>.</li>
<li>Apple IIe <a href="https://en.wikipedia.org/wiki/Apple_IIe">computer</a> and the Echo II speech synthesizer <a href="https://en.wikipedia.org/wiki/Echo_2">card</a>.</li>
</ul>
</li>
<li>[@4:15](https://youtu.be/b9GVJg0LRX4?t=255) <a href="https://mwcampbell.us/a11y-history/echo.mp3">The Echo ][</a> sound sample <ul><li>Wargames computer: GREETINGS PROFESSOR FALKEN. <a href="https://youtu.be/uCWKZWieMSY?t=46">Listen</a> &gt; SHALL WE PLAY A GAME?<br> &gt; Love to. How about Global Thermonuclear War?<br> &gt; …<br> &gt; Is this a game or is it real?<br> &gt; WHAT'S THE DIFFERENCE?<br> &gt; …<br> &gt; What’s it doing?<br> &gt; It’s learning…<br> &gt; …<br> &gt; A STRANGE GAME.<br> &gt; THE ONLY WINNING MOVE IS<br> &gt; NOT TO PLAY.</li></ul>
</li>
<li>[@7:46](https://youtu.be/b9GVJg0LRX4?t=466) <ul>
<li>Prose 2000 <a href="https://mwcampbell.us/a11y-history/prose2000.mp3">sample</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a> audio <a href="https://mwcampbell.us/a11y-history/dectalk.mp3">sample</a>
</li>
</ul>
</li>
<li>[@12:14](https://youtu.be/b9GVJg0LRX4?t=734) Apple to PC <ul><li>Keynote Gold, Master Touch, Zoom Text</li></ul>
</li>
<li>[@14:53](https://youtu.be/b9GVJg0LRX4?t=893) Keynote Gold <a href="https://mwcampbell.us/a11y-history/keynote-gold.mp3">sample</a><ul><li>
<a href="https://en.wikipedia.org/wiki/Talking_Moose">Talking Moose</a>. Watch a <a href="https://youtu.be/1X_Uui4wLvI">sample</a>.</li></ul>
</li>
<li>[@17:17](https://youtu.be/b9GVJg0LRX4?t=1037) GUI screen readers <ul>
<li>
<a href="https://en.wikipedia.org/wiki/OutSpoken">outSPOKEN</a> used <a href="https://en.wikipedia.org/wiki/QuickDraw">QuickDraw</a>
</li>
<li>Window Bridge 1992</li>
</ul>
</li>
<li>[@21:58](https://youtu.be/b9GVJg0LRX4?t=1318) Meeting another sight impaired person on a <a href="https://en.wikipedia.org/wiki/MUD">MUD</a><ul>
<li><a href="http://www.talkinginterfaces.org/artifacts/pwwebspeak/">pwWebSpeak</a></li>
<li><a href="https://en.wikipedia.org/wiki/Emacspeak">Emacspeak</a></li>
</ul>
</li>
<li>[@26:44](https://youtu.be/b9GVJg0LRX4?t=1604) Early programming experiences <ul><li><a href="https://en.wikipedia.org/wiki/Apple_IIGS">Apple IIGS</a></li></ul>
</li>
<li>[@28:47](https://youtu.be/b9GVJg0LRX4?t=1727) Emacspeak user base</li>
<li>[@31:34](https://youtu.be/b9GVJg0LRX4?t=1894) Things were getting better on the Windows side.. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/JAWS_(screen_reader)">JAWS</a>, patch parody <a href="https://mwcampbell.us/a11y-history/jaws-patch.mp3">sample</a>
</li>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_Narrator">Narrator</a>
</li>
</ul>
</li>
<li>[@36:12](https://youtu.be/b9GVJg0LRX4?t=2172) Linux <ul>
<li><a href="http://www.linux-speakup.org/">Speakup</a></li>
<li>Mixing multiple sound streams, hardware limitations</li>
<li><a href="https://en.wikipedia.org/wiki/Slackware">Slackware</a></li>
<li>
<a href="http://slackware.cs.utah.edu/pub/slackware/slackware-7.1/zipspeak/ZIPSPEAK.TXT">ZipSpeak</a> by Matthew Campbell</li>
</ul>
</li>
<li>[@44:53](https://youtu.be/b9GVJg0LRX4?t=2693) Editors for the visually impaired? <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ed_(text_editor)">ed</a> text editor</li>
<li><a href="https://edbrowse.org/">Edbrowse</a></li>
</ul>
</li>
<li>[@49:36](https://youtu.be/b9GVJg0LRX4?t=2976) Working on accessibility (a11y) for pay <ul>
<li>FreedomBox</li>
<li>GNOME <a href="https://en.wikipedia.org/wiki/Enlightened_Sound_Daemon">EsounD</a>
</li>
<li>KDE <a href="https://en.wikipedia.org/wiki/ARts">aRts</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Gnopernicus">Gnopernicus</a></li>
<li><a href="https://en.wikipedia.org/wiki/Orca_(assistive_technology)">Orca</a></li>
</ul>
</li>
<li>[@57:46](https://youtu.be/b9GVJg0LRX4?t=3466) <ul>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_Active_Accessibility">Active Accessibility</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Assistive_Technology_Service_Provider_Interface">AT-SPI</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture">CORBA</a>, <a href="https://en.wikipedia.org/wiki/D-Bus">D-Bus</a>
</li>
</ul>
</li>
<li>[@1:03:11](https://youtu.be/b9GVJg0LRX4?t=3791) Handheld devices <ul>
<li>Apple <a href="https://en.wikipedia.org/wiki/VoiceOver">VoiceOver</a>
</li>
<li>Google <a href="https://en.wikipedia.org/wiki/Google_TalkBack">TalkBack</a>
</li>
<li>iPhone Screen Recognition <a href="https://www.imore.com/how-use-screen-recognition-your-iphone">article</a>
</li>
</ul>
</li>
<li>[@1:08:09](https://youtu.be/b9GVJg0LRX4?t=4089) What should software engineers know about accessibility? <ul>
<li>Use a mature UI framework!</li>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_UI_Automation">UI Automation</a> is the successor to MSAA.</li>
</ul>
</li>
<li>
<a href="https://github.com/AccessKit/accesskit">AccessKit</a> by today’s speaker Matt Campbell!</li>
<li>[@1:12:34](https://youtu.be/b9GVJg0LRX4?t=4354) DECtalk samples!</li>
<li>[@1:15:25](https://youtu.be/b9GVJg0LRX4?t=4525) One of the most important settings a blind person will want to change in their speech synthesizer is how fast it talks. <ul><li>JAWS parody <a href="https://mwcampbell.us/a11y-history/jaws-patch.mp3">clip</a>
</li></ul>
</li>
<li>Alt text image captions</li>
</ul><p>Topical recent conference presentation: - Emily Shea (2019) Voice Driven Development <a href="https://youtu.be/YKuRkGkf5HU">video</a></p><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 30 Aug 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/df34c486/2ee064de.mp3" length="89654582" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5603</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 30th, 2021</b></p><p>A brief history of talking computers</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/b9GVJg0LRX4">the recording for our Twitter Space for August 30, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 30th included special guest <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, as well as <a href="https://twitter.com/MattSci2">MattSci</a>, <a href="https://twitter.com/TVRaman">TVRaman</a>, <a href="https://twitter.com/jessamyn">Jessamyn West</a> and <a href="https://twitter.com/dancrossnyc">Dan Cross</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Brian Dear’s <a href="https://www.amazon.com/Friendly-Orange-Glow-Untold-Cyberculture/dp/1101871555">The Friendly Orange Glow</a><ul>
<li>Brodie Lockard <a href="https://tedium.co/2017/11/15/mahjong-shanghai-brodie-lockard/">created amazing software</a> on PLATO</li>
<li>Control Data Corp <a href="https://umsi580.lsait.lsa.umich.edu/s/PLATOs-Citizens/media/2406">Homework</a>
</li>
</ul>
</li>
<li>[@2:47](https://youtu.be/b9GVJg0LRX4?t=167) Matt’s intro <ul>
<li>Deane Blazie <a href="https://www.washingtonpost.com/archive/local/1981/10/29/in-the-spotlight-computers-that-help-the-handicapped/f54226ef-2c56-4698-a721-2b86315546af/">created TotalTalk</a>, a speaking terminal. See his 2004 <a href="https://www.afb.org/blindness-and-low-vision/using-technology/interviews-technology-pioneers/deane-blazie/part-1-5">interview</a>.</li>
<li>Apple IIe <a href="https://en.wikipedia.org/wiki/Apple_IIe">computer</a> and the Echo II speech synthesizer <a href="https://en.wikipedia.org/wiki/Echo_2">card</a>.</li>
</ul>
</li>
<li>[@4:15](https://youtu.be/b9GVJg0LRX4?t=255) <a href="https://mwcampbell.us/a11y-history/echo.mp3">The Echo ][</a> sound sample <ul><li>Wargames computer: GREETINGS PROFESSOR FALKEN. <a href="https://youtu.be/uCWKZWieMSY?t=46">Listen</a> &gt; SHALL WE PLAY A GAME?<br> &gt; Love to. How about Global Thermonuclear War?<br> &gt; …<br> &gt; Is this a game or is it real?<br> &gt; WHAT'S THE DIFFERENCE?<br> &gt; …<br> &gt; What’s it doing?<br> &gt; It’s learning…<br> &gt; …<br> &gt; A STRANGE GAME.<br> &gt; THE ONLY WINNING MOVE IS<br> &gt; NOT TO PLAY.</li></ul>
</li>
<li>[@7:46](https://youtu.be/b9GVJg0LRX4?t=466) <ul>
<li>Prose 2000 <a href="https://mwcampbell.us/a11y-history/prose2000.mp3">sample</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a> audio <a href="https://mwcampbell.us/a11y-history/dectalk.mp3">sample</a>
</li>
</ul>
</li>
<li>[@12:14](https://youtu.be/b9GVJg0LRX4?t=734) Apple to PC <ul><li>Keynote Gold, Master Touch, Zoom Text</li></ul>
</li>
<li>[@14:53](https://youtu.be/b9GVJg0LRX4?t=893) Keynote Gold <a href="https://mwcampbell.us/a11y-history/keynote-gold.mp3">sample</a><ul><li>
<a href="https://en.wikipedia.org/wiki/Talking_Moose">Talking Moose</a>. Watch a <a href="https://youtu.be/1X_Uui4wLvI">sample</a>.</li></ul>
</li>
<li>[@17:17](https://youtu.be/b9GVJg0LRX4?t=1037) GUI screen readers <ul>
<li>
<a href="https://en.wikipedia.org/wiki/OutSpoken">outSPOKEN</a> used <a href="https://en.wikipedia.org/wiki/QuickDraw">QuickDraw</a>
</li>
<li>Window Bridge 1992</li>
</ul>
</li>
<li>[@21:58](https://youtu.be/b9GVJg0LRX4?t=1318) Meeting another sight impaired person on a <a href="https://en.wikipedia.org/wiki/MUD">MUD</a><ul>
<li><a href="http://www.talkinginterfaces.org/artifacts/pwwebspeak/">pwWebSpeak</a></li>
<li><a href="https://en.wikipedia.org/wiki/Emacspeak">Emacspeak</a></li>
</ul>
</li>
<li>[@26:44](https://youtu.be/b9GVJg0LRX4?t=1604) Early programming experiences <ul><li><a href="https://en.wikipedia.org/wiki/Apple_IIGS">Apple IIGS</a></li></ul>
</li>
<li>[@28:47](https://youtu.be/b9GVJg0LRX4?t=1727) Emacspeak user base</li>
<li>[@31:34](https://youtu.be/b9GVJg0LRX4?t=1894) Things were getting better on the Windows side.. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/JAWS_(screen_reader)">JAWS</a>, patch parody <a href="https://mwcampbell.us/a11y-history/jaws-patch.mp3">sample</a>
</li>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_Narrator">Narrator</a>
</li>
</ul>
</li>
<li>[@36:12](https://youtu.be/b9GVJg0LRX4?t=2172) Linux <ul>
<li><a href="http://www.linux-speakup.org/">Speakup</a></li>
<li>Mixing multiple sound streams, hardware limitations</li>
<li><a href="https://en.wikipedia.org/wiki/Slackware">Slackware</a></li>
<li>
<a href="http://slackware.cs.utah.edu/pub/slackware/slackware-7.1/zipspeak/ZIPSPEAK.TXT">ZipSpeak</a> by Matthew Campbell</li>
</ul>
</li>
<li>[@44:53](https://youtu.be/b9GVJg0LRX4?t=2693) Editors for the visually impaired? <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ed_(text_editor)">ed</a> text editor</li>
<li><a href="https://edbrowse.org/">Edbrowse</a></li>
</ul>
</li>
<li>[@49:36](https://youtu.be/b9GVJg0LRX4?t=2976) Working on accessibility (a11y) for pay <ul>
<li>FreedomBox</li>
<li>GNOME <a href="https://en.wikipedia.org/wiki/Enlightened_Sound_Daemon">EsounD</a>
</li>
<li>KDE <a href="https://en.wikipedia.org/wiki/ARts">aRts</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Gnopernicus">Gnopernicus</a></li>
<li><a href="https://en.wikipedia.org/wiki/Orca_(assistive_technology)">Orca</a></li>
</ul>
</li>
<li>[@57:46](https://youtu.be/b9GVJg0LRX4?t=3466) <ul>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_Active_Accessibility">Active Accessibility</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Assistive_Technology_Service_Provider_Interface">AT-SPI</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture">CORBA</a>, <a href="https://en.wikipedia.org/wiki/D-Bus">D-Bus</a>
</li>
</ul>
</li>
<li>[@1:03:11](https://youtu.be/b9GVJg0LRX4?t=3791) Handheld devices <ul>
<li>Apple <a href="https://en.wikipedia.org/wiki/VoiceOver">VoiceOver</a>
</li>
<li>Google <a href="https://en.wikipedia.org/wiki/Google_TalkBack">TalkBack</a>
</li>
<li>iPhone Screen Recognition <a href="https://www.imore.com/how-use-screen-recognition-your-iphone">article</a>
</li>
</ul>
</li>
<li>[@1:08:09](https://youtu.be/b9GVJg0LRX4?t=4089) What should software engineers know about accessibility? <ul>
<li>Use a mature UI framework!</li>
<li>Microsoft <a href="https://en.wikipedia.org/wiki/Microsoft_UI_Automation">UI Automation</a> is the successor to MSAA.</li>
</ul>
</li>
<li>
<a href="https://github.com/AccessKit/accesskit">AccessKit</a> by today’s speaker Matt Campbell!</li>
<li>[@1:12:34](https://youtu.be/b9GVJg0LRX4?t=4354) DECtalk samples!</li>
<li>[@1:15:25](https://youtu.be/b9GVJg0LRX4?t=4525) One of the most important settings a blind person will want to change in their speech synthesizer is how fast it talks. <ul><li>JAWS parody <a href="https://mwcampbell.us/a11y-history/jaws-patch.mp3">clip</a>
</li></ul>
</li>
<li>Alt text image captions</li>
</ul><p>Topical recent conference presentation: - Emily Shea (2019) Voice Driven Development <a href="https://youtu.be/YKuRkGkf5HU">video</a></p><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The episode formerly known as ℔</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>11</itunes:episode>
      <podcast:episode>11</podcast:episode>
      <itunes:title>The episode formerly known as ℔</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">70e49251-4ea3-470d-837a-8bd6722d762a</guid>
      <link>https://share.transistor.fm/s/4301ba28</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 23rd, 2021</b></p><p>The episode formerly known as ℔</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/-ZRv6EHaQYM">the recording for our Twitter Space for August 23rd, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 23rd included <a href="https://twitter.com/Det_Conan_Kudo">Neal Gompa</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/Penguin">Jeremy Tanner</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Last week’s <a href="https://youtu.be/hlQuF75L4TE">recording</a> on “Showstopper” with author G. Pascal Zachary, and Jessamyn West.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate">Ashton-Tate</a> history (there never was any Ashton, and dBASE II <em>was</em> the first version) <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate#dBASE_IV:_Decline_and_fall_(1988%E2%80%931990)">dBASE IV</a> was “slow, buggy” and didn’t get fixed in a timely manner</li>
<li>Last week, Pascal mentioned that CEO <a href="https://en.wikipedia.org/wiki/Ashton-Tate#Ed_Esber">Ed Esber</a> “in a fit of insanity admitted to me (a journalist) he didn’t know how to use his company’s own product!”</li>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate#Friday!">Friday!</a> personal information manager, and <a href="https://en.wikipedia.org/wiki/Borland_Sidekick">Sidekick</a> from Borland (like Google calendar for DOS)</li>
</ul>
</li>
<li>[@3:01](https://youtu.be/-ZRv6EHaQYM?t=181) Phrasing: operating program (vs operating system) <ul>
<li>Steve Jobs 1992 MIT Sloan <a href="https://youtu.be/Gk-9Fd2mEnI">talk</a> ~72mins on consultants, hiring people and leaving Apple (see <a href="https://mitsloan.mit.edu/ideas-made-to-matter/steve-jobs-talks-consultants-hiring-and-leaving-apple-unearthed-1992-talk">mit.edu</a> summary) &gt; Jobs: NeXTSTEP is not an operating system, it’s an operating environment</li>
<li>July 5th <a href="https://youtu.be/2H9XQBdLB0Y">recording</a> discussing NeXT. Randall Stross book: <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">Steve Jobs and the NeXT Big Thing</a> (1993) &gt; Mac OSX focused on user capabilities of the desktop environment, but they considered it one and the same with the operating system</li>
</ul>
</li>
<li>[@7:42](https://youtu.be/-ZRv6EHaQYM?t=462) Windows NT had “multiple personalities” &gt; Adam: I was instantly transported to the 90’s. &gt; Bryan: I could hear Smashing Pumpkins playing on the radio. <ul>
<li>Sun’s <a href="https://en.wikipedia.org/wiki/Spring_(operating_system)">Spring</a> OS was the <a href="https://www.google.com/search?q=ne+plus+ultra">ne plus ultra</a> of this approach</li>
<li>
<a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a> microkernel, <a href="https://en.wikipedia.org/wiki/GNU_Hurd">GNU Hurd</a>, <a href="https://en.wikipedia.org/wiki/Apple_M1">Apple M1</a>,</li>
<li>Windows Subsystem for Linux <a href="https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux">WSL</a> &gt; Adam: Docker takes static linking to the extreme and just ships everything</li>
</ul>
</li>
<li>[@12:40](https://youtu.be/-ZRv6EHaQYM?t=760) Microkernels &gt; Simeon: (Oxide) is working on a microkernel for Hubis, tell us about that <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Minix">Minix</a>, and the <a href="https://en.wikipedia.org/wiki/Tanenbaum%E2%80%93Torvalds_debate">Tanenbaum-Torvalds</a> 1992 microkernel vs monolithic debate</li>
<li>
<a href="https://en.wikipedia.org/wiki/QNX">QNX</a> Unix-like real-time OS <ul>
<li>See ACM ByteCast interview with Rashmi Mohan, Bryan tells the <a href="https://youtu.be/seFP7-KI2OI?t=405">story</a> ~3mins of coming to QNX after reading about it in the “Operating Systems Roundup” of Byte Magazine 1993 (see also Bryan’s blog <a href="http://dtrace.org/blogs/bmc/2007/11/08/dtrace-on-qnx/">post</a> and <a href="https://openqnx.com/node/298">remembering Dan Hildebrand</a>)</li>
<li><a href="https://en.wikipedia.org/wiki/L4_microkernel_family">L4 microkernel</a></li>
<li>The <a href="https://web.archive.org/web/20001202195500/http://www.qnx.com:80/demodisk/index.html">QNX 1.44M demo disk</a><ul><li>The GUI was called Photon. &gt; Bryan: why would we not run this (QNX) absolutely everywhere?</li></ul>
</li>
</ul>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Oberon_(operating_system)">Oberon</a> OS. <a href="http://www.qnx.com/developers/docs/6.5.0SP1.update/com.qnx.doc.neutrino_user_guide/using_photon.html">Photon</a> microGUI</li>
</ul>
</li>
<li>[@15:49](https://youtu.be/-ZRv6EHaQYM?t=949) Laura on writing a microcontroller operating system <ul>
<li>Cliff Biffle’s <a href="http://cliffle.com/">website</a>
</li>
<li>Microkernels, root of trust, embedded systems</li>
<li>There is very little (or no) dynamic memory allocation in Hubris.</li>
<li>
<a href="https://www.tockos.org/">Tock</a> multitasking embedded OS, and Bryan’s “Tockilator: Deducing Tock execution flows from Ibex Verilator traces” <a href="https://www.youtube.com/watch?v=zPuELAzJyno&amp;t=10534s">video</a> ~12mins</li>
<li>In Tock, dynamic program loading is central. Hubris functions as a security-minded service processor. The programs it will use are all known in advance; so dynamic loading (and the accompanying security concerns) can be left out.</li>
<li>Fit-to-purpose OSs</li>
</ul>
</li>
<li>[@24:19](https://youtu.be/-ZRv6EHaQYM?t=1459) ROPI/RWPI (aka “Ropy Rippy”) and the growing pains of RISC-V <ul>
<li>GitHub issue <a href="https://github.com/riscv/riscv-elf-psabi-doc/issues/128">ROPI/RWPI Specification (Embedded PIC)</a>
</li>
<li>
<a href="https://opentitan.org/">OpenTitan</a>, ARM <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M">Cortex-M</a> &gt; When we set out to write Hubris, we spent a lot of time reading &gt; and learning what’s out there.</li>
<li>QNX vs monolithic systems. QNX was robust against module failure, so bugs in modules were tolerable. At Sun, faults in a module were system faults, so bugs were unacceptable.</li>
<li>Memory protection. Stack growing into (and corrupting) data segment, hard to debug.</li>
<li>Stack corruption, a hit and run.</li>
</ul>
</li>
<li>[@32:39](https://youtu.be/-ZRv6EHaQYM?t=1959) Humor: Oxide rustfmt bot is named Ozymandias <ul>
<li>Percy Bysshe Shelley’s “Ozymandias” <a href="https://www.poetryfoundation.org/poems/46565/ozymandias">poem</a> &gt; LOOK UPON MY REFORMATTING YE MIGHTY AND DESPAIR!</li>
<li>
<a href="https://twitter.com/bcantrill/status/1428187086201376772">stale bot</a>, open source maintainers, communicating bugs and issues</li>
</ul>
</li>
<li>[@39:54](https://youtu.be/-ZRv6EHaQYM?t=2394) Fun QNX bug story <ul>
<li>QNX wrote their own POSIX utilities, they wrote their own AWK</li>
<li>QNX <a href="http://community.qnx.com/sf/docman/do/downloadDocument/projects.core_os/docman.root.os_docs/doc1073/15">developers</a>, incl. Peter van der Veen</li>
</ul>
</li>
<li>[@43:00](https://youtu.be/-ZRv6EHaQYM?t=2580) How do you say… <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Vi">vi</a>, <a href="https://en.wikipedia.org/wiki/Ed_(text_editor)">ed</a> &gt; Tom: Off with their eds!</li>
<li>
<a href="https://en.wikipedia.org/wiki/Sed">sed</a>, <a href="https://en.wikipedia.org/wiki/Ps_(Unix)">ps</a>, <a href="https://kubernetes.io/docs/reference/kubectl/overview/">kubectl</a>, <a href="https://en.wikipedia.org/wiki/Passwd#Password_file">/etc/passwd</a>, QNX (quick UNIX)</li>
</ul>
</li>
<li>[@49:34](https://youtu.be/-ZRv6EHaQYM?t=2974) Octothorpe <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Number_sign">number sign</a>, pound sign, hash</li>
<li>! pronounced “bang” (see <a href="https://en.wikipedia.org/wiki/Shebang_(Unix)">shebang</a>)</li>
<li>* pronounced “star”, “splat”. (see regex <a href="https://en.wikipedia.org/wiki/Kleene_star">Kleene star</a>)</li>
<li>^ pronounced “caret”, “hat”.</li>
</ul>
</li>
<li>[@53:45](https://youtu.be/-ZRv6EHaQYM?t=3225) <a href="https://en.wikipedia.org/wiki/INTERCAL">INTERCAL</a> &gt; Bryan: is INTERCAL deliberately designed to be unusable?<br> &gt; Tom: it’s designed to be hilarious. <ul><li>INTERCAL was created by Don Woods and Jim Lyon (Tom’s brother!) see the <a href="https://www.google.com/search?q=intercal+programming+language+reference">manual</a>
</li></ul>
</li>
</ul><p><br><strong>Character</strong> <strong>Name</strong><br> | .  | spot<br> | :  | two-spot<br> | ,  | tail<br> | #  | mesh<br> | =  | half-mesh<br> | !  | wow<br> | ?  | what<br> | "  | rabbit-ears<br> | %  | double-oh-seven<br> | ()  | wax/wane<br> | {}  | embrace/bracelet<br> | $  | big money<br> | /  | slat<br> | \  | backslat<br> | @  | whirlpool<br> | ^  | shark or sharkfin</p><ul>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_3270">IBM 3270</a> terminal, <a href="https://en.wikipedia.org/wiki/EBCDIC">EBCDIC</a> Extended Binary Coded Decimal Interchange Code</li>
<li>[@55:25](https://youtu.be/-ZRv6EHaQYM?t=3325) Matt on screen readers, accessibility <ul>
<li>NonVisual Desktop Access <a href="https://en.wikipedia.org/wiki/NonVisual_Desktop_Access">NVDA</a>
</li>
<li>&amp; <a href="https://en.wikipedia.org/wiki/Ampersand">ampersand</a> as “et”</li>
<li><a href="https://en.wikipedia.org/wiki/Emacspeak">Emacspeak</a></li>
<li><a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a></li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 23rd, 2021</b></p><p>The episode formerly known as ℔</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/-ZRv6EHaQYM">the recording for our Twitter Space for August 23rd, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 23rd included <a href="https://twitter.com/Det_Conan_Kudo">Neal Gompa</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/Penguin">Jeremy Tanner</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Last week’s <a href="https://youtu.be/hlQuF75L4TE">recording</a> on “Showstopper” with author G. Pascal Zachary, and Jessamyn West.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate">Ashton-Tate</a> history (there never was any Ashton, and dBASE II <em>was</em> the first version) <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate#dBASE_IV:_Decline_and_fall_(1988%E2%80%931990)">dBASE IV</a> was “slow, buggy” and didn’t get fixed in a timely manner</li>
<li>Last week, Pascal mentioned that CEO <a href="https://en.wikipedia.org/wiki/Ashton-Tate#Ed_Esber">Ed Esber</a> “in a fit of insanity admitted to me (a journalist) he didn’t know how to use his company’s own product!”</li>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate#Friday!">Friday!</a> personal information manager, and <a href="https://en.wikipedia.org/wiki/Borland_Sidekick">Sidekick</a> from Borland (like Google calendar for DOS)</li>
</ul>
</li>
<li>[@3:01](https://youtu.be/-ZRv6EHaQYM?t=181) Phrasing: operating program (vs operating system) <ul>
<li>Steve Jobs 1992 MIT Sloan <a href="https://youtu.be/Gk-9Fd2mEnI">talk</a> ~72mins on consultants, hiring people and leaving Apple (see <a href="https://mitsloan.mit.edu/ideas-made-to-matter/steve-jobs-talks-consultants-hiring-and-leaving-apple-unearthed-1992-talk">mit.edu</a> summary) &gt; Jobs: NeXTSTEP is not an operating system, it’s an operating environment</li>
<li>July 5th <a href="https://youtu.be/2H9XQBdLB0Y">recording</a> discussing NeXT. Randall Stross book: <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">Steve Jobs and the NeXT Big Thing</a> (1993) &gt; Mac OSX focused on user capabilities of the desktop environment, but they considered it one and the same with the operating system</li>
</ul>
</li>
<li>[@7:42](https://youtu.be/-ZRv6EHaQYM?t=462) Windows NT had “multiple personalities” &gt; Adam: I was instantly transported to the 90’s. &gt; Bryan: I could hear Smashing Pumpkins playing on the radio. <ul>
<li>Sun’s <a href="https://en.wikipedia.org/wiki/Spring_(operating_system)">Spring</a> OS was the <a href="https://www.google.com/search?q=ne+plus+ultra">ne plus ultra</a> of this approach</li>
<li>
<a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a> microkernel, <a href="https://en.wikipedia.org/wiki/GNU_Hurd">GNU Hurd</a>, <a href="https://en.wikipedia.org/wiki/Apple_M1">Apple M1</a>,</li>
<li>Windows Subsystem for Linux <a href="https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux">WSL</a> &gt; Adam: Docker takes static linking to the extreme and just ships everything</li>
</ul>
</li>
<li>[@12:40](https://youtu.be/-ZRv6EHaQYM?t=760) Microkernels &gt; Simeon: (Oxide) is working on a microkernel for Hubis, tell us about that <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Minix">Minix</a>, and the <a href="https://en.wikipedia.org/wiki/Tanenbaum%E2%80%93Torvalds_debate">Tanenbaum-Torvalds</a> 1992 microkernel vs monolithic debate</li>
<li>
<a href="https://en.wikipedia.org/wiki/QNX">QNX</a> Unix-like real-time OS <ul>
<li>See ACM ByteCast interview with Rashmi Mohan, Bryan tells the <a href="https://youtu.be/seFP7-KI2OI?t=405">story</a> ~3mins of coming to QNX after reading about it in the “Operating Systems Roundup” of Byte Magazine 1993 (see also Bryan’s blog <a href="http://dtrace.org/blogs/bmc/2007/11/08/dtrace-on-qnx/">post</a> and <a href="https://openqnx.com/node/298">remembering Dan Hildebrand</a>)</li>
<li><a href="https://en.wikipedia.org/wiki/L4_microkernel_family">L4 microkernel</a></li>
<li>The <a href="https://web.archive.org/web/20001202195500/http://www.qnx.com:80/demodisk/index.html">QNX 1.44M demo disk</a><ul><li>The GUI was called Photon. &gt; Bryan: why would we not run this (QNX) absolutely everywhere?</li></ul>
</li>
</ul>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Oberon_(operating_system)">Oberon</a> OS. <a href="http://www.qnx.com/developers/docs/6.5.0SP1.update/com.qnx.doc.neutrino_user_guide/using_photon.html">Photon</a> microGUI</li>
</ul>
</li>
<li>[@15:49](https://youtu.be/-ZRv6EHaQYM?t=949) Laura on writing a microcontroller operating system <ul>
<li>Cliff Biffle’s <a href="http://cliffle.com/">website</a>
</li>
<li>Microkernels, root of trust, embedded systems</li>
<li>There is very little (or no) dynamic memory allocation in Hubris.</li>
<li>
<a href="https://www.tockos.org/">Tock</a> multitasking embedded OS, and Bryan’s “Tockilator: Deducing Tock execution flows from Ibex Verilator traces” <a href="https://www.youtube.com/watch?v=zPuELAzJyno&amp;t=10534s">video</a> ~12mins</li>
<li>In Tock, dynamic program loading is central. Hubris functions as a security-minded service processor. The programs it will use are all known in advance; so dynamic loading (and the accompanying security concerns) can be left out.</li>
<li>Fit-to-purpose OSs</li>
</ul>
</li>
<li>[@24:19](https://youtu.be/-ZRv6EHaQYM?t=1459) ROPI/RWPI (aka “Ropy Rippy”) and the growing pains of RISC-V <ul>
<li>GitHub issue <a href="https://github.com/riscv/riscv-elf-psabi-doc/issues/128">ROPI/RWPI Specification (Embedded PIC)</a>
</li>
<li>
<a href="https://opentitan.org/">OpenTitan</a>, ARM <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M">Cortex-M</a> &gt; When we set out to write Hubris, we spent a lot of time reading &gt; and learning what’s out there.</li>
<li>QNX vs monolithic systems. QNX was robust against module failure, so bugs in modules were tolerable. At Sun, faults in a module were system faults, so bugs were unacceptable.</li>
<li>Memory protection. Stack growing into (and corrupting) data segment, hard to debug.</li>
<li>Stack corruption, a hit and run.</li>
</ul>
</li>
<li>[@32:39](https://youtu.be/-ZRv6EHaQYM?t=1959) Humor: Oxide rustfmt bot is named Ozymandias <ul>
<li>Percy Bysshe Shelley’s “Ozymandias” <a href="https://www.poetryfoundation.org/poems/46565/ozymandias">poem</a> &gt; LOOK UPON MY REFORMATTING YE MIGHTY AND DESPAIR!</li>
<li>
<a href="https://twitter.com/bcantrill/status/1428187086201376772">stale bot</a>, open source maintainers, communicating bugs and issues</li>
</ul>
</li>
<li>[@39:54](https://youtu.be/-ZRv6EHaQYM?t=2394) Fun QNX bug story <ul>
<li>QNX wrote their own POSIX utilities, they wrote their own AWK</li>
<li>QNX <a href="http://community.qnx.com/sf/docman/do/downloadDocument/projects.core_os/docman.root.os_docs/doc1073/15">developers</a>, incl. Peter van der Veen</li>
</ul>
</li>
<li>[@43:00](https://youtu.be/-ZRv6EHaQYM?t=2580) How do you say… <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Vi">vi</a>, <a href="https://en.wikipedia.org/wiki/Ed_(text_editor)">ed</a> &gt; Tom: Off with their eds!</li>
<li>
<a href="https://en.wikipedia.org/wiki/Sed">sed</a>, <a href="https://en.wikipedia.org/wiki/Ps_(Unix)">ps</a>, <a href="https://kubernetes.io/docs/reference/kubectl/overview/">kubectl</a>, <a href="https://en.wikipedia.org/wiki/Passwd#Password_file">/etc/passwd</a>, QNX (quick UNIX)</li>
</ul>
</li>
<li>[@49:34](https://youtu.be/-ZRv6EHaQYM?t=2974) Octothorpe <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Number_sign">number sign</a>, pound sign, hash</li>
<li>! pronounced “bang” (see <a href="https://en.wikipedia.org/wiki/Shebang_(Unix)">shebang</a>)</li>
<li>* pronounced “star”, “splat”. (see regex <a href="https://en.wikipedia.org/wiki/Kleene_star">Kleene star</a>)</li>
<li>^ pronounced “caret”, “hat”.</li>
</ul>
</li>
<li>[@53:45](https://youtu.be/-ZRv6EHaQYM?t=3225) <a href="https://en.wikipedia.org/wiki/INTERCAL">INTERCAL</a> &gt; Bryan: is INTERCAL deliberately designed to be unusable?<br> &gt; Tom: it’s designed to be hilarious. <ul><li>INTERCAL was created by Don Woods and Jim Lyon (Tom’s brother!) see the <a href="https://www.google.com/search?q=intercal+programming+language+reference">manual</a>
</li></ul>
</li>
</ul><p><br><strong>Character</strong> <strong>Name</strong><br> | .  | spot<br> | :  | two-spot<br> | ,  | tail<br> | #  | mesh<br> | =  | half-mesh<br> | !  | wow<br> | ?  | what<br> | "  | rabbit-ears<br> | %  | double-oh-seven<br> | ()  | wax/wane<br> | {}  | embrace/bracelet<br> | $  | big money<br> | /  | slat<br> | \  | backslat<br> | @  | whirlpool<br> | ^  | shark or sharkfin</p><ul>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_3270">IBM 3270</a> terminal, <a href="https://en.wikipedia.org/wiki/EBCDIC">EBCDIC</a> Extended Binary Coded Decimal Interchange Code</li>
<li>[@55:25](https://youtu.be/-ZRv6EHaQYM?t=3325) Matt on screen readers, accessibility <ul>
<li>NonVisual Desktop Access <a href="https://en.wikipedia.org/wiki/NonVisual_Desktop_Access">NVDA</a>
</li>
<li>&amp; <a href="https://en.wikipedia.org/wiki/Ampersand">ampersand</a> as “et”</li>
<li><a href="https://en.wikipedia.org/wiki/Emacspeak">Emacspeak</a></li>
<li><a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a></li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 23 Aug 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/4301ba28/10593a81.mp3" length="63697708" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3981</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 23rd, 2021</b></p><p>The episode formerly known as ℔</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/-ZRv6EHaQYM">the recording for our Twitter Space for August 23rd, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 23rd included <a href="https://twitter.com/Det_Conan_Kudo">Neal Gompa</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/Penguin">Jeremy Tanner</a>, <a href="https://twitter.com/mw_campbell">Matt Campbell</a>, <a href="https://twitter.com/simeonmiteff">Simeon Miteff</a> and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Last week’s <a href="https://youtu.be/hlQuF75L4TE">recording</a> on “Showstopper” with author G. Pascal Zachary, and Jessamyn West.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate">Ashton-Tate</a> history (there never was any Ashton, and dBASE II <em>was</em> the first version) <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate#dBASE_IV:_Decline_and_fall_(1988%E2%80%931990)">dBASE IV</a> was “slow, buggy” and didn’t get fixed in a timely manner</li>
<li>Last week, Pascal mentioned that CEO <a href="https://en.wikipedia.org/wiki/Ashton-Tate#Ed_Esber">Ed Esber</a> “in a fit of insanity admitted to me (a journalist) he didn’t know how to use his company’s own product!”</li>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate#Friday!">Friday!</a> personal information manager, and <a href="https://en.wikipedia.org/wiki/Borland_Sidekick">Sidekick</a> from Borland (like Google calendar for DOS)</li>
</ul>
</li>
<li>[@3:01](https://youtu.be/-ZRv6EHaQYM?t=181) Phrasing: operating program (vs operating system) <ul>
<li>Steve Jobs 1992 MIT Sloan <a href="https://youtu.be/Gk-9Fd2mEnI">talk</a> ~72mins on consultants, hiring people and leaving Apple (see <a href="https://mitsloan.mit.edu/ideas-made-to-matter/steve-jobs-talks-consultants-hiring-and-leaving-apple-unearthed-1992-talk">mit.edu</a> summary) &gt; Jobs: NeXTSTEP is not an operating system, it’s an operating environment</li>
<li>July 5th <a href="https://youtu.be/2H9XQBdLB0Y">recording</a> discussing NeXT. Randall Stross book: <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">Steve Jobs and the NeXT Big Thing</a> (1993) &gt; Mac OSX focused on user capabilities of the desktop environment, but they considered it one and the same with the operating system</li>
</ul>
</li>
<li>[@7:42](https://youtu.be/-ZRv6EHaQYM?t=462) Windows NT had “multiple personalities” &gt; Adam: I was instantly transported to the 90’s. &gt; Bryan: I could hear Smashing Pumpkins playing on the radio. <ul>
<li>Sun’s <a href="https://en.wikipedia.org/wiki/Spring_(operating_system)">Spring</a> OS was the <a href="https://www.google.com/search?q=ne+plus+ultra">ne plus ultra</a> of this approach</li>
<li>
<a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a> microkernel, <a href="https://en.wikipedia.org/wiki/GNU_Hurd">GNU Hurd</a>, <a href="https://en.wikipedia.org/wiki/Apple_M1">Apple M1</a>,</li>
<li>Windows Subsystem for Linux <a href="https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux">WSL</a> &gt; Adam: Docker takes static linking to the extreme and just ships everything</li>
</ul>
</li>
<li>[@12:40](https://youtu.be/-ZRv6EHaQYM?t=760) Microkernels &gt; Simeon: (Oxide) is working on a microkernel for Hubis, tell us about that <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Minix">Minix</a>, and the <a href="https://en.wikipedia.org/wiki/Tanenbaum%E2%80%93Torvalds_debate">Tanenbaum-Torvalds</a> 1992 microkernel vs monolithic debate</li>
<li>
<a href="https://en.wikipedia.org/wiki/QNX">QNX</a> Unix-like real-time OS <ul>
<li>See ACM ByteCast interview with Rashmi Mohan, Bryan tells the <a href="https://youtu.be/seFP7-KI2OI?t=405">story</a> ~3mins of coming to QNX after reading about it in the “Operating Systems Roundup” of Byte Magazine 1993 (see also Bryan’s blog <a href="http://dtrace.org/blogs/bmc/2007/11/08/dtrace-on-qnx/">post</a> and <a href="https://openqnx.com/node/298">remembering Dan Hildebrand</a>)</li>
<li><a href="https://en.wikipedia.org/wiki/L4_microkernel_family">L4 microkernel</a></li>
<li>The <a href="https://web.archive.org/web/20001202195500/http://www.qnx.com:80/demodisk/index.html">QNX 1.44M demo disk</a><ul><li>The GUI was called Photon. &gt; Bryan: why would we not run this (QNX) absolutely everywhere?</li></ul>
</li>
</ul>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Oberon_(operating_system)">Oberon</a> OS. <a href="http://www.qnx.com/developers/docs/6.5.0SP1.update/com.qnx.doc.neutrino_user_guide/using_photon.html">Photon</a> microGUI</li>
</ul>
</li>
<li>[@15:49](https://youtu.be/-ZRv6EHaQYM?t=949) Laura on writing a microcontroller operating system <ul>
<li>Cliff Biffle’s <a href="http://cliffle.com/">website</a>
</li>
<li>Microkernels, root of trust, embedded systems</li>
<li>There is very little (or no) dynamic memory allocation in Hubris.</li>
<li>
<a href="https://www.tockos.org/">Tock</a> multitasking embedded OS, and Bryan’s “Tockilator: Deducing Tock execution flows from Ibex Verilator traces” <a href="https://www.youtube.com/watch?v=zPuELAzJyno&amp;t=10534s">video</a> ~12mins</li>
<li>In Tock, dynamic program loading is central. Hubris functions as a security-minded service processor. The programs it will use are all known in advance; so dynamic loading (and the accompanying security concerns) can be left out.</li>
<li>Fit-to-purpose OSs</li>
</ul>
</li>
<li>[@24:19](https://youtu.be/-ZRv6EHaQYM?t=1459) ROPI/RWPI (aka “Ropy Rippy”) and the growing pains of RISC-V <ul>
<li>GitHub issue <a href="https://github.com/riscv/riscv-elf-psabi-doc/issues/128">ROPI/RWPI Specification (Embedded PIC)</a>
</li>
<li>
<a href="https://opentitan.org/">OpenTitan</a>, ARM <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M">Cortex-M</a> &gt; When we set out to write Hubris, we spent a lot of time reading &gt; and learning what’s out there.</li>
<li>QNX vs monolithic systems. QNX was robust against module failure, so bugs in modules were tolerable. At Sun, faults in a module were system faults, so bugs were unacceptable.</li>
<li>Memory protection. Stack growing into (and corrupting) data segment, hard to debug.</li>
<li>Stack corruption, a hit and run.</li>
</ul>
</li>
<li>[@32:39](https://youtu.be/-ZRv6EHaQYM?t=1959) Humor: Oxide rustfmt bot is named Ozymandias <ul>
<li>Percy Bysshe Shelley’s “Ozymandias” <a href="https://www.poetryfoundation.org/poems/46565/ozymandias">poem</a> &gt; LOOK UPON MY REFORMATTING YE MIGHTY AND DESPAIR!</li>
<li>
<a href="https://twitter.com/bcantrill/status/1428187086201376772">stale bot</a>, open source maintainers, communicating bugs and issues</li>
</ul>
</li>
<li>[@39:54](https://youtu.be/-ZRv6EHaQYM?t=2394) Fun QNX bug story <ul>
<li>QNX wrote their own POSIX utilities, they wrote their own AWK</li>
<li>QNX <a href="http://community.qnx.com/sf/docman/do/downloadDocument/projects.core_os/docman.root.os_docs/doc1073/15">developers</a>, incl. Peter van der Veen</li>
</ul>
</li>
<li>[@43:00](https://youtu.be/-ZRv6EHaQYM?t=2580) How do you say… <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Vi">vi</a>, <a href="https://en.wikipedia.org/wiki/Ed_(text_editor)">ed</a> &gt; Tom: Off with their eds!</li>
<li>
<a href="https://en.wikipedia.org/wiki/Sed">sed</a>, <a href="https://en.wikipedia.org/wiki/Ps_(Unix)">ps</a>, <a href="https://kubernetes.io/docs/reference/kubectl/overview/">kubectl</a>, <a href="https://en.wikipedia.org/wiki/Passwd#Password_file">/etc/passwd</a>, QNX (quick UNIX)</li>
</ul>
</li>
<li>[@49:34](https://youtu.be/-ZRv6EHaQYM?t=2974) Octothorpe <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Number_sign">number sign</a>, pound sign, hash</li>
<li>! pronounced “bang” (see <a href="https://en.wikipedia.org/wiki/Shebang_(Unix)">shebang</a>)</li>
<li>* pronounced “star”, “splat”. (see regex <a href="https://en.wikipedia.org/wiki/Kleene_star">Kleene star</a>)</li>
<li>^ pronounced “caret”, “hat”.</li>
</ul>
</li>
<li>[@53:45](https://youtu.be/-ZRv6EHaQYM?t=3225) <a href="https://en.wikipedia.org/wiki/INTERCAL">INTERCAL</a> &gt; Bryan: is INTERCAL deliberately designed to be unusable?<br> &gt; Tom: it’s designed to be hilarious. <ul><li>INTERCAL was created by Don Woods and Jim Lyon (Tom’s brother!) see the <a href="https://www.google.com/search?q=intercal+programming+language+reference">manual</a>
</li></ul>
</li>
</ul><p><br><strong>Character</strong> <strong>Name</strong><br> | .  | spot<br> | :  | two-spot<br> | ,  | tail<br> | #  | mesh<br> | =  | half-mesh<br> | !  | wow<br> | ?  | what<br> | "  | rabbit-ears<br> | %  | double-oh-seven<br> | ()  | wax/wane<br> | {}  | embrace/bracelet<br> | $  | big money<br> | /  | slat<br> | \  | backslat<br> | @  | whirlpool<br> | ^  | shark or sharkfin</p><ul>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_3270">IBM 3270</a> terminal, <a href="https://en.wikipedia.org/wiki/EBCDIC">EBCDIC</a> Extended Binary Coded Decimal Interchange Code</li>
<li>[@55:25](https://youtu.be/-ZRv6EHaQYM?t=3325) Matt on screen readers, accessibility <ul>
<li>NonVisual Desktop Access <a href="https://en.wikipedia.org/wiki/NonVisual_Desktop_Access">NVDA</a>
</li>
<li>&amp; <a href="https://en.wikipedia.org/wiki/Ampersand">ampersand</a> as “et”</li>
<li><a href="https://en.wikipedia.org/wiki/Emacspeak">Emacspeak</a></li>
<li><a href="https://en.wikipedia.org/wiki/DECtalk">DECtalk</a></li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Showstopper Show</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>10</itunes:episode>
      <podcast:episode>10</podcast:episode>
      <itunes:title>The Showstopper Show</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">c8bb8e7e-c51f-49b7-8a22-6eed9b11064c</guid>
      <link>https://share.transistor.fm/s/9dc9be3f</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 16th, 2021</b></p><p>The Showstopper Show</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/hlQuF75L4TE">the recording for our Twitter Space for August 16th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 16th included special guests <a href="https://twitter.com/Gpascalzachary">G. Pascal Zachary</a> (see <a href="https://www.gpascalzachary.com">gpascalzachary.com</a>), and <a href="https://twitter.com/jessamyn">Jessamyn West</a> (see <a href="https://jessamyn.medium.com">jessamyn.medium.com</a>), as well as <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>G. Pascal Zachary’s “Showstopper! The Breakneck Race to Create Windows NT and the Next Generation at Microsoft” <a href="https://www.google.com/books/edition/Show_stopper/g2-lNwAACAAJ">book</a>
</li>
<li>Tracy Kidder’s “The Soul of a New Machine” <a href="https://www.google.com/books/edition/The_Soul_of_A_New_Machine/JP0odQpUKUYC">book</a>
</li>
<li>[@0:46](https://youtu.be/hlQuF75L4TE?t=46) “The endless debate of NT vs Unix.” <ul><li>Bryan: My whole career was kind of defined by going where Windows wasn’t. I don’t know what I was expecting, but what I found was a real time capsule from software development in the 90’s.</li></ul>
</li>
<li>[@2:46](https://youtu.be/hlQuF75L4TE?t=166) Jessamyn: There was some familial impact (from developing DG Eclipse) that wasn’t mentioned in the book. <ul><li>“O, Engineers!” retrospective from <a href="https://www.wired.com/2000/12/soul/">wired</a>
</li></ul>
</li>
<li>[@6:30](https://youtu.be/hlQuF75L4TE?t=390) What was Kidder’s process? “He lived in my house!”</li>
<li>[@8:32](https://youtu.be/hlQuF75L4TE?t=512) Zachary interviewed family members extensively. &gt; People couldn’t leave, they were staying at the office all the time.</li>
<li>[@14:23](https://youtu.be/hlQuF75L4TE?t=863) I do feel this is a time capsule. A time before two mega-trends hit: the Internet and open source.</li>
<li>[@17:33](https://youtu.be/hlQuF75L4TE?t=1053) Microsoft was kind of a joke software company in the early 90’s. &gt; Dave Cutler was a force of nature.</li>
<li>[@19:59](https://youtu.be/hlQuF75L4TE?t=1199) No one understood why someone was good at coding. It was a mystery to everyone, why there was such a wide stratification of coders. &gt; There were projects that never saw the light of day. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate">Ashton-Tate</a>, <a href="https://en.wikipedia.org/wiki/DBase">dBase</a> &gt; There was a sense from Cutler and Perazzoli, that leadership of the team, &gt; that these guys at Microsoft really didn’t get how serious the process &gt; of building this battleship was.</li>
<li>I think the level of anguish did surprise me.</li>
</ul>
</li>
<li>[@23:59](https://youtu.be/hlQuF75L4TE?t=1439)<br> In “Soul of the New Machine,” the machine was the star, and people served it. East Coast vs West Coast attitudes. &gt; On the West Coast, the personal computer were supposed to help you &gt; actualize your counter-cultural values. <ul><li>
<a href="https://en.wikipedia.org/wiki/Ken_Olsen">Ken Olsen</a> of <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation">DEC</a> &gt; Computing is equivalent with IBM. There was no software industry &gt; so long as IBM gave all the software away for free.</li></ul>
</li>
<li>[@26:09](https://youtu.be/hlQuF75L4TE?t=1569) Crashes. &gt; <a href="https://en.wikipedia.org/wiki/Steve_Wozniak">Wozniak</a> dreamed of owning &gt; his own <a href="https://en.wikipedia.org/wiki/Programmed_Data_Processor">PDP</a> &gt; computer, which cost as much as a house. So he was aware of the robustness &gt; of the minicomputer, and by contrast, the puny power of a personal computer. <ul><li>
<a href="https://en.wikipedia.org/wiki/Thirtysomething">Thirtysomething</a> &gt; Dave Cutler was not cuddly. He was menacing, he could lose his temper. &gt; And I tried not to get to close to him physically for that reason. &gt; There were two looming father figures in Cutler and Gates. &gt; And I think it created a lot of anxiety.</li></ul>
</li>
<li>[@29:52](https://youtu.be/hlQuF75L4TE?t=1792) The stakes for NT at Microsoft were high. <ul>
<li>Fred Brooks’ “The Mythical Man-Month” <a href="https://en.wikipedia.org/wiki/The_Mythical_Man-Month">book</a> &gt; It was a watershed moment in the history of computing. &gt; It was more like the last battleship, rather than the next frontier.</li>
<li>Bryan: I didn’t realize this, that Gates was arguing against memory protection with Cutler. From our perspective, shipping an operating system without memory protection, in an era when microprocessors supported it, is malpractice.</li>
</ul>
</li>
<li>[@33:14](https://youtu.be/hlQuF75L4TE?t=1994) Cutler’s vendetta against Unix. &gt; Conflict was at the heart of innovation at Microsoft at that time. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Mitch_Kapor">Mitch Kapor</a> of Lotus. &gt; These early personal computer innovators were dismissed and sometimes &gt; humiliated by mainstream big iron people of the 60’s and 70’s.</li>
<li>Bill Gates’ “The Road Ahead” <a href="https://en.wikipedia.org/wiki/The_Road_Ahead_(Gates_book)">book</a> doesn’t mention the internet.</li>
<li>Zachary’s “Endless Frontier: Vannevar Bush, Engineer of the American Century” <a href="https://www.gpascalzachary.com/endless_frontier__vannevar_bush__engineer_of_the_american_century__50100.htm">book</a> &gt; Computers on the West Coast were seen as extensions of your creativity, &gt; and a tool for liberation. And for a long time that dominated the horizons.</li>
</ul>
</li>
<li>In 2005 Gates and <a href="https://en.wikipedia.org/wiki/Steve_Ballmer">Ballmer</a> don’t want to do cloud computing. “Who’s gonna want to put their stuff in the cloud?” We’ve found that computing is a collective experience.</li>
<li>[@38:28](https://youtu.be/hlQuF75L4TE?t=2308) Email and personal messaging <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Sun_Ray">Sun Ray</a> thin client computer</li>
<li>Dennis Ritchie and Ken Thompson’s “The UNIX time-sharing system” <a href="https://scholar.google.com/scholar_lookup?author=ritchie&amp;title=the+unix+time+sharing+system">paper</a> &gt; Unix was an experiment in collaboration.</li>
<li>
<a href="https://en.wikipedia.org/wiki/RSX-11">RSX-11</a> for the <a href="https://en.wikipedia.org/wiki/PDP-11">PDP-11</a>. And <a href="https://en.wikipedia.org/wiki/OpenVMS">VMS</a> for the VAX. &gt; The attitude of looking down on Unix (as undesigned, academic) is &gt; carried forward by Microsofties today.</li>
<li>Tom: You can forgive Cutler’s misgivings, because Unix pretty much stole the thunder out of VMS.</li>
</ul>
</li>
<li>[@42:24](https://youtu.be/hlQuF75L4TE?t=2544) Interviews for the book. Family members perspective on workplace behavior. <ul>
<li>Betty Shanahan, Society of Women Engineers. Brief <a href="https://www.egr.msu.edu/future-engineer/alumni/alumni-focus-betty-shanahan">Q&amp;A</a>
</li>
<li>EAGLE (Eclipse Appreciation and Gratitude for Lonely Evenings) <a href="https://jessamyn.medium.com/eclipse-appreciation-and-gratitude-for-lonely-evenings-a254d288fb5c">award</a> &gt; Betty’s husband got an award for having to do his own laundry…</li>
<li>Jessamyn’s “Women in Early Tech” <a href="https://jessamyn.medium.com/betty-shanahan-and-the-creepy-guys-of-data-general-add239ab87fb">blog entry</a> about Shanahan</li>
</ul>
</li>
<li>[@48:10](https://youtu.be/hlQuF75L4TE?t=2890) Where did these engineers end up? They are broadly no longer engineers. This project burned people out. <ul>
<li>Short 1993 <a href="https://www.tech-insider.org/windows/research/1993/0526.html">article</a> by Zachary: “After two years in ship mode… a lot of people are angry, tired, and burned out.”</li>
<li>Johanne Caron, <a href="https://www.linkedin.com/in/johanne-caron-randolph-4ba97413">linkedin</a>
</li>
<li>Pascal: Kidder was like a fly on the wall. I was doing reconstruction as well as observation. I talked to family members to get the whole picture.</li>
</ul>
</li>
<li>[@53:20](https://youtu.be/hlQuF75L4TE?t=3200) Cutler got to run his own show. &gt; Ken Olsen was like the <a href="https://en.wikipedia.org/wiki/Lyndon_B._Johnson">LBJ</a> &gt; of the computer industry: he’s waist deep in the big money. <ul>
<li>Corporate culture. Hotshot coders. Renegades, rebels, hero programmers. &gt; It’s the majesty and mystery of code writing, that there’s such a wide &gt; range of performance.</li>
<li>Pascal: I wasn’t invited to the 25 year anniversary of the NT team..</li>
</ul>
</li>
<li>[@1:01:47](https://youtu.be/hlQuF75L4TE?t=3707) Journalists and companies. &gt; Soul of a New Machine was very flattering to the company. <ul>
<li>Jobs backdated stock options, in violation of clear federal law. Gates repeatedly stole things. &gt; The hobbyists were a small market, Microsoft needed to sell to corporations.</li>
<li>Zachary’s “Software, the Invisible Technology” 2016 <a href="https://spectrum.ieee.org/software-the-invisible-technology">essay</a> &gt; Where we used to relate to programs, we now relate to services.</li>
</ul>
</li>
<li>I think there needs to be a greater literature of software: the making of it, its purpose, its vulnerabilities, its values.<ul><li>Tom: It’s because us practitioners are too embarrased about it all..</li></ul>
</li>
<li>[@1:05:49](https://youtu.be/hlQuF75L4TE?t=3949) Josh compares and contrasts. &gt; Coders don’t have to test their own stuff. The second stringers do that. <ul>
<li>Pascal: I would encourage people to write more about software and how it’s created.</li>
<li>Zachary’s “Code Rush” <a href="https://youtu.be/4Q7FTjhvZ7Y">film</a> ~56mins about Netscape.</li>
</ul>
</li>
<li>[@1:08:58](https://youtu.be/hlQuF75L4TE?t=4138) The rise of open source. Software as immutable artifact: once it’s written, it’s written. &gt; Amazon, Google, Netflix are not possible without open source.</li>
<li>[@1:10:50](https://youtu.be/hlQuF75L4TE?t=4250) Jessamyn on helping people use tech. Accessibility &gt; I’m a service oriented person. I work with &gt; people who are struggling with technology.</li>
<li>[@1:15:24](https://youtu.be/hlQuF75L4TE?t=4524) Agency of users. &gt; Bryan: Without memory protection, you would lose hours of work. &gt; One bad application could cause the computer to reboot. <ul>
<li>Open source tools, and user accessible scripting/modding.</li>
<li>Gary Larson’s “The Far Side” <a href="https://images.app.goo.gl/fnrrdDDJtraefD769">comic</a> “Blah blah blah Ginger”</li>
<li>Tweet <a href="https://twitter.com/hadip/status/1426587396343099397">series</a> about Internet Explorer’s 25 year anniversary</li>
</ul>
</li>
<li>[@1:22:01](https://youtu.be/hlQuF75L4TE?t=4921) Pascal’s parting thoughts. &gt; The transformation of software from artifact into service, &gt; is both fabulous and also scary. It changes all the time. &gt; When NT was done, it was a fixed unchanging thing. <ul>
<li>Bryan: The darker side to services is people need to attend to it whenever it breaks.</li>
<li>Adam: It’s the death march with no end. &gt; Pascal: Thanks everyone, I’d love to hear from you individually. &gt; I’m interested in why people continue to turn to Showstopper &gt; and find some value in it.</li>
<li>Pascal: I encourage you to think about the literary aspects of software. I think it’s valuable for society and civilization, for our culture, because there really is an artistic, artisanal side to software. Thanks again for including me.</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 16th, 2021</b></p><p>The Showstopper Show</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/hlQuF75L4TE">the recording for our Twitter Space for August 16th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 16th included special guests <a href="https://twitter.com/Gpascalzachary">G. Pascal Zachary</a> (see <a href="https://www.gpascalzachary.com">gpascalzachary.com</a>), and <a href="https://twitter.com/jessamyn">Jessamyn West</a> (see <a href="https://jessamyn.medium.com">jessamyn.medium.com</a>), as well as <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>G. Pascal Zachary’s “Showstopper! The Breakneck Race to Create Windows NT and the Next Generation at Microsoft” <a href="https://www.google.com/books/edition/Show_stopper/g2-lNwAACAAJ">book</a>
</li>
<li>Tracy Kidder’s “The Soul of a New Machine” <a href="https://www.google.com/books/edition/The_Soul_of_A_New_Machine/JP0odQpUKUYC">book</a>
</li>
<li>[@0:46](https://youtu.be/hlQuF75L4TE?t=46) “The endless debate of NT vs Unix.” <ul><li>Bryan: My whole career was kind of defined by going where Windows wasn’t. I don’t know what I was expecting, but what I found was a real time capsule from software development in the 90’s.</li></ul>
</li>
<li>[@2:46](https://youtu.be/hlQuF75L4TE?t=166) Jessamyn: There was some familial impact (from developing DG Eclipse) that wasn’t mentioned in the book. <ul><li>“O, Engineers!” retrospective from <a href="https://www.wired.com/2000/12/soul/">wired</a>
</li></ul>
</li>
<li>[@6:30](https://youtu.be/hlQuF75L4TE?t=390) What was Kidder’s process? “He lived in my house!”</li>
<li>[@8:32](https://youtu.be/hlQuF75L4TE?t=512) Zachary interviewed family members extensively. &gt; People couldn’t leave, they were staying at the office all the time.</li>
<li>[@14:23](https://youtu.be/hlQuF75L4TE?t=863) I do feel this is a time capsule. A time before two mega-trends hit: the Internet and open source.</li>
<li>[@17:33](https://youtu.be/hlQuF75L4TE?t=1053) Microsoft was kind of a joke software company in the early 90’s. &gt; Dave Cutler was a force of nature.</li>
<li>[@19:59](https://youtu.be/hlQuF75L4TE?t=1199) No one understood why someone was good at coding. It was a mystery to everyone, why there was such a wide stratification of coders. &gt; There were projects that never saw the light of day. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate">Ashton-Tate</a>, <a href="https://en.wikipedia.org/wiki/DBase">dBase</a> &gt; There was a sense from Cutler and Perazzoli, that leadership of the team, &gt; that these guys at Microsoft really didn’t get how serious the process &gt; of building this battleship was.</li>
<li>I think the level of anguish did surprise me.</li>
</ul>
</li>
<li>[@23:59](https://youtu.be/hlQuF75L4TE?t=1439)<br> In “Soul of the New Machine,” the machine was the star, and people served it. East Coast vs West Coast attitudes. &gt; On the West Coast, the personal computer were supposed to help you &gt; actualize your counter-cultural values. <ul><li>
<a href="https://en.wikipedia.org/wiki/Ken_Olsen">Ken Olsen</a> of <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation">DEC</a> &gt; Computing is equivalent with IBM. There was no software industry &gt; so long as IBM gave all the software away for free.</li></ul>
</li>
<li>[@26:09](https://youtu.be/hlQuF75L4TE?t=1569) Crashes. &gt; <a href="https://en.wikipedia.org/wiki/Steve_Wozniak">Wozniak</a> dreamed of owning &gt; his own <a href="https://en.wikipedia.org/wiki/Programmed_Data_Processor">PDP</a> &gt; computer, which cost as much as a house. So he was aware of the robustness &gt; of the minicomputer, and by contrast, the puny power of a personal computer. <ul><li>
<a href="https://en.wikipedia.org/wiki/Thirtysomething">Thirtysomething</a> &gt; Dave Cutler was not cuddly. He was menacing, he could lose his temper. &gt; And I tried not to get to close to him physically for that reason. &gt; There were two looming father figures in Cutler and Gates. &gt; And I think it created a lot of anxiety.</li></ul>
</li>
<li>[@29:52](https://youtu.be/hlQuF75L4TE?t=1792) The stakes for NT at Microsoft were high. <ul>
<li>Fred Brooks’ “The Mythical Man-Month” <a href="https://en.wikipedia.org/wiki/The_Mythical_Man-Month">book</a> &gt; It was a watershed moment in the history of computing. &gt; It was more like the last battleship, rather than the next frontier.</li>
<li>Bryan: I didn’t realize this, that Gates was arguing against memory protection with Cutler. From our perspective, shipping an operating system without memory protection, in an era when microprocessors supported it, is malpractice.</li>
</ul>
</li>
<li>[@33:14](https://youtu.be/hlQuF75L4TE?t=1994) Cutler’s vendetta against Unix. &gt; Conflict was at the heart of innovation at Microsoft at that time. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Mitch_Kapor">Mitch Kapor</a> of Lotus. &gt; These early personal computer innovators were dismissed and sometimes &gt; humiliated by mainstream big iron people of the 60’s and 70’s.</li>
<li>Bill Gates’ “The Road Ahead” <a href="https://en.wikipedia.org/wiki/The_Road_Ahead_(Gates_book)">book</a> doesn’t mention the internet.</li>
<li>Zachary’s “Endless Frontier: Vannevar Bush, Engineer of the American Century” <a href="https://www.gpascalzachary.com/endless_frontier__vannevar_bush__engineer_of_the_american_century__50100.htm">book</a> &gt; Computers on the West Coast were seen as extensions of your creativity, &gt; and a tool for liberation. And for a long time that dominated the horizons.</li>
</ul>
</li>
<li>In 2005 Gates and <a href="https://en.wikipedia.org/wiki/Steve_Ballmer">Ballmer</a> don’t want to do cloud computing. “Who’s gonna want to put their stuff in the cloud?” We’ve found that computing is a collective experience.</li>
<li>[@38:28](https://youtu.be/hlQuF75L4TE?t=2308) Email and personal messaging <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Sun_Ray">Sun Ray</a> thin client computer</li>
<li>Dennis Ritchie and Ken Thompson’s “The UNIX time-sharing system” <a href="https://scholar.google.com/scholar_lookup?author=ritchie&amp;title=the+unix+time+sharing+system">paper</a> &gt; Unix was an experiment in collaboration.</li>
<li>
<a href="https://en.wikipedia.org/wiki/RSX-11">RSX-11</a> for the <a href="https://en.wikipedia.org/wiki/PDP-11">PDP-11</a>. And <a href="https://en.wikipedia.org/wiki/OpenVMS">VMS</a> for the VAX. &gt; The attitude of looking down on Unix (as undesigned, academic) is &gt; carried forward by Microsofties today.</li>
<li>Tom: You can forgive Cutler’s misgivings, because Unix pretty much stole the thunder out of VMS.</li>
</ul>
</li>
<li>[@42:24](https://youtu.be/hlQuF75L4TE?t=2544) Interviews for the book. Family members perspective on workplace behavior. <ul>
<li>Betty Shanahan, Society of Women Engineers. Brief <a href="https://www.egr.msu.edu/future-engineer/alumni/alumni-focus-betty-shanahan">Q&amp;A</a>
</li>
<li>EAGLE (Eclipse Appreciation and Gratitude for Lonely Evenings) <a href="https://jessamyn.medium.com/eclipse-appreciation-and-gratitude-for-lonely-evenings-a254d288fb5c">award</a> &gt; Betty’s husband got an award for having to do his own laundry…</li>
<li>Jessamyn’s “Women in Early Tech” <a href="https://jessamyn.medium.com/betty-shanahan-and-the-creepy-guys-of-data-general-add239ab87fb">blog entry</a> about Shanahan</li>
</ul>
</li>
<li>[@48:10](https://youtu.be/hlQuF75L4TE?t=2890) Where did these engineers end up? They are broadly no longer engineers. This project burned people out. <ul>
<li>Short 1993 <a href="https://www.tech-insider.org/windows/research/1993/0526.html">article</a> by Zachary: “After two years in ship mode… a lot of people are angry, tired, and burned out.”</li>
<li>Johanne Caron, <a href="https://www.linkedin.com/in/johanne-caron-randolph-4ba97413">linkedin</a>
</li>
<li>Pascal: Kidder was like a fly on the wall. I was doing reconstruction as well as observation. I talked to family members to get the whole picture.</li>
</ul>
</li>
<li>[@53:20](https://youtu.be/hlQuF75L4TE?t=3200) Cutler got to run his own show. &gt; Ken Olsen was like the <a href="https://en.wikipedia.org/wiki/Lyndon_B._Johnson">LBJ</a> &gt; of the computer industry: he’s waist deep in the big money. <ul>
<li>Corporate culture. Hotshot coders. Renegades, rebels, hero programmers. &gt; It’s the majesty and mystery of code writing, that there’s such a wide &gt; range of performance.</li>
<li>Pascal: I wasn’t invited to the 25 year anniversary of the NT team..</li>
</ul>
</li>
<li>[@1:01:47](https://youtu.be/hlQuF75L4TE?t=3707) Journalists and companies. &gt; Soul of a New Machine was very flattering to the company. <ul>
<li>Jobs backdated stock options, in violation of clear federal law. Gates repeatedly stole things. &gt; The hobbyists were a small market, Microsoft needed to sell to corporations.</li>
<li>Zachary’s “Software, the Invisible Technology” 2016 <a href="https://spectrum.ieee.org/software-the-invisible-technology">essay</a> &gt; Where we used to relate to programs, we now relate to services.</li>
</ul>
</li>
<li>I think there needs to be a greater literature of software: the making of it, its purpose, its vulnerabilities, its values.<ul><li>Tom: It’s because us practitioners are too embarrased about it all..</li></ul>
</li>
<li>[@1:05:49](https://youtu.be/hlQuF75L4TE?t=3949) Josh compares and contrasts. &gt; Coders don’t have to test their own stuff. The second stringers do that. <ul>
<li>Pascal: I would encourage people to write more about software and how it’s created.</li>
<li>Zachary’s “Code Rush” <a href="https://youtu.be/4Q7FTjhvZ7Y">film</a> ~56mins about Netscape.</li>
</ul>
</li>
<li>[@1:08:58](https://youtu.be/hlQuF75L4TE?t=4138) The rise of open source. Software as immutable artifact: once it’s written, it’s written. &gt; Amazon, Google, Netflix are not possible without open source.</li>
<li>[@1:10:50](https://youtu.be/hlQuF75L4TE?t=4250) Jessamyn on helping people use tech. Accessibility &gt; I’m a service oriented person. I work with &gt; people who are struggling with technology.</li>
<li>[@1:15:24](https://youtu.be/hlQuF75L4TE?t=4524) Agency of users. &gt; Bryan: Without memory protection, you would lose hours of work. &gt; One bad application could cause the computer to reboot. <ul>
<li>Open source tools, and user accessible scripting/modding.</li>
<li>Gary Larson’s “The Far Side” <a href="https://images.app.goo.gl/fnrrdDDJtraefD769">comic</a> “Blah blah blah Ginger”</li>
<li>Tweet <a href="https://twitter.com/hadip/status/1426587396343099397">series</a> about Internet Explorer’s 25 year anniversary</li>
</ul>
</li>
<li>[@1:22:01](https://youtu.be/hlQuF75L4TE?t=4921) Pascal’s parting thoughts. &gt; The transformation of software from artifact into service, &gt; is both fabulous and also scary. It changes all the time. &gt; When NT was done, it was a fixed unchanging thing. <ul>
<li>Bryan: The darker side to services is people need to attend to it whenever it breaks.</li>
<li>Adam: It’s the death march with no end. &gt; Pascal: Thanks everyone, I’d love to hear from you individually. &gt; I’m interested in why people continue to turn to Showstopper &gt; and find some value in it.</li>
<li>Pascal: I encourage you to think about the literary aspects of software. I think it’s valuable for society and civilization, for our culture, because there really is an artistic, artisanal side to software. Thanks again for including me.</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 16 Aug 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/9dc9be3f/d49757f1.mp3" length="82905366" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5181</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: August 16th, 2021</b></p><p>The Showstopper Show</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/hlQuF75L4TE">the recording for our Twitter Space for August 16th, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on August 16th included special guests <a href="https://twitter.com/Gpascalzachary">G. Pascal Zachary</a> (see <a href="https://www.gpascalzachary.com">gpascalzachary.com</a>), and <a href="https://twitter.com/jessamyn">Jessamyn West</a> (see <a href="https://jessamyn.medium.com">jessamyn.medium.com</a>), as well as <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/jmclulow">Josh Clulow</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>G. Pascal Zachary’s “Showstopper! The Breakneck Race to Create Windows NT and the Next Generation at Microsoft” <a href="https://www.google.com/books/edition/Show_stopper/g2-lNwAACAAJ">book</a>
</li>
<li>Tracy Kidder’s “The Soul of a New Machine” <a href="https://www.google.com/books/edition/The_Soul_of_A_New_Machine/JP0odQpUKUYC">book</a>
</li>
<li>[@0:46](https://youtu.be/hlQuF75L4TE?t=46) “The endless debate of NT vs Unix.” <ul><li>Bryan: My whole career was kind of defined by going where Windows wasn’t. I don’t know what I was expecting, but what I found was a real time capsule from software development in the 90’s.</li></ul>
</li>
<li>[@2:46](https://youtu.be/hlQuF75L4TE?t=166) Jessamyn: There was some familial impact (from developing DG Eclipse) that wasn’t mentioned in the book. <ul><li>“O, Engineers!” retrospective from <a href="https://www.wired.com/2000/12/soul/">wired</a>
</li></ul>
</li>
<li>[@6:30](https://youtu.be/hlQuF75L4TE?t=390) What was Kidder’s process? “He lived in my house!”</li>
<li>[@8:32](https://youtu.be/hlQuF75L4TE?t=512) Zachary interviewed family members extensively. &gt; People couldn’t leave, they were staying at the office all the time.</li>
<li>[@14:23](https://youtu.be/hlQuF75L4TE?t=863) I do feel this is a time capsule. A time before two mega-trends hit: the Internet and open source.</li>
<li>[@17:33](https://youtu.be/hlQuF75L4TE?t=1053) Microsoft was kind of a joke software company in the early 90’s. &gt; Dave Cutler was a force of nature.</li>
<li>[@19:59](https://youtu.be/hlQuF75L4TE?t=1199) No one understood why someone was good at coding. It was a mystery to everyone, why there was such a wide stratification of coders. &gt; There were projects that never saw the light of day. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Ashton-Tate">Ashton-Tate</a>, <a href="https://en.wikipedia.org/wiki/DBase">dBase</a> &gt; There was a sense from Cutler and Perazzoli, that leadership of the team, &gt; that these guys at Microsoft really didn’t get how serious the process &gt; of building this battleship was.</li>
<li>I think the level of anguish did surprise me.</li>
</ul>
</li>
<li>[@23:59](https://youtu.be/hlQuF75L4TE?t=1439)<br> In “Soul of the New Machine,” the machine was the star, and people served it. East Coast vs West Coast attitudes. &gt; On the West Coast, the personal computer were supposed to help you &gt; actualize your counter-cultural values. <ul><li>
<a href="https://en.wikipedia.org/wiki/Ken_Olsen">Ken Olsen</a> of <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation">DEC</a> &gt; Computing is equivalent with IBM. There was no software industry &gt; so long as IBM gave all the software away for free.</li></ul>
</li>
<li>[@26:09](https://youtu.be/hlQuF75L4TE?t=1569) Crashes. &gt; <a href="https://en.wikipedia.org/wiki/Steve_Wozniak">Wozniak</a> dreamed of owning &gt; his own <a href="https://en.wikipedia.org/wiki/Programmed_Data_Processor">PDP</a> &gt; computer, which cost as much as a house. So he was aware of the robustness &gt; of the minicomputer, and by contrast, the puny power of a personal computer. <ul><li>
<a href="https://en.wikipedia.org/wiki/Thirtysomething">Thirtysomething</a> &gt; Dave Cutler was not cuddly. He was menacing, he could lose his temper. &gt; And I tried not to get to close to him physically for that reason. &gt; There were two looming father figures in Cutler and Gates. &gt; And I think it created a lot of anxiety.</li></ul>
</li>
<li>[@29:52](https://youtu.be/hlQuF75L4TE?t=1792) The stakes for NT at Microsoft were high. <ul>
<li>Fred Brooks’ “The Mythical Man-Month” <a href="https://en.wikipedia.org/wiki/The_Mythical_Man-Month">book</a> &gt; It was a watershed moment in the history of computing. &gt; It was more like the last battleship, rather than the next frontier.</li>
<li>Bryan: I didn’t realize this, that Gates was arguing against memory protection with Cutler. From our perspective, shipping an operating system without memory protection, in an era when microprocessors supported it, is malpractice.</li>
</ul>
</li>
<li>[@33:14](https://youtu.be/hlQuF75L4TE?t=1994) Cutler’s vendetta against Unix. &gt; Conflict was at the heart of innovation at Microsoft at that time. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Mitch_Kapor">Mitch Kapor</a> of Lotus. &gt; These early personal computer innovators were dismissed and sometimes &gt; humiliated by mainstream big iron people of the 60’s and 70’s.</li>
<li>Bill Gates’ “The Road Ahead” <a href="https://en.wikipedia.org/wiki/The_Road_Ahead_(Gates_book)">book</a> doesn’t mention the internet.</li>
<li>Zachary’s “Endless Frontier: Vannevar Bush, Engineer of the American Century” <a href="https://www.gpascalzachary.com/endless_frontier__vannevar_bush__engineer_of_the_american_century__50100.htm">book</a> &gt; Computers on the West Coast were seen as extensions of your creativity, &gt; and a tool for liberation. And for a long time that dominated the horizons.</li>
</ul>
</li>
<li>In 2005 Gates and <a href="https://en.wikipedia.org/wiki/Steve_Ballmer">Ballmer</a> don’t want to do cloud computing. “Who’s gonna want to put their stuff in the cloud?” We’ve found that computing is a collective experience.</li>
<li>[@38:28](https://youtu.be/hlQuF75L4TE?t=2308) Email and personal messaging <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Sun_Ray">Sun Ray</a> thin client computer</li>
<li>Dennis Ritchie and Ken Thompson’s “The UNIX time-sharing system” <a href="https://scholar.google.com/scholar_lookup?author=ritchie&amp;title=the+unix+time+sharing+system">paper</a> &gt; Unix was an experiment in collaboration.</li>
<li>
<a href="https://en.wikipedia.org/wiki/RSX-11">RSX-11</a> for the <a href="https://en.wikipedia.org/wiki/PDP-11">PDP-11</a>. And <a href="https://en.wikipedia.org/wiki/OpenVMS">VMS</a> for the VAX. &gt; The attitude of looking down on Unix (as undesigned, academic) is &gt; carried forward by Microsofties today.</li>
<li>Tom: You can forgive Cutler’s misgivings, because Unix pretty much stole the thunder out of VMS.</li>
</ul>
</li>
<li>[@42:24](https://youtu.be/hlQuF75L4TE?t=2544) Interviews for the book. Family members perspective on workplace behavior. <ul>
<li>Betty Shanahan, Society of Women Engineers. Brief <a href="https://www.egr.msu.edu/future-engineer/alumni/alumni-focus-betty-shanahan">Q&amp;A</a>
</li>
<li>EAGLE (Eclipse Appreciation and Gratitude for Lonely Evenings) <a href="https://jessamyn.medium.com/eclipse-appreciation-and-gratitude-for-lonely-evenings-a254d288fb5c">award</a> &gt; Betty’s husband got an award for having to do his own laundry…</li>
<li>Jessamyn’s “Women in Early Tech” <a href="https://jessamyn.medium.com/betty-shanahan-and-the-creepy-guys-of-data-general-add239ab87fb">blog entry</a> about Shanahan</li>
</ul>
</li>
<li>[@48:10](https://youtu.be/hlQuF75L4TE?t=2890) Where did these engineers end up? They are broadly no longer engineers. This project burned people out. <ul>
<li>Short 1993 <a href="https://www.tech-insider.org/windows/research/1993/0526.html">article</a> by Zachary: “After two years in ship mode… a lot of people are angry, tired, and burned out.”</li>
<li>Johanne Caron, <a href="https://www.linkedin.com/in/johanne-caron-randolph-4ba97413">linkedin</a>
</li>
<li>Pascal: Kidder was like a fly on the wall. I was doing reconstruction as well as observation. I talked to family members to get the whole picture.</li>
</ul>
</li>
<li>[@53:20](https://youtu.be/hlQuF75L4TE?t=3200) Cutler got to run his own show. &gt; Ken Olsen was like the <a href="https://en.wikipedia.org/wiki/Lyndon_B._Johnson">LBJ</a> &gt; of the computer industry: he’s waist deep in the big money. <ul>
<li>Corporate culture. Hotshot coders. Renegades, rebels, hero programmers. &gt; It’s the majesty and mystery of code writing, that there’s such a wide &gt; range of performance.</li>
<li>Pascal: I wasn’t invited to the 25 year anniversary of the NT team..</li>
</ul>
</li>
<li>[@1:01:47](https://youtu.be/hlQuF75L4TE?t=3707) Journalists and companies. &gt; Soul of a New Machine was very flattering to the company. <ul>
<li>Jobs backdated stock options, in violation of clear federal law. Gates repeatedly stole things. &gt; The hobbyists were a small market, Microsoft needed to sell to corporations.</li>
<li>Zachary’s “Software, the Invisible Technology” 2016 <a href="https://spectrum.ieee.org/software-the-invisible-technology">essay</a> &gt; Where we used to relate to programs, we now relate to services.</li>
</ul>
</li>
<li>I think there needs to be a greater literature of software: the making of it, its purpose, its vulnerabilities, its values.<ul><li>Tom: It’s because us practitioners are too embarrased about it all..</li></ul>
</li>
<li>[@1:05:49](https://youtu.be/hlQuF75L4TE?t=3949) Josh compares and contrasts. &gt; Coders don’t have to test their own stuff. The second stringers do that. <ul>
<li>Pascal: I would encourage people to write more about software and how it’s created.</li>
<li>Zachary’s “Code Rush” <a href="https://youtu.be/4Q7FTjhvZ7Y">film</a> ~56mins about Netscape.</li>
</ul>
</li>
<li>[@1:08:58](https://youtu.be/hlQuF75L4TE?t=4138) The rise of open source. Software as immutable artifact: once it’s written, it’s written. &gt; Amazon, Google, Netflix are not possible without open source.</li>
<li>[@1:10:50](https://youtu.be/hlQuF75L4TE?t=4250) Jessamyn on helping people use tech. Accessibility &gt; I’m a service oriented person. I work with &gt; people who are struggling with technology.</li>
<li>[@1:15:24](https://youtu.be/hlQuF75L4TE?t=4524) Agency of users. &gt; Bryan: Without memory protection, you would lose hours of work. &gt; One bad application could cause the computer to reboot. <ul>
<li>Open source tools, and user accessible scripting/modding.</li>
<li>Gary Larson’s “The Far Side” <a href="https://images.app.goo.gl/fnrrdDDJtraefD769">comic</a> “Blah blah blah Ginger”</li>
<li>Tweet <a href="https://twitter.com/hadip/status/1426587396343099397">series</a> about Internet Explorer’s 25 year anniversary</li>
</ul>
</li>
<li>[@1:22:01](https://youtu.be/hlQuF75L4TE?t=4921) Pascal’s parting thoughts. &gt; The transformation of software from artifact into service, &gt; is both fabulous and also scary. It changes all the time. &gt; When NT was done, it was a fixed unchanging thing. <ul>
<li>Bryan: The darker side to services is people need to attend to it whenever it breaks.</li>
<li>Adam: It’s the death march with no end. &gt; Pascal: Thanks everyone, I’d love to hear from you individually. &gt; I’m interested in why people continue to turn to Showstopper &gt; and find some value in it.</li>
<li>Pascal: I encourage you to think about the literary aspects of software. I think it’s valuable for society and civilization, for our culture, because there really is an artistic, artisanal side to software. Thanks again for including me.</li>
</ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Agile + 20</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>9</itunes:episode>
      <podcast:episode>9</podcast:episode>
      <itunes:title>Agile + 20</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">d16781c1-00d5-466d-b30f-e5182e7cafa1</guid>
      <link>https://share.transistor.fm/s/9e9e7211</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 26, 2021</b></p><p>Agile + 20</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/3tp5EtPdPwY">the recording for our Twitter Space for July 26, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on July 26 included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Al Tenhundfeld’s <a href="https://www.simplethread.com/agile-at-20-the-failed-rebellion/">Agile at 20: The Failed Rebellion</a>
</li>
<li>The Agile <a href="https://agilemanifesto.org/">Manifesto</a>
</li>
<li>[@0:55](https://youtu.be/3tp5EtPdPwY?t=55) Adam’s experiences</li>
<li>From the Agile Manifesto <a href="https://agilemanifesto.org/history.html">history</a> &gt; The only concern with the term agile came from Martin Fowler &gt; (a Brit for those who don’t know him) who allowed that &gt; most Americans didn’t know how to pronounce the word ‘agile’.</li>
<li>[@6:25](https://youtu.be/3tp5EtPdPwY?t=385) &gt; The problem with agile is when it became so prescriptive that it &gt; lost a lot of its agility.</li>
<li>[@8:06](https://youtu.be/3tp5EtPdPwY?t=486) &gt; There’s so much that is unstructured in the way we develop software, &gt; that we are constantly seeking people to tell us how to do it. &gt; The answer is it’s complicated.</li>
<li>Steve Yegge’s <a href="http://steve-yegge.blogspot.com/2006/09/good-agile-bad-agile_27.html">Good Agile, Bad Agile</a> &gt; So the consultants, now having lost their primary customer, were at &gt; a bar one day, and one of them (named L. Ron Hubbard) said: &gt; “This nickel-a-line-of-code gig is lame. You know where &gt; the real money is at? You start your own religion.” &gt; And that’s how both Extreme Programming and Scientology were born.</li>
<li>[@9:15](https://youtu.be/3tp5EtPdPwY?t=555) <a href="https://en.wikipedia.org/wiki/Edward_Yourdon">Edward Yourdon</a><ul><li>“Decline and Fall of the American Programmer” <a href="https://en.wikipedia.org/wiki/Decline_and_Fall_of_the_American_Programmer">book</a>
</li></ul>
</li>
<li>[@10:26](https://youtu.be/3tp5EtPdPwY?t=626) “The principles are not all wrong. Some today even feel obvious.” &gt; There’s also a lack of specificity, which gives one lots of opportunity &gt; for faith healers to come in.</li>
<li>[@14:43](https://youtu.be/3tp5EtPdPwY?t=883) “Something I found surprising about Agile was how rigid it became.” <ul>
<li>Dan’s perils of personal tracking methodology</li>
<li>Sun’s engineers connecting directly with customers</li>
</ul>
</li>
<li>The Agile Ceremonies. (an <a href="https://www.easyagile.com/blog/agile-ceremonies/">ultimate guide</a>) <ul><li>Sprint Planning, Daily Stand-Up, Sprint Review, Sprint Retrospective</li></ul>
</li>
<li>[@20:48](https://youtu.be/3tp5EtPdPwY?t=1248) “I think we overly enshrine schedule estimation. If there are any unknowns it becomes really hard.” &gt; I think there’s a Heisenberg principle at work with software: &gt; you can tell what’s in a release or when it ships, but not both.</li>
<li>[@23:25](https://youtu.be/3tp5EtPdPwY?t=1405) Tom Killalea talks to success stories he’s seen with Agile <ul><li>Building S3 at AWS</li></ul>
</li>
<li>[@28:31](https://youtu.be/3tp5EtPdPwY?t=1711) Sprint planning and backlogs <ul><li>Big work chunks, responding to changing priorities</li></ul>
</li>
<li>[@33:39](https://youtu.be/3tp5EtPdPwY?t=2019) Success or failure of an Agile team? <ul>
<li>“Do demos and retrospectives”</li>
<li>Unknowns in software development make estimation hard</li>
</ul>
</li>
<li>[@39:11](https://youtu.be/3tp5EtPdPwY?t=2351) Dan’s experiences <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Personal_software_process">Personal Software Process</a>, <a href="https://en.wikipedia.org/wiki/Team_software_process">Team software process</a>, <a href="https://en.wikipedia.org/wiki/Software_Engineering_Institute">Software Engineering Institute</a> &gt; Some people really benefit from the level of rigidity that is set out &gt; by these processes. Prior to that, they just weren’t having &gt; these conversations with their sales team, product owners, etc.</li>
<li>Construction analogies, repeatability.</li>
<li><a href="https://en.wikipedia.org/wiki/Self-anchored_suspension_bridge">Self-anchored suspension bridge</a></li>
</ul>
</li>
<li>[@46:40](https://youtu.be/3tp5EtPdPwY?t=2800) Software as both information and machine. <ul>
<li>Consultancies, repeatability, incremental results.</li>
<li>“For each success story, there are many failures.”</li>
<li>Manifesto as a compromise between different methodologies</li>
<li>Silver Bullet solutions, cure-alls. See Fred Brooks’ (1987) “No Silver Bullet” <a href="https://scholar.google.com/scholar_lookup?author=brooks&amp;title=no+silver+bullet">paper</a>
</li>
</ul>
</li>
<li>[@51:18](https://youtu.be/3tp5EtPdPwY?t=3078) Demos: “Working software is the primary measure of progress.” <ul>
<li>Experimentation and iteration</li>
<li><a href="https://en.wikipedia.org/wiki/No_true_Scotsman">No true Scotsman fallacy</a></li>
<li>What does Agile even mean anymore?</li>
<li>“Letting people pretend to agree while actually disagreeing, but then going off and building working software anyway.”</li>
</ul>
</li>
<li>[@59:45](https://youtu.be/3tp5EtPdPwY?t=3585) Ed Yourdon and <a href="https://en.wikipedia.org/wiki/Edward_Yourdon#Year_2000_(Y2K)_problem">the Y2K problem</a>
</li>
<li>Maybe there are too many Agile books already.</li>
<li>Tom Killalea <a href="https://queue.acm.org/detail.cfm?id=3434573">conversation</a> with Werner Vogels <ul><li>AWS development</li></ul>
</li>
<li>Agile is more like a guideline than a target to hit.</li>
<li>Consistent team composition over time</li>
<li>“Soul of a New Machine”: trust is risk</li>
<li>The answer can’t be “you’re doing it wrong.”</li>
<li>How do you know if it’s working for your team?</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 26, 2021</b></p><p>Agile + 20</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/3tp5EtPdPwY">the recording for our Twitter Space for July 26, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on July 26 included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Al Tenhundfeld’s <a href="https://www.simplethread.com/agile-at-20-the-failed-rebellion/">Agile at 20: The Failed Rebellion</a>
</li>
<li>The Agile <a href="https://agilemanifesto.org/">Manifesto</a>
</li>
<li>[@0:55](https://youtu.be/3tp5EtPdPwY?t=55) Adam’s experiences</li>
<li>From the Agile Manifesto <a href="https://agilemanifesto.org/history.html">history</a> &gt; The only concern with the term agile came from Martin Fowler &gt; (a Brit for those who don’t know him) who allowed that &gt; most Americans didn’t know how to pronounce the word ‘agile’.</li>
<li>[@6:25](https://youtu.be/3tp5EtPdPwY?t=385) &gt; The problem with agile is when it became so prescriptive that it &gt; lost a lot of its agility.</li>
<li>[@8:06](https://youtu.be/3tp5EtPdPwY?t=486) &gt; There’s so much that is unstructured in the way we develop software, &gt; that we are constantly seeking people to tell us how to do it. &gt; The answer is it’s complicated.</li>
<li>Steve Yegge’s <a href="http://steve-yegge.blogspot.com/2006/09/good-agile-bad-agile_27.html">Good Agile, Bad Agile</a> &gt; So the consultants, now having lost their primary customer, were at &gt; a bar one day, and one of them (named L. Ron Hubbard) said: &gt; “This nickel-a-line-of-code gig is lame. You know where &gt; the real money is at? You start your own religion.” &gt; And that’s how both Extreme Programming and Scientology were born.</li>
<li>[@9:15](https://youtu.be/3tp5EtPdPwY?t=555) <a href="https://en.wikipedia.org/wiki/Edward_Yourdon">Edward Yourdon</a><ul><li>“Decline and Fall of the American Programmer” <a href="https://en.wikipedia.org/wiki/Decline_and_Fall_of_the_American_Programmer">book</a>
</li></ul>
</li>
<li>[@10:26](https://youtu.be/3tp5EtPdPwY?t=626) “The principles are not all wrong. Some today even feel obvious.” &gt; There’s also a lack of specificity, which gives one lots of opportunity &gt; for faith healers to come in.</li>
<li>[@14:43](https://youtu.be/3tp5EtPdPwY?t=883) “Something I found surprising about Agile was how rigid it became.” <ul>
<li>Dan’s perils of personal tracking methodology</li>
<li>Sun’s engineers connecting directly with customers</li>
</ul>
</li>
<li>The Agile Ceremonies. (an <a href="https://www.easyagile.com/blog/agile-ceremonies/">ultimate guide</a>) <ul><li>Sprint Planning, Daily Stand-Up, Sprint Review, Sprint Retrospective</li></ul>
</li>
<li>[@20:48](https://youtu.be/3tp5EtPdPwY?t=1248) “I think we overly enshrine schedule estimation. If there are any unknowns it becomes really hard.” &gt; I think there’s a Heisenberg principle at work with software: &gt; you can tell what’s in a release or when it ships, but not both.</li>
<li>[@23:25](https://youtu.be/3tp5EtPdPwY?t=1405) Tom Killalea talks to success stories he’s seen with Agile <ul><li>Building S3 at AWS</li></ul>
</li>
<li>[@28:31](https://youtu.be/3tp5EtPdPwY?t=1711) Sprint planning and backlogs <ul><li>Big work chunks, responding to changing priorities</li></ul>
</li>
<li>[@33:39](https://youtu.be/3tp5EtPdPwY?t=2019) Success or failure of an Agile team? <ul>
<li>“Do demos and retrospectives”</li>
<li>Unknowns in software development make estimation hard</li>
</ul>
</li>
<li>[@39:11](https://youtu.be/3tp5EtPdPwY?t=2351) Dan’s experiences <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Personal_software_process">Personal Software Process</a>, <a href="https://en.wikipedia.org/wiki/Team_software_process">Team software process</a>, <a href="https://en.wikipedia.org/wiki/Software_Engineering_Institute">Software Engineering Institute</a> &gt; Some people really benefit from the level of rigidity that is set out &gt; by these processes. Prior to that, they just weren’t having &gt; these conversations with their sales team, product owners, etc.</li>
<li>Construction analogies, repeatability.</li>
<li><a href="https://en.wikipedia.org/wiki/Self-anchored_suspension_bridge">Self-anchored suspension bridge</a></li>
</ul>
</li>
<li>[@46:40](https://youtu.be/3tp5EtPdPwY?t=2800) Software as both information and machine. <ul>
<li>Consultancies, repeatability, incremental results.</li>
<li>“For each success story, there are many failures.”</li>
<li>Manifesto as a compromise between different methodologies</li>
<li>Silver Bullet solutions, cure-alls. See Fred Brooks’ (1987) “No Silver Bullet” <a href="https://scholar.google.com/scholar_lookup?author=brooks&amp;title=no+silver+bullet">paper</a>
</li>
</ul>
</li>
<li>[@51:18](https://youtu.be/3tp5EtPdPwY?t=3078) Demos: “Working software is the primary measure of progress.” <ul>
<li>Experimentation and iteration</li>
<li><a href="https://en.wikipedia.org/wiki/No_true_Scotsman">No true Scotsman fallacy</a></li>
<li>What does Agile even mean anymore?</li>
<li>“Letting people pretend to agree while actually disagreeing, but then going off and building working software anyway.”</li>
</ul>
</li>
<li>[@59:45](https://youtu.be/3tp5EtPdPwY?t=3585) Ed Yourdon and <a href="https://en.wikipedia.org/wiki/Edward_Yourdon#Year_2000_(Y2K)_problem">the Y2K problem</a>
</li>
<li>Maybe there are too many Agile books already.</li>
<li>Tom Killalea <a href="https://queue.acm.org/detail.cfm?id=3434573">conversation</a> with Werner Vogels <ul><li>AWS development</li></ul>
</li>
<li>Agile is more like a guideline than a target to hit.</li>
<li>Consistent team composition over time</li>
<li>“Soul of a New Machine”: trust is risk</li>
<li>The answer can’t be “you’re doing it wrong.”</li>
<li>How do you know if it’s working for your team?</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 26 Jul 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/9e9e7211/5bad0592.mp3" length="51500072" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4291</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 26, 2021</b></p><p>Agile + 20</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/3tp5EtPdPwY">the recording for our Twitter Space for July 26, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on July 26 included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/aarondgoldman">Aaron Goldman</a>, and others. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Al Tenhundfeld’s <a href="https://www.simplethread.com/agile-at-20-the-failed-rebellion/">Agile at 20: The Failed Rebellion</a>
</li>
<li>The Agile <a href="https://agilemanifesto.org/">Manifesto</a>
</li>
<li>[@0:55](https://youtu.be/3tp5EtPdPwY?t=55) Adam’s experiences</li>
<li>From the Agile Manifesto <a href="https://agilemanifesto.org/history.html">history</a> &gt; The only concern with the term agile came from Martin Fowler &gt; (a Brit for those who don’t know him) who allowed that &gt; most Americans didn’t know how to pronounce the word ‘agile’.</li>
<li>[@6:25](https://youtu.be/3tp5EtPdPwY?t=385) &gt; The problem with agile is when it became so prescriptive that it &gt; lost a lot of its agility.</li>
<li>[@8:06](https://youtu.be/3tp5EtPdPwY?t=486) &gt; There’s so much that is unstructured in the way we develop software, &gt; that we are constantly seeking people to tell us how to do it. &gt; The answer is it’s complicated.</li>
<li>Steve Yegge’s <a href="http://steve-yegge.blogspot.com/2006/09/good-agile-bad-agile_27.html">Good Agile, Bad Agile</a> &gt; So the consultants, now having lost their primary customer, were at &gt; a bar one day, and one of them (named L. Ron Hubbard) said: &gt; “This nickel-a-line-of-code gig is lame. You know where &gt; the real money is at? You start your own religion.” &gt; And that’s how both Extreme Programming and Scientology were born.</li>
<li>[@9:15](https://youtu.be/3tp5EtPdPwY?t=555) <a href="https://en.wikipedia.org/wiki/Edward_Yourdon">Edward Yourdon</a><ul><li>“Decline and Fall of the American Programmer” <a href="https://en.wikipedia.org/wiki/Decline_and_Fall_of_the_American_Programmer">book</a>
</li></ul>
</li>
<li>[@10:26](https://youtu.be/3tp5EtPdPwY?t=626) “The principles are not all wrong. Some today even feel obvious.” &gt; There’s also a lack of specificity, which gives one lots of opportunity &gt; for faith healers to come in.</li>
<li>[@14:43](https://youtu.be/3tp5EtPdPwY?t=883) “Something I found surprising about Agile was how rigid it became.” <ul>
<li>Dan’s perils of personal tracking methodology</li>
<li>Sun’s engineers connecting directly with customers</li>
</ul>
</li>
<li>The Agile Ceremonies. (an <a href="https://www.easyagile.com/blog/agile-ceremonies/">ultimate guide</a>) <ul><li>Sprint Planning, Daily Stand-Up, Sprint Review, Sprint Retrospective</li></ul>
</li>
<li>[@20:48](https://youtu.be/3tp5EtPdPwY?t=1248) “I think we overly enshrine schedule estimation. If there are any unknowns it becomes really hard.” &gt; I think there’s a Heisenberg principle at work with software: &gt; you can tell what’s in a release or when it ships, but not both.</li>
<li>[@23:25](https://youtu.be/3tp5EtPdPwY?t=1405) Tom Killalea talks to success stories he’s seen with Agile <ul><li>Building S3 at AWS</li></ul>
</li>
<li>[@28:31](https://youtu.be/3tp5EtPdPwY?t=1711) Sprint planning and backlogs <ul><li>Big work chunks, responding to changing priorities</li></ul>
</li>
<li>[@33:39](https://youtu.be/3tp5EtPdPwY?t=2019) Success or failure of an Agile team? <ul>
<li>“Do demos and retrospectives”</li>
<li>Unknowns in software development make estimation hard</li>
</ul>
</li>
<li>[@39:11](https://youtu.be/3tp5EtPdPwY?t=2351) Dan’s experiences <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Personal_software_process">Personal Software Process</a>, <a href="https://en.wikipedia.org/wiki/Team_software_process">Team software process</a>, <a href="https://en.wikipedia.org/wiki/Software_Engineering_Institute">Software Engineering Institute</a> &gt; Some people really benefit from the level of rigidity that is set out &gt; by these processes. Prior to that, they just weren’t having &gt; these conversations with their sales team, product owners, etc.</li>
<li>Construction analogies, repeatability.</li>
<li><a href="https://en.wikipedia.org/wiki/Self-anchored_suspension_bridge">Self-anchored suspension bridge</a></li>
</ul>
</li>
<li>[@46:40](https://youtu.be/3tp5EtPdPwY?t=2800) Software as both information and machine. <ul>
<li>Consultancies, repeatability, incremental results.</li>
<li>“For each success story, there are many failures.”</li>
<li>Manifesto as a compromise between different methodologies</li>
<li>Silver Bullet solutions, cure-alls. See Fred Brooks’ (1987) “No Silver Bullet” <a href="https://scholar.google.com/scholar_lookup?author=brooks&amp;title=no+silver+bullet">paper</a>
</li>
</ul>
</li>
<li>[@51:18](https://youtu.be/3tp5EtPdPwY?t=3078) Demos: “Working software is the primary measure of progress.” <ul>
<li>Experimentation and iteration</li>
<li><a href="https://en.wikipedia.org/wiki/No_true_Scotsman">No true Scotsman fallacy</a></li>
<li>What does Agile even mean anymore?</li>
<li>“Letting people pretend to agree while actually disagreeing, but then going off and building working software anyway.”</li>
</ul>
</li>
<li>[@59:45](https://youtu.be/3tp5EtPdPwY?t=3585) Ed Yourdon and <a href="https://en.wikipedia.org/wiki/Edward_Yourdon#Year_2000_(Y2K)_problem">the Y2K problem</a>
</li>
<li>Maybe there are too many Agile books already.</li>
<li>Tom Killalea <a href="https://queue.acm.org/detail.cfm?id=3434573">conversation</a> with Werner Vogels <ul><li>AWS development</li></ul>
</li>
<li>Agile is more like a guideline than a target to hit.</li>
<li>Consistent team composition over time</li>
<li>“Soul of a New Machine”: trust is risk</li>
<li>The answer can’t be “you’re doing it wrong.”</li>
<li>How do you know if it’s working for your team?</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>NeXT, Objective-C, and contrasting histories</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>8</itunes:episode>
      <podcast:episode>8</podcast:episode>
      <itunes:title>NeXT, Objective-C, and contrasting histories</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">5f9733a1-3f59-4dc3-9106-cc3a85b0aadb</guid>
      <link>https://share.transistor.fm/s/bc06a9c9</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 5, 2021</b></p><p>NeXT, Objective-C, and contrasting histories</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/2H9XQBdLB0Y">the recording for our Twitter Space for July 5, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on July 5th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, Ian, <a href="https://twitter.com/bcharder">bch</a>, <a href="https://twitter.com/postwait">Theo Schlossnagle</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, and <a href="https://twitter.com/perlhack">Nate</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>First Twitter Space, May 3rd<ul>
<li>the <a href="https://youtu.be/h-WSU3kiXVg">lost recording</a> (~31mins)</li>
<li>(possible?) genesis of <a href="https://twitter.com/bcantrill/status/1389813167342047232">the idea to record spaces</a>
</li>
<li>Adam’s <a href="https://twitter.com/ahl/status/1394528921379500034">process</a> for recording spaces</li>
<li>Someone (Sid?) <a href="https://youtu.be/h-WSU3kiXVg?t=1687">mentioned</a> NeXT’s transparent compensation model</li>
<li>Oxide: <a href="https://oxide.computer/blog/compensation-as-a-reflection-of-values">Compensation as a Reflection of Values</a>
</li>
</ul>
</li>
<li>[@2:28](https://youtu.be/2H9XQBdLB0Y?t=148) Randall Stross book: <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">Steve Jobs and the NeXT Big Thing</a> (1993)</li>
<li>[@4:42](https://youtu.be/2H9XQBdLB0Y?t=282) The <a href="https://en.wikipedia.org/wiki/SPARCstation_1">SPARCstation 1</a> and the <a href="https://en.wikipedia.org/wiki/Sun-4#Sun-4_architecture">Sun-4c</a> (campus) architecture &gt; The hardware was not competitive, but dammit they sure looked good!</li>
<li><a href="https://en.wikipedia.org/wiki/NeXTcube">NeXTcube</a></li>
<li>[@9:15](https://youtu.be/2H9XQBdLB0Y?t=555) It’s nuts how much time and energy they spent on the look of it. &gt; They were building a huge factory, just about the time people were &gt; starting to outsource everything.</li>
<li>Sun was doing incremental things, and Steve was going for the 100 yard pass.<ul><li>Apple <a href="https://en.wikipedia.org/wiki/Apple_Lisa">Lisa</a> computer &gt; NeXT refused to interoperate with anything. &gt; They had this idea that a NeXT customer is going to buy all NeXT machines.</li></ul>
</li>
<li>[@13:20](https://youtu.be/2H9XQBdLB0Y?t=800) NeXT was a really proprietary company, contrasted with Sun, a really open company. &gt; Bill Gates volunteers that he would gladly urinate on a NeXT machine.</li>
<li>They are attempting to reinvent absolutely everything, so they need all software to be written from scratch, effectively.</li>
<li>Jobs does this over and over again at NeXT. He does things to make NeXT look bigger than it is.</li>
<li>[@16:23](https://youtu.be/2H9XQBdLB0Y?t=983) Jobs blows off important meeting with IBM</li>
<li>[@18:56](https://youtu.be/2H9XQBdLB0Y?t=1136) Mathematica went whole hog on NeXT</li>
<li>[@20:55](https://youtu.be/2H9XQBdLB0Y?t=1255) “Steve Jobs yells at your dad a lot?”<ul><li>
<a href="https://en.wikipedia.org/wiki/Quark_(company)">Quark</a> Software Inc, <a href="https://en.wikipedia.org/wiki/QuarkXPress">QuarkXPress</a>
</li></ul>
</li>
<li>[@22:22](https://youtu.be/2H9XQBdLB0Y?t=1342) Story of Jobs trying to sell NeXT machines to Brown’s CS dept &gt; “Your product looks great, I’m just not sure your company is &gt; going to be around for as long as we need it to be.”<br> &gt; Then Steve Jobs calls him an a**hole and storms out.</li>
<li>[@23:35](https://youtu.be/2H9XQBdLB0Y?t=1415) NeXT spent very freely. Lavish offices, catering, etc &gt; He did not take VC money. He had weird money from beginning to end.<br> &gt; Ross Perot thought Jobs was a total genius. Then realized that whether &gt; he was a genius or not, he wasn’t selling any computers.</li>
<li>The 80’s were all about fear of Japan.</li>
<li>Ultimately they had to pivot away from hardware.</li>
<li>[@26:38](https://youtu.be/2H9XQBdLB0Y?t=1598) In contrast to Sun<ul>
<li><a href="https://en.wikipedia.org/wiki/Metaphor_Computer_Systems">Metaphor Computer Systems</a></li>
<li>Bryan’s <a href="https://twitter.com/bcantrill/status/1411367682058846211">tweet</a> from July 3 &gt; Measured by most any yardstick one could choose, Sun was one of &gt; the most successful stories of the 1980’s for all of industrial America.</li>
<li><a href="https://en.wikipedia.org/wiki/John_Gage">John Gage</a></li>
</ul>
</li>
<li>[@32:43](https://youtu.be/2H9XQBdLB0Y?t=1963)<ul>
<li>the <a href="https://en.wikipedia.org/wiki/NeXTSTEP">NeXTSTEP</a> operating system, based on the <a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a> microkernel</li>
<li>Objective-C <a href="https://dl.acm.org/doi/10.1145/3386332">HOPL paper</a>
</li>
<li>Walter Isaacson <a href="https://en.wikipedia.org/wiki/Steve_Jobs_(book)">biography on Steve Jobs</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Be_Inc.">Be Inc</a>, computer company. <a href="https://en.wikipedia.org/wiki/Jean-Louis_Gass%C3%A9e">Jean-Louis Gassée</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Stepstone">Stepstone</a> (originally PPI) &gt; Not that I’ve read a ton of HOPL papers, but I don’t think HOPL papers &gt; spill the tea quite this much..</li>
</ul>
</li>
<li>[@39:53](https://youtu.be/2H9XQBdLB0Y?t=2393) Named parameters in programming languages<ul><li>The software crisis, Object Orientation, “Software ICs”</li></ul>
</li>
<li>[@44:40](https://youtu.be/2H9XQBdLB0Y?t=2680) NeXT was building real things with Objective-C, PPI wasn’t.</li>
<li>[@45:54](https://youtu.be/2H9XQBdLB0Y?t=2754) Rick’s experience with Objective-C at Apple<ul><li>
<a href="https://en.wikipedia.org/wiki/Objective-C">Objective-C</a>, <a href="https://en.wikipedia.org/wiki/Objective-C#Objective-C++">Objective-C++</a>, and <a href="https://en.wikipedia.org/wiki/Swift_(programming_language)">Swift</a>
</li></ul>
</li>
<li>[@54:08](https://youtu.be/2H9XQBdLB0Y?t=3248) Objective-C and Swift are mandated. If it were an open ecosystem, would they be significant? &gt; There was a feeling that the hardware didn’t matter. &gt; You shouldn’t trouble yourself with any details.</li>
<li>[@57:46](https://youtu.be/2H9XQBdLB0Y?t=3466) Secrecy at NeXT and Apple<ul><li>NDAs signed per project &gt; Secrecy is a lot of work.</li></ul>
</li>
<li>It was all about being able to walk on stage, and dramatically drop something that was going to be life changing.</li>
<li>It seems like the secrecy was being used to manipulate people.</li>
<li>[@1:03:13](https://youtu.be/2H9XQBdLB0Y?t=3793) x86 port at Apple</li>
<li>[@1:05:34](https://youtu.be/2H9XQBdLB0Y?t=3934) Jobs tells them to make it great, because it’s currently sh*t.</li>
<li>[@1:08:04](https://youtu.be/2H9XQBdLB0Y?t=4084) Is Objective-C being used anywhere today outside the Apple ecosystem?<ul><li>
<a href="https://en.wikipedia.org/wiki/GNUstep">GNUstep</a>, <a href="https://en.wikipedia.org/wiki/Agent-based_model">Agent-based modeling</a>
</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 5, 2021</b></p><p>NeXT, Objective-C, and contrasting histories</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/2H9XQBdLB0Y">the recording for our Twitter Space for July 5, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on July 5th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, Ian, <a href="https://twitter.com/bcharder">bch</a>, <a href="https://twitter.com/postwait">Theo Schlossnagle</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, and <a href="https://twitter.com/perlhack">Nate</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>First Twitter Space, May 3rd<ul>
<li>the <a href="https://youtu.be/h-WSU3kiXVg">lost recording</a> (~31mins)</li>
<li>(possible?) genesis of <a href="https://twitter.com/bcantrill/status/1389813167342047232">the idea to record spaces</a>
</li>
<li>Adam’s <a href="https://twitter.com/ahl/status/1394528921379500034">process</a> for recording spaces</li>
<li>Someone (Sid?) <a href="https://youtu.be/h-WSU3kiXVg?t=1687">mentioned</a> NeXT’s transparent compensation model</li>
<li>Oxide: <a href="https://oxide.computer/blog/compensation-as-a-reflection-of-values">Compensation as a Reflection of Values</a>
</li>
</ul>
</li>
<li>[@2:28](https://youtu.be/2H9XQBdLB0Y?t=148) Randall Stross book: <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">Steve Jobs and the NeXT Big Thing</a> (1993)</li>
<li>[@4:42](https://youtu.be/2H9XQBdLB0Y?t=282) The <a href="https://en.wikipedia.org/wiki/SPARCstation_1">SPARCstation 1</a> and the <a href="https://en.wikipedia.org/wiki/Sun-4#Sun-4_architecture">Sun-4c</a> (campus) architecture &gt; The hardware was not competitive, but dammit they sure looked good!</li>
<li><a href="https://en.wikipedia.org/wiki/NeXTcube">NeXTcube</a></li>
<li>[@9:15](https://youtu.be/2H9XQBdLB0Y?t=555) It’s nuts how much time and energy they spent on the look of it. &gt; They were building a huge factory, just about the time people were &gt; starting to outsource everything.</li>
<li>Sun was doing incremental things, and Steve was going for the 100 yard pass.<ul><li>Apple <a href="https://en.wikipedia.org/wiki/Apple_Lisa">Lisa</a> computer &gt; NeXT refused to interoperate with anything. &gt; They had this idea that a NeXT customer is going to buy all NeXT machines.</li></ul>
</li>
<li>[@13:20](https://youtu.be/2H9XQBdLB0Y?t=800) NeXT was a really proprietary company, contrasted with Sun, a really open company. &gt; Bill Gates volunteers that he would gladly urinate on a NeXT machine.</li>
<li>They are attempting to reinvent absolutely everything, so they need all software to be written from scratch, effectively.</li>
<li>Jobs does this over and over again at NeXT. He does things to make NeXT look bigger than it is.</li>
<li>[@16:23](https://youtu.be/2H9XQBdLB0Y?t=983) Jobs blows off important meeting with IBM</li>
<li>[@18:56](https://youtu.be/2H9XQBdLB0Y?t=1136) Mathematica went whole hog on NeXT</li>
<li>[@20:55](https://youtu.be/2H9XQBdLB0Y?t=1255) “Steve Jobs yells at your dad a lot?”<ul><li>
<a href="https://en.wikipedia.org/wiki/Quark_(company)">Quark</a> Software Inc, <a href="https://en.wikipedia.org/wiki/QuarkXPress">QuarkXPress</a>
</li></ul>
</li>
<li>[@22:22](https://youtu.be/2H9XQBdLB0Y?t=1342) Story of Jobs trying to sell NeXT machines to Brown’s CS dept &gt; “Your product looks great, I’m just not sure your company is &gt; going to be around for as long as we need it to be.”<br> &gt; Then Steve Jobs calls him an a**hole and storms out.</li>
<li>[@23:35](https://youtu.be/2H9XQBdLB0Y?t=1415) NeXT spent very freely. Lavish offices, catering, etc &gt; He did not take VC money. He had weird money from beginning to end.<br> &gt; Ross Perot thought Jobs was a total genius. Then realized that whether &gt; he was a genius or not, he wasn’t selling any computers.</li>
<li>The 80’s were all about fear of Japan.</li>
<li>Ultimately they had to pivot away from hardware.</li>
<li>[@26:38](https://youtu.be/2H9XQBdLB0Y?t=1598) In contrast to Sun<ul>
<li><a href="https://en.wikipedia.org/wiki/Metaphor_Computer_Systems">Metaphor Computer Systems</a></li>
<li>Bryan’s <a href="https://twitter.com/bcantrill/status/1411367682058846211">tweet</a> from July 3 &gt; Measured by most any yardstick one could choose, Sun was one of &gt; the most successful stories of the 1980’s for all of industrial America.</li>
<li><a href="https://en.wikipedia.org/wiki/John_Gage">John Gage</a></li>
</ul>
</li>
<li>[@32:43](https://youtu.be/2H9XQBdLB0Y?t=1963)<ul>
<li>the <a href="https://en.wikipedia.org/wiki/NeXTSTEP">NeXTSTEP</a> operating system, based on the <a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a> microkernel</li>
<li>Objective-C <a href="https://dl.acm.org/doi/10.1145/3386332">HOPL paper</a>
</li>
<li>Walter Isaacson <a href="https://en.wikipedia.org/wiki/Steve_Jobs_(book)">biography on Steve Jobs</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Be_Inc.">Be Inc</a>, computer company. <a href="https://en.wikipedia.org/wiki/Jean-Louis_Gass%C3%A9e">Jean-Louis Gassée</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Stepstone">Stepstone</a> (originally PPI) &gt; Not that I’ve read a ton of HOPL papers, but I don’t think HOPL papers &gt; spill the tea quite this much..</li>
</ul>
</li>
<li>[@39:53](https://youtu.be/2H9XQBdLB0Y?t=2393) Named parameters in programming languages<ul><li>The software crisis, Object Orientation, “Software ICs”</li></ul>
</li>
<li>[@44:40](https://youtu.be/2H9XQBdLB0Y?t=2680) NeXT was building real things with Objective-C, PPI wasn’t.</li>
<li>[@45:54](https://youtu.be/2H9XQBdLB0Y?t=2754) Rick’s experience with Objective-C at Apple<ul><li>
<a href="https://en.wikipedia.org/wiki/Objective-C">Objective-C</a>, <a href="https://en.wikipedia.org/wiki/Objective-C#Objective-C++">Objective-C++</a>, and <a href="https://en.wikipedia.org/wiki/Swift_(programming_language)">Swift</a>
</li></ul>
</li>
<li>[@54:08](https://youtu.be/2H9XQBdLB0Y?t=3248) Objective-C and Swift are mandated. If it were an open ecosystem, would they be significant? &gt; There was a feeling that the hardware didn’t matter. &gt; You shouldn’t trouble yourself with any details.</li>
<li>[@57:46](https://youtu.be/2H9XQBdLB0Y?t=3466) Secrecy at NeXT and Apple<ul><li>NDAs signed per project &gt; Secrecy is a lot of work.</li></ul>
</li>
<li>It was all about being able to walk on stage, and dramatically drop something that was going to be life changing.</li>
<li>It seems like the secrecy was being used to manipulate people.</li>
<li>[@1:03:13](https://youtu.be/2H9XQBdLB0Y?t=3793) x86 port at Apple</li>
<li>[@1:05:34](https://youtu.be/2H9XQBdLB0Y?t=3934) Jobs tells them to make it great, because it’s currently sh*t.</li>
<li>[@1:08:04](https://youtu.be/2H9XQBdLB0Y?t=4084) Is Objective-C being used anywhere today outside the Apple ecosystem?<ul><li>
<a href="https://en.wikipedia.org/wiki/GNUstep">GNUstep</a>, <a href="https://en.wikipedia.org/wiki/Agent-based_model">Agent-based modeling</a>
</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 05 Jul 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/bc06a9c9/090ffa77.mp3" length="68461858" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>4278</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: July 5, 2021</b></p><p>NeXT, Objective-C, and contrasting histories</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/2H9XQBdLB0Y">the recording for our Twitter Space for July 5, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on July 5th included <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, Ian, <a href="https://twitter.com/bcharder">bch</a>, <a href="https://twitter.com/postwait">Theo Schlossnagle</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, and <a href="https://twitter.com/perlhack">Nate</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>First Twitter Space, May 3rd<ul>
<li>the <a href="https://youtu.be/h-WSU3kiXVg">lost recording</a> (~31mins)</li>
<li>(possible?) genesis of <a href="https://twitter.com/bcantrill/status/1389813167342047232">the idea to record spaces</a>
</li>
<li>Adam’s <a href="https://twitter.com/ahl/status/1394528921379500034">process</a> for recording spaces</li>
<li>Someone (Sid?) <a href="https://youtu.be/h-WSU3kiXVg?t=1687">mentioned</a> NeXT’s transparent compensation model</li>
<li>Oxide: <a href="https://oxide.computer/blog/compensation-as-a-reflection-of-values">Compensation as a Reflection of Values</a>
</li>
</ul>
</li>
<li>[@2:28](https://youtu.be/2H9XQBdLB0Y?t=148) Randall Stross book: <a href="https://www.google.com/books/edition/STEVE_JOBS_THE_NEXT_BIG_THING/j5JQAAAAMAAJ">Steve Jobs and the NeXT Big Thing</a> (1993)</li>
<li>[@4:42](https://youtu.be/2H9XQBdLB0Y?t=282) The <a href="https://en.wikipedia.org/wiki/SPARCstation_1">SPARCstation 1</a> and the <a href="https://en.wikipedia.org/wiki/Sun-4#Sun-4_architecture">Sun-4c</a> (campus) architecture &gt; The hardware was not competitive, but dammit they sure looked good!</li>
<li><a href="https://en.wikipedia.org/wiki/NeXTcube">NeXTcube</a></li>
<li>[@9:15](https://youtu.be/2H9XQBdLB0Y?t=555) It’s nuts how much time and energy they spent on the look of it. &gt; They were building a huge factory, just about the time people were &gt; starting to outsource everything.</li>
<li>Sun was doing incremental things, and Steve was going for the 100 yard pass.<ul><li>Apple <a href="https://en.wikipedia.org/wiki/Apple_Lisa">Lisa</a> computer &gt; NeXT refused to interoperate with anything. &gt; They had this idea that a NeXT customer is going to buy all NeXT machines.</li></ul>
</li>
<li>[@13:20](https://youtu.be/2H9XQBdLB0Y?t=800) NeXT was a really proprietary company, contrasted with Sun, a really open company. &gt; Bill Gates volunteers that he would gladly urinate on a NeXT machine.</li>
<li>They are attempting to reinvent absolutely everything, so they need all software to be written from scratch, effectively.</li>
<li>Jobs does this over and over again at NeXT. He does things to make NeXT look bigger than it is.</li>
<li>[@16:23](https://youtu.be/2H9XQBdLB0Y?t=983) Jobs blows off important meeting with IBM</li>
<li>[@18:56](https://youtu.be/2H9XQBdLB0Y?t=1136) Mathematica went whole hog on NeXT</li>
<li>[@20:55](https://youtu.be/2H9XQBdLB0Y?t=1255) “Steve Jobs yells at your dad a lot?”<ul><li>
<a href="https://en.wikipedia.org/wiki/Quark_(company)">Quark</a> Software Inc, <a href="https://en.wikipedia.org/wiki/QuarkXPress">QuarkXPress</a>
</li></ul>
</li>
<li>[@22:22](https://youtu.be/2H9XQBdLB0Y?t=1342) Story of Jobs trying to sell NeXT machines to Brown’s CS dept &gt; “Your product looks great, I’m just not sure your company is &gt; going to be around for as long as we need it to be.”<br> &gt; Then Steve Jobs calls him an a**hole and storms out.</li>
<li>[@23:35](https://youtu.be/2H9XQBdLB0Y?t=1415) NeXT spent very freely. Lavish offices, catering, etc &gt; He did not take VC money. He had weird money from beginning to end.<br> &gt; Ross Perot thought Jobs was a total genius. Then realized that whether &gt; he was a genius or not, he wasn’t selling any computers.</li>
<li>The 80’s were all about fear of Japan.</li>
<li>Ultimately they had to pivot away from hardware.</li>
<li>[@26:38](https://youtu.be/2H9XQBdLB0Y?t=1598) In contrast to Sun<ul>
<li><a href="https://en.wikipedia.org/wiki/Metaphor_Computer_Systems">Metaphor Computer Systems</a></li>
<li>Bryan’s <a href="https://twitter.com/bcantrill/status/1411367682058846211">tweet</a> from July 3 &gt; Measured by most any yardstick one could choose, Sun was one of &gt; the most successful stories of the 1980’s for all of industrial America.</li>
<li><a href="https://en.wikipedia.org/wiki/John_Gage">John Gage</a></li>
</ul>
</li>
<li>[@32:43](https://youtu.be/2H9XQBdLB0Y?t=1963)<ul>
<li>the <a href="https://en.wikipedia.org/wiki/NeXTSTEP">NeXTSTEP</a> operating system, based on the <a href="https://en.wikipedia.org/wiki/Mach_(kernel)">Mach</a> microkernel</li>
<li>Objective-C <a href="https://dl.acm.org/doi/10.1145/3386332">HOPL paper</a>
</li>
<li>Walter Isaacson <a href="https://en.wikipedia.org/wiki/Steve_Jobs_(book)">biography on Steve Jobs</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Be_Inc.">Be Inc</a>, computer company. <a href="https://en.wikipedia.org/wiki/Jean-Louis_Gass%C3%A9e">Jean-Louis Gassée</a>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Stepstone">Stepstone</a> (originally PPI) &gt; Not that I’ve read a ton of HOPL papers, but I don’t think HOPL papers &gt; spill the tea quite this much..</li>
</ul>
</li>
<li>[@39:53](https://youtu.be/2H9XQBdLB0Y?t=2393) Named parameters in programming languages<ul><li>The software crisis, Object Orientation, “Software ICs”</li></ul>
</li>
<li>[@44:40](https://youtu.be/2H9XQBdLB0Y?t=2680) NeXT was building real things with Objective-C, PPI wasn’t.</li>
<li>[@45:54](https://youtu.be/2H9XQBdLB0Y?t=2754) Rick’s experience with Objective-C at Apple<ul><li>
<a href="https://en.wikipedia.org/wiki/Objective-C">Objective-C</a>, <a href="https://en.wikipedia.org/wiki/Objective-C#Objective-C++">Objective-C++</a>, and <a href="https://en.wikipedia.org/wiki/Swift_(programming_language)">Swift</a>
</li></ul>
</li>
<li>[@54:08](https://youtu.be/2H9XQBdLB0Y?t=3248) Objective-C and Swift are mandated. If it were an open ecosystem, would they be significant? &gt; There was a feeling that the hardware didn’t matter. &gt; You shouldn’t trouble yourself with any details.</li>
<li>[@57:46](https://youtu.be/2H9XQBdLB0Y?t=3466) Secrecy at NeXT and Apple<ul><li>NDAs signed per project &gt; Secrecy is a lot of work.</li></ul>
</li>
<li>It was all about being able to walk on stage, and dramatically drop something that was going to be life changing.</li>
<li>It seems like the secrecy was being used to manipulate people.</li>
<li>[@1:03:13](https://youtu.be/2H9XQBdLB0Y?t=3793) x86 port at Apple</li>
<li>[@1:05:34](https://youtu.be/2H9XQBdLB0Y?t=3934) Jobs tells them to make it great, because it’s currently sh*t.</li>
<li>[@1:08:04](https://youtu.be/2H9XQBdLB0Y?t=4084) Is Objective-C being used anywhere today outside the Apple ecosystem?<ul><li>
<a href="https://en.wikipedia.org/wiki/GNUstep">GNUstep</a>, <a href="https://en.wikipedia.org/wiki/Agent-based_model">Agent-based modeling</a>
</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>What's a bug? What's a debugger?</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>7</itunes:episode>
      <podcast:episode>7</podcast:episode>
      <itunes:title>What's a bug? What's a debugger?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">c5113de9-2eb5-40cd-aa81-c9e30513b37e</guid>
      <link>https://share.transistor.fm/s/442e7936</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: June 21, 2021</b></p><p>What’s a bug? What’s a debugger?</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/UOucW3F7nCg">the recording for our Twitter Space for June 21, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on June 21st included <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/does_he_byte">Sean Klein</a>, <a href="https://twitter.com/aramh">Aram Hăvărneanu</a>, and the mononymous <a href="https://twitter.com/perlhack">Nate</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://twitter.com/ahl/status/1381978199404371968">Adam’s toddler</a> (being chased by a rooster) &gt; Don’t get me wrong, some of my best friends are three-year-olds.</li>
<li>[@3:12](https://youtu.be/UOucW3F7nCg?t=192) Sy Brand’s tutorial <a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/">Writing a Debugger</a><ul><li>
<a href="https://lobste.rs/">Lobsters</a> – when HN isn’t enough!</li></ul>
</li>
<li>[@4:34](https://youtu.be/UOucW3F7nCg?t=274) Bryan’s debuggers<ul>
<li>
<a href="https://illumos.org/books/mdb/intro-1.html#intro-1">MDB</a> Modular Debugger &gt; Adam: I think people are using cargo-cult debugging, rather than getting to the root cause &gt; of these things, or being satisfied until they get to the root cause.<br> &gt; Bryan: I think with software systems, it’s really hard to know what they’re actually doing.</li>
<li>
<a href="https://refspecs.linuxfoundation.org/ELF/zSeries/lzsabi0_zSeries/x2251.html#PROCEDURELINKAGETABLE">Procedure Linkage Table</a> aka “the plits”</li>
<li>“Runtime Performance Analysis of the M-to-N Scheduling Model” (<a href="https://sjmulder.nl/dl/pdf/unsorted/1996%20-%20Cantrill%20-%20Runtime%20Performance%20Analysis%20of%20the%20M-to-N%20Scheduling%20Model.pdf">pdf</a>) 1996 undergrad thesis (Brown CS dept <a href="https://cs.brown.edu/research/pubs/techreports/reports/CS-96-19.html">website</a>)<p></p>
</li>
<li>[@6:29](https://youtu.be/UOucW3F7nCg?t=389) Threadmon <a href="https://cs.brown.edu/research/thmon/thmon.html">website</a> and 1997 <a href="https://www.computer.org/csdl/proceedings-article/hicss/1997/7734010253/12OmNC3FG5x">paper</a> (a retooling of the ’96 paper) &gt; When I built that tooling, it revealed this thing &gt; is not doing at all what anyone thought it was doing.</li>
<li>
<a href="https://docs.oracle.com/cd/E19504-01/802-5880/6i9k05dgd/index.html">TNF</a> Trace Normal Form &gt; Part of the problem with debuggers… debuggers are historically written by compiler folks, &gt; and not system folks. As a result, debuggers are designed to debug the problem that &gt; compiler folks have the most familiarity with, and that’s a compiler.<br> &gt; Debuggers are designed for reproducible problems, way too frequently.</li>
</ul>
</li>
<li>I view in situ breakpoint debugging as one sliver of debugging that’s useful for one particular and somewhat unusual class of bugs. That’s actually not the kind of debugger I want to use most of the time.</li>
<li><a href="https://en.wikipedia.org/wiki/Breakpoint#Software">Software breakpoints</a></li>
<li>[@11:59](https://youtu.be/UOucW3F7nCg?t=719) &gt; libdis was my intern project in 2000. The idea was to take the program text, &gt; and interpret it in some structural form, and try to infer different things about the program.<ul>
<li>
<a href="https://ghidra-sre.org/">Ghidra</a>: software reverse engineering tool</li>
<li>Laura Abbott’s <a href="https://oxide.computer/blog/lpc55">Exploiting Undocumented Hardware Blocks in the LPC55S69</a>
</li>
<li>
<a href="https://www.volatilityfoundation.org/">Volatility</a>: the memory forensics framework Adam couldn’t quite remember.</li>
</ul>
</li>
<li>[@14:59](https://youtu.be/UOucW3F7nCg?t=899) I meant this question earnestly, what <em>is</em> a debugger?<ul><li>
<a href="https://www.nationalgeographic.org/thisday/sep9/worlds-first-computer-bug/">The first bug</a> &gt; The term is somewhat regrettable… It implies a problem, when there may not be a problem. &gt; It may just be I want to understand how the system is operating, independent of whether &gt; it’s doing it badly.</li></ul>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Observability">Wikipedia on Observability</a> (control theory)</li>
<li>Oxide’s embedded OS and companion debugger: Hubris and Humility</li>
<li>[@19:01](https://youtu.be/UOucW3F7nCg?t=1141) Using DTrace to help customers understand their systems. &gt; If you <a href="https://illumos.org/man/1/strings">strings</a> the DTrace binary, &gt; you’re not gonna find any mention of raincoats.<ul><li>Cliff Moon on <a href="https://youtu.be/ShqtnrmXVAY?t=140">Boundary</a>
</li></ul>
</li>
<li>[@22:13](https://youtu.be/UOucW3F7nCg?t=1333) Cardinal rule of debuggers: Don’t kill the patient! (see also: <a href="https://youtu.be/c8yURlfmRnw?t=1039">Do No Harm</a>) &gt; Not killing the patient is really important, &gt; this was always an <a href="https://en.wikipedia.org/wiki/Ur">Ur</a> principle for us.</li>
<li>The notion that the debugger has now become load bearing in the execution of the program, is a pretty grave responsibility.</li>
<li>[@26:54](https://youtu.be/UOucW3F7nCg?t=1614) Post-mortem debugging &gt; It is a tragedy of our domain that we do not debug post-mortem, routinely.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Heisenbug">Heisenbug</a> (when the act of observing the problem, hides the problem)</li>
<li>[@31:11](https://youtu.be/UOucW3F7nCg?t=1871) &gt; What’s going on in the system? It’s not crashing, there’s no core dump. &gt; But the system is behaving in a way I didn’t expect it to, and I want to know why.</li>
<li>[@33:51](https://youtu.be/UOucW3F7nCg?t=2031) Pre-production reliability techniques &gt; All of our pre-production work has gotten way better than it was, and I think that’s &gt; compensation for the fact we can’t understand these systems when we deploy them.</li>
<li>[@37:58](https://youtu.be/UOucW3F7nCg?t=2278) &gt; The move to testing has in fact obviated some of the need for &gt; what we consider traditional debuggers.<br> &gt; (Bryan audibly cringes)</li>
<li>[@39:08](https://youtu.be/UOucW3F7nCg?t=2348) Automated and Algorithmic Debugging conference <a href="https://arxiv.org/abs/cs/0309027">AADEBUG 2003</a><ul>
<li>
<a href="https://hopl4.sigplan.org/">HOPL</a> History of Programming Languages &gt; There was a test suite of excellence when it comes to automated program debugging. &gt; And it was some pile of C programs with known bugs, and you would throw your new &gt; paper at it, and it would find 84% of the bugs, and there would be a lot of &gt; slapping each other on the back on that. Really focused on the simplest of simple bugs.</li>
<li>[@43:15](https://youtu.be/UOucW3F7nCg?t=2595) Bryan’s <a href="https://arxiv.org/abs/cs/0309037">Postmortem Object Type Identification</a> paper &gt; Who is my neighbor in memory? Because my neighbor just burned down my house basically.</li>
<li>
<a href="https://docs.oracle.com/cd/E19455-01/806-5194/6je7ktfm4/index.html">mdb’s ::kgrep</a> &gt; I need to pause you there because it’s so crazy, and I want to emphasize that &gt; he means what he’s saying. We look for the 64 bit value, and see where we find it. &gt; This is a game of bingo across the entire address space.</li>
</ul>
</li>
<li>We can follow the pointers and propagate types.</li>
<li>[@48:49](https://youtu.be/UOucW3F7nCg?t=2929) printf/println debugging – everyone’s doing it &gt; I think it’s a mistake for people to denigrate printf debugging. &gt; If you’ve got a situation that you can debug quickly with printf, you should do that.<ul><li>
<a href="http://cs.brown.edu/people/spr/researchenv.html">Early, sometimes student-friendly IDEs</a> &gt; These poor students are weeping in the Sun lab at two in the morning because they &gt; can’t debug their programs, because they’re not allowed to use printf</li></ul>
</li>
<li>[@54:14](https://youtu.be/UOucW3F7nCg?t=3254) Research on <a href="http://pages.cs.wisc.edu/~liblit/#statistical-debugging">statistical debugging from Ben Liblit</a>
</li>
<li>[@57:32](https://youtu.be/UOucW3F7nCg?t=3452) &gt; The disposition towards tooling changes once you’ve found your first bug with it.</li>
<li>“I’m dealing with a house fire right now, it’s not time for me to learn something new, my house is burning and I want to focus on that.”</li>
<li>
<a href="https://hypervisor.org/">NOVA hypervisor</a> debugging by inspecting registers &gt; There’s nothing quite like driving one of these unknown issues to the root cause; so satisfying.</li>
<li>[@1:02:10](https://youtu.be/UOucW3F7nCg?t=3730) &gt; I buy the argument that some of the lack of observability has been one of the strong motivators &gt; for rooting out some of these problems earlier with CI/CD and test-driven development.</li>
<li>[@1:03:04](https://youtu.be/UOucW3F7nCg?t=3784) &gt; Dynamically instrumenting dynamic languages effectively requires VM cooperation.<ul>
<li><a href="https://www.oreilly.com/library/view/perl-6-and/059600737X/">Perl 6 and Parrot book</a></li>
<li><a href="https://www.raku.org/">Raku née Perl 6</a></li>
</ul>
</li>
<li>Adam’s ten-year prediction: the end of Moore’s Law will precipitate a culture of observability and debugging.</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: June 21, 2021</b></p><p>What’s a bug? What’s a debugger?</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/UOucW3F7nCg">the recording for our Twitter Space for June 21, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on June 21st included <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/does_he_byte">Sean Klein</a>, <a href="https://twitter.com/aramh">Aram Hăvărneanu</a>, and the mononymous <a href="https://twitter.com/perlhack">Nate</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://twitter.com/ahl/status/1381978199404371968">Adam’s toddler</a> (being chased by a rooster) &gt; Don’t get me wrong, some of my best friends are three-year-olds.</li>
<li>[@3:12](https://youtu.be/UOucW3F7nCg?t=192) Sy Brand’s tutorial <a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/">Writing a Debugger</a><ul><li>
<a href="https://lobste.rs/">Lobsters</a> – when HN isn’t enough!</li></ul>
</li>
<li>[@4:34](https://youtu.be/UOucW3F7nCg?t=274) Bryan’s debuggers<ul>
<li>
<a href="https://illumos.org/books/mdb/intro-1.html#intro-1">MDB</a> Modular Debugger &gt; Adam: I think people are using cargo-cult debugging, rather than getting to the root cause &gt; of these things, or being satisfied until they get to the root cause.<br> &gt; Bryan: I think with software systems, it’s really hard to know what they’re actually doing.</li>
<li>
<a href="https://refspecs.linuxfoundation.org/ELF/zSeries/lzsabi0_zSeries/x2251.html#PROCEDURELINKAGETABLE">Procedure Linkage Table</a> aka “the plits”</li>
<li>“Runtime Performance Analysis of the M-to-N Scheduling Model” (<a href="https://sjmulder.nl/dl/pdf/unsorted/1996%20-%20Cantrill%20-%20Runtime%20Performance%20Analysis%20of%20the%20M-to-N%20Scheduling%20Model.pdf">pdf</a>) 1996 undergrad thesis (Brown CS dept <a href="https://cs.brown.edu/research/pubs/techreports/reports/CS-96-19.html">website</a>)<p></p>
</li>
<li>[@6:29](https://youtu.be/UOucW3F7nCg?t=389) Threadmon <a href="https://cs.brown.edu/research/thmon/thmon.html">website</a> and 1997 <a href="https://www.computer.org/csdl/proceedings-article/hicss/1997/7734010253/12OmNC3FG5x">paper</a> (a retooling of the ’96 paper) &gt; When I built that tooling, it revealed this thing &gt; is not doing at all what anyone thought it was doing.</li>
<li>
<a href="https://docs.oracle.com/cd/E19504-01/802-5880/6i9k05dgd/index.html">TNF</a> Trace Normal Form &gt; Part of the problem with debuggers… debuggers are historically written by compiler folks, &gt; and not system folks. As a result, debuggers are designed to debug the problem that &gt; compiler folks have the most familiarity with, and that’s a compiler.<br> &gt; Debuggers are designed for reproducible problems, way too frequently.</li>
</ul>
</li>
<li>I view in situ breakpoint debugging as one sliver of debugging that’s useful for one particular and somewhat unusual class of bugs. That’s actually not the kind of debugger I want to use most of the time.</li>
<li><a href="https://en.wikipedia.org/wiki/Breakpoint#Software">Software breakpoints</a></li>
<li>[@11:59](https://youtu.be/UOucW3F7nCg?t=719) &gt; libdis was my intern project in 2000. The idea was to take the program text, &gt; and interpret it in some structural form, and try to infer different things about the program.<ul>
<li>
<a href="https://ghidra-sre.org/">Ghidra</a>: software reverse engineering tool</li>
<li>Laura Abbott’s <a href="https://oxide.computer/blog/lpc55">Exploiting Undocumented Hardware Blocks in the LPC55S69</a>
</li>
<li>
<a href="https://www.volatilityfoundation.org/">Volatility</a>: the memory forensics framework Adam couldn’t quite remember.</li>
</ul>
</li>
<li>[@14:59](https://youtu.be/UOucW3F7nCg?t=899) I meant this question earnestly, what <em>is</em> a debugger?<ul><li>
<a href="https://www.nationalgeographic.org/thisday/sep9/worlds-first-computer-bug/">The first bug</a> &gt; The term is somewhat regrettable… It implies a problem, when there may not be a problem. &gt; It may just be I want to understand how the system is operating, independent of whether &gt; it’s doing it badly.</li></ul>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Observability">Wikipedia on Observability</a> (control theory)</li>
<li>Oxide’s embedded OS and companion debugger: Hubris and Humility</li>
<li>[@19:01](https://youtu.be/UOucW3F7nCg?t=1141) Using DTrace to help customers understand their systems. &gt; If you <a href="https://illumos.org/man/1/strings">strings</a> the DTrace binary, &gt; you’re not gonna find any mention of raincoats.<ul><li>Cliff Moon on <a href="https://youtu.be/ShqtnrmXVAY?t=140">Boundary</a>
</li></ul>
</li>
<li>[@22:13](https://youtu.be/UOucW3F7nCg?t=1333) Cardinal rule of debuggers: Don’t kill the patient! (see also: <a href="https://youtu.be/c8yURlfmRnw?t=1039">Do No Harm</a>) &gt; Not killing the patient is really important, &gt; this was always an <a href="https://en.wikipedia.org/wiki/Ur">Ur</a> principle for us.</li>
<li>The notion that the debugger has now become load bearing in the execution of the program, is a pretty grave responsibility.</li>
<li>[@26:54](https://youtu.be/UOucW3F7nCg?t=1614) Post-mortem debugging &gt; It is a tragedy of our domain that we do not debug post-mortem, routinely.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Heisenbug">Heisenbug</a> (when the act of observing the problem, hides the problem)</li>
<li>[@31:11](https://youtu.be/UOucW3F7nCg?t=1871) &gt; What’s going on in the system? It’s not crashing, there’s no core dump. &gt; But the system is behaving in a way I didn’t expect it to, and I want to know why.</li>
<li>[@33:51](https://youtu.be/UOucW3F7nCg?t=2031) Pre-production reliability techniques &gt; All of our pre-production work has gotten way better than it was, and I think that’s &gt; compensation for the fact we can’t understand these systems when we deploy them.</li>
<li>[@37:58](https://youtu.be/UOucW3F7nCg?t=2278) &gt; The move to testing has in fact obviated some of the need for &gt; what we consider traditional debuggers.<br> &gt; (Bryan audibly cringes)</li>
<li>[@39:08](https://youtu.be/UOucW3F7nCg?t=2348) Automated and Algorithmic Debugging conference <a href="https://arxiv.org/abs/cs/0309027">AADEBUG 2003</a><ul>
<li>
<a href="https://hopl4.sigplan.org/">HOPL</a> History of Programming Languages &gt; There was a test suite of excellence when it comes to automated program debugging. &gt; And it was some pile of C programs with known bugs, and you would throw your new &gt; paper at it, and it would find 84% of the bugs, and there would be a lot of &gt; slapping each other on the back on that. Really focused on the simplest of simple bugs.</li>
<li>[@43:15](https://youtu.be/UOucW3F7nCg?t=2595) Bryan’s <a href="https://arxiv.org/abs/cs/0309037">Postmortem Object Type Identification</a> paper &gt; Who is my neighbor in memory? Because my neighbor just burned down my house basically.</li>
<li>
<a href="https://docs.oracle.com/cd/E19455-01/806-5194/6je7ktfm4/index.html">mdb’s ::kgrep</a> &gt; I need to pause you there because it’s so crazy, and I want to emphasize that &gt; he means what he’s saying. We look for the 64 bit value, and see where we find it. &gt; This is a game of bingo across the entire address space.</li>
</ul>
</li>
<li>We can follow the pointers and propagate types.</li>
<li>[@48:49](https://youtu.be/UOucW3F7nCg?t=2929) printf/println debugging – everyone’s doing it &gt; I think it’s a mistake for people to denigrate printf debugging. &gt; If you’ve got a situation that you can debug quickly with printf, you should do that.<ul><li>
<a href="http://cs.brown.edu/people/spr/researchenv.html">Early, sometimes student-friendly IDEs</a> &gt; These poor students are weeping in the Sun lab at two in the morning because they &gt; can’t debug their programs, because they’re not allowed to use printf</li></ul>
</li>
<li>[@54:14](https://youtu.be/UOucW3F7nCg?t=3254) Research on <a href="http://pages.cs.wisc.edu/~liblit/#statistical-debugging">statistical debugging from Ben Liblit</a>
</li>
<li>[@57:32](https://youtu.be/UOucW3F7nCg?t=3452) &gt; The disposition towards tooling changes once you’ve found your first bug with it.</li>
<li>“I’m dealing with a house fire right now, it’s not time for me to learn something new, my house is burning and I want to focus on that.”</li>
<li>
<a href="https://hypervisor.org/">NOVA hypervisor</a> debugging by inspecting registers &gt; There’s nothing quite like driving one of these unknown issues to the root cause; so satisfying.</li>
<li>[@1:02:10](https://youtu.be/UOucW3F7nCg?t=3730) &gt; I buy the argument that some of the lack of observability has been one of the strong motivators &gt; for rooting out some of these problems earlier with CI/CD and test-driven development.</li>
<li>[@1:03:04](https://youtu.be/UOucW3F7nCg?t=3784) &gt; Dynamically instrumenting dynamic languages effectively requires VM cooperation.<ul>
<li><a href="https://www.oreilly.com/library/view/perl-6-and/059600737X/">Perl 6 and Parrot book</a></li>
<li><a href="https://www.raku.org/">Raku née Perl 6</a></li>
</ul>
</li>
<li>Adam’s ten-year prediction: the end of Moore’s Law will precipitate a culture of observability and debugging.</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 21 Jun 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/442e7936/a1ca396c.mp3" length="63575473" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3973</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: June 21, 2021</b></p><p>What’s a bug? What’s a debugger?</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/UOucW3F7nCg">the recording for our Twitter Space for June 21, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on June 21st included <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/does_he_byte">Sean Klein</a>, <a href="https://twitter.com/aramh">Aram Hăvărneanu</a>, and the mononymous <a href="https://twitter.com/perlhack">Nate</a>. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="https://twitter.com/ahl/status/1381978199404371968">Adam’s toddler</a> (being chased by a rooster) &gt; Don’t get me wrong, some of my best friends are three-year-olds.</li>
<li>[@3:12](https://youtu.be/UOucW3F7nCg?t=192) Sy Brand’s tutorial <a href="https://blog.tartanllama.xyz/writing-a-linux-debugger-setup/">Writing a Debugger</a><ul><li>
<a href="https://lobste.rs/">Lobsters</a> – when HN isn’t enough!</li></ul>
</li>
<li>[@4:34](https://youtu.be/UOucW3F7nCg?t=274) Bryan’s debuggers<ul>
<li>
<a href="https://illumos.org/books/mdb/intro-1.html#intro-1">MDB</a> Modular Debugger &gt; Adam: I think people are using cargo-cult debugging, rather than getting to the root cause &gt; of these things, or being satisfied until they get to the root cause.<br> &gt; Bryan: I think with software systems, it’s really hard to know what they’re actually doing.</li>
<li>
<a href="https://refspecs.linuxfoundation.org/ELF/zSeries/lzsabi0_zSeries/x2251.html#PROCEDURELINKAGETABLE">Procedure Linkage Table</a> aka “the plits”</li>
<li>“Runtime Performance Analysis of the M-to-N Scheduling Model” (<a href="https://sjmulder.nl/dl/pdf/unsorted/1996%20-%20Cantrill%20-%20Runtime%20Performance%20Analysis%20of%20the%20M-to-N%20Scheduling%20Model.pdf">pdf</a>) 1996 undergrad thesis (Brown CS dept <a href="https://cs.brown.edu/research/pubs/techreports/reports/CS-96-19.html">website</a>)<p></p>
</li>
<li>[@6:29](https://youtu.be/UOucW3F7nCg?t=389) Threadmon <a href="https://cs.brown.edu/research/thmon/thmon.html">website</a> and 1997 <a href="https://www.computer.org/csdl/proceedings-article/hicss/1997/7734010253/12OmNC3FG5x">paper</a> (a retooling of the ’96 paper) &gt; When I built that tooling, it revealed this thing &gt; is not doing at all what anyone thought it was doing.</li>
<li>
<a href="https://docs.oracle.com/cd/E19504-01/802-5880/6i9k05dgd/index.html">TNF</a> Trace Normal Form &gt; Part of the problem with debuggers… debuggers are historically written by compiler folks, &gt; and not system folks. As a result, debuggers are designed to debug the problem that &gt; compiler folks have the most familiarity with, and that’s a compiler.<br> &gt; Debuggers are designed for reproducible problems, way too frequently.</li>
</ul>
</li>
<li>I view in situ breakpoint debugging as one sliver of debugging that’s useful for one particular and somewhat unusual class of bugs. That’s actually not the kind of debugger I want to use most of the time.</li>
<li><a href="https://en.wikipedia.org/wiki/Breakpoint#Software">Software breakpoints</a></li>
<li>[@11:59](https://youtu.be/UOucW3F7nCg?t=719) &gt; libdis was my intern project in 2000. The idea was to take the program text, &gt; and interpret it in some structural form, and try to infer different things about the program.<ul>
<li>
<a href="https://ghidra-sre.org/">Ghidra</a>: software reverse engineering tool</li>
<li>Laura Abbott’s <a href="https://oxide.computer/blog/lpc55">Exploiting Undocumented Hardware Blocks in the LPC55S69</a>
</li>
<li>
<a href="https://www.volatilityfoundation.org/">Volatility</a>: the memory forensics framework Adam couldn’t quite remember.</li>
</ul>
</li>
<li>[@14:59](https://youtu.be/UOucW3F7nCg?t=899) I meant this question earnestly, what <em>is</em> a debugger?<ul><li>
<a href="https://www.nationalgeographic.org/thisday/sep9/worlds-first-computer-bug/">The first bug</a> &gt; The term is somewhat regrettable… It implies a problem, when there may not be a problem. &gt; It may just be I want to understand how the system is operating, independent of whether &gt; it’s doing it badly.</li></ul>
</li>
<li>
<a href="https://en.wikipedia.org/wiki/Observability">Wikipedia on Observability</a> (control theory)</li>
<li>Oxide’s embedded OS and companion debugger: Hubris and Humility</li>
<li>[@19:01](https://youtu.be/UOucW3F7nCg?t=1141) Using DTrace to help customers understand their systems. &gt; If you <a href="https://illumos.org/man/1/strings">strings</a> the DTrace binary, &gt; you’re not gonna find any mention of raincoats.<ul><li>Cliff Moon on <a href="https://youtu.be/ShqtnrmXVAY?t=140">Boundary</a>
</li></ul>
</li>
<li>[@22:13](https://youtu.be/UOucW3F7nCg?t=1333) Cardinal rule of debuggers: Don’t kill the patient! (see also: <a href="https://youtu.be/c8yURlfmRnw?t=1039">Do No Harm</a>) &gt; Not killing the patient is really important, &gt; this was always an <a href="https://en.wikipedia.org/wiki/Ur">Ur</a> principle for us.</li>
<li>The notion that the debugger has now become load bearing in the execution of the program, is a pretty grave responsibility.</li>
<li>[@26:54](https://youtu.be/UOucW3F7nCg?t=1614) Post-mortem debugging &gt; It is a tragedy of our domain that we do not debug post-mortem, routinely.</li>
<li>
<a href="https://en.wikipedia.org/wiki/Heisenbug">Heisenbug</a> (when the act of observing the problem, hides the problem)</li>
<li>[@31:11](https://youtu.be/UOucW3F7nCg?t=1871) &gt; What’s going on in the system? It’s not crashing, there’s no core dump. &gt; But the system is behaving in a way I didn’t expect it to, and I want to know why.</li>
<li>[@33:51](https://youtu.be/UOucW3F7nCg?t=2031) Pre-production reliability techniques &gt; All of our pre-production work has gotten way better than it was, and I think that’s &gt; compensation for the fact we can’t understand these systems when we deploy them.</li>
<li>[@37:58](https://youtu.be/UOucW3F7nCg?t=2278) &gt; The move to testing has in fact obviated some of the need for &gt; what we consider traditional debuggers.<br> &gt; (Bryan audibly cringes)</li>
<li>[@39:08](https://youtu.be/UOucW3F7nCg?t=2348) Automated and Algorithmic Debugging conference <a href="https://arxiv.org/abs/cs/0309027">AADEBUG 2003</a><ul>
<li>
<a href="https://hopl4.sigplan.org/">HOPL</a> History of Programming Languages &gt; There was a test suite of excellence when it comes to automated program debugging. &gt; And it was some pile of C programs with known bugs, and you would throw your new &gt; paper at it, and it would find 84% of the bugs, and there would be a lot of &gt; slapping each other on the back on that. Really focused on the simplest of simple bugs.</li>
<li>[@43:15](https://youtu.be/UOucW3F7nCg?t=2595) Bryan’s <a href="https://arxiv.org/abs/cs/0309037">Postmortem Object Type Identification</a> paper &gt; Who is my neighbor in memory? Because my neighbor just burned down my house basically.</li>
<li>
<a href="https://docs.oracle.com/cd/E19455-01/806-5194/6je7ktfm4/index.html">mdb’s ::kgrep</a> &gt; I need to pause you there because it’s so crazy, and I want to emphasize that &gt; he means what he’s saying. We look for the 64 bit value, and see where we find it. &gt; This is a game of bingo across the entire address space.</li>
</ul>
</li>
<li>We can follow the pointers and propagate types.</li>
<li>[@48:49](https://youtu.be/UOucW3F7nCg?t=2929) printf/println debugging – everyone’s doing it &gt; I think it’s a mistake for people to denigrate printf debugging. &gt; If you’ve got a situation that you can debug quickly with printf, you should do that.<ul><li>
<a href="http://cs.brown.edu/people/spr/researchenv.html">Early, sometimes student-friendly IDEs</a> &gt; These poor students are weeping in the Sun lab at two in the morning because they &gt; can’t debug their programs, because they’re not allowed to use printf</li></ul>
</li>
<li>[@54:14](https://youtu.be/UOucW3F7nCg?t=3254) Research on <a href="http://pages.cs.wisc.edu/~liblit/#statistical-debugging">statistical debugging from Ben Liblit</a>
</li>
<li>[@57:32](https://youtu.be/UOucW3F7nCg?t=3452) &gt; The disposition towards tooling changes once you’ve found your first bug with it.</li>
<li>“I’m dealing with a house fire right now, it’s not time for me to learn something new, my house is burning and I want to focus on that.”</li>
<li>
<a href="https://hypervisor.org/">NOVA hypervisor</a> debugging by inspecting registers &gt; There’s nothing quite like driving one of these unknown issues to the root cause; so satisfying.</li>
<li>[@1:02:10](https://youtu.be/UOucW3F7nCg?t=3730) &gt; I buy the argument that some of the lack of observability has been one of the strong motivators &gt; for rooting out some of these problems earlier with CI/CD and test-driven development.</li>
<li>[@1:03:04](https://youtu.be/UOucW3F7nCg?t=3784) &gt; Dynamically instrumenting dynamic languages effectively requires VM cooperation.<ul>
<li><a href="https://www.oreilly.com/library/view/perl-6-and/059600737X/">Perl 6 and Parrot book</a></li>
<li><a href="https://www.raku.org/">Raku née Perl 6</a></li>
</ul>
</li>
<li>Adam’s ten-year prediction: the end of Moore’s Law will precipitate a culture of observability and debugging.</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Barracuda 7200.11: broken firmware is broken software!</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>6</itunes:episode>
      <podcast:episode>6</podcast:episode>
      <itunes:title>Barracuda 7200.11: broken firmware is broken software!</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">93107fd4-9b0a-465a-a26b-c089da1ac500</guid>
      <link>https://share.transistor.fm/s/57a93d18</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: June 7, 2021</b></p><p>Barracuda 7200.11: broken firmware is broken software!</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p (PT) for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/billblum">Bill Blum</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, and others. <a href="https://youtu.be/qisoAIx8EE8">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>The <a href="https://en.wikipedia.org/wiki/ST3000DM001">Seagate ST3000DM001</a><ul><li><a href="https://en.wikipedia.org/wiki/ST3000DM001#Class_action">class action</a></li></ul>
</li>
<li>[@2:01](https://youtu.be/qisoAIx8EE8?t=121) Bryan and Adam’s experience <ul>
<li><a href="http://dtrace.org/blogs/bmc/2008/11/10/fishworks-now-it-can-be-told/">Fishworks</a></li>
<li><a href="https://en.wikipedia.org/wiki/HGST">HGST</a></li>
<li>Bryan is <a href="https://twitter.com/bcantrill/status/1242136263563472896">unable to forget SU0D</a> &gt; This thing damn near ruined our lives</li>
<li><a href="https://en.wikipedia.org/wiki/Broad_Institute">Broad Institute</a></li>
<li>The Seagate <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda">Barracuda product line</a>. <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda#Barracuda_7200.10_(2006)">7200.10</a>, <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda#Barracuda_7200.11_(2007)">7200.11</a>
</li>
</ul>
</li>
<li>[@8:10](https://youtu.be/qisoAIx8EE8?t=490) Tough customers</li>
<li>[@10:17](https://youtu.be/qisoAIx8EE8?t=617) Cargo cultism and bad interview questions <ul><li>What is a Good New Englander? We’re not a hugging people.</li></ul>
</li>
<li>[@12:35](https://youtu.be/qisoAIx8EE8?t=755) <a href="https://twitter.com/bcantrill/status/987947359794446337">Adam and Bryan</a> after Sean Manaea’s 2018 no-no</li>
<li>The <a href="https://en.wikipedia.org/wiki/The_Gift_of_the_Magi">Gift of the Magi</a>, <a href="https://en.wikipedia.org/wiki/Logical_block_addressing">LBA</a>
</li>
<li>[@15:11](https://youtu.be/qisoAIx8EE8?t=911) Adam torments the interns</li>
<li>[@16:41](https://youtu.be/qisoAIx8EE8?t=1001) Bill and the <a href="https://www.hp.com/ca-en/campaigns/workstations/z620.html">HP Z620s</a><ul><li><a href="https://mickens.seas.harvard.edu/wisdom-james-mickens">The Wisdom of James Mickens</a></li></ul>
</li>
<li>[@19:21](https://youtu.be/qisoAIx8EE8?t=1161) Rick’s story <ul>
<li>Fast and loose firmware source control</li>
<li>
<a href="https://www.datacent.com/datarecovery/hdd/western_digital/WDC+ROM+MODEL-SPARTA----">Western Digital’s Sparta drive</a>, flying too low</li>
</ul>
</li>
<li>[@25:34](https://youtu.be/qisoAIx8EE8?t=1534) Need for open source firmware (see also: Bryan explains why <a href="https://soundcloud.com/user-760920229/why-your-servers-suck-and-how-oxide-computer-plans-to-make-this-better#t=26:54">proprietary firmware is a problem</a> ~3mins) <ul><li>Vendor gaslighting</li></ul>
</li>
<li>[@27:48](https://youtu.be/qisoAIx8EE8?t=1668) Tom on custom firmware <ul>
<li>Rent seeking</li>
<li><a href="https://en.wikipedia.org/wiki/S.M.A.R.T.">S.M.A.R.T.</a></li>
<li><a href="https://en.wikipedia.org/wiki/ADM-3A">ADM-3A “dumb terminal”</a></li>
</ul>
</li>
<li>[@32:08](https://youtu.be/qisoAIx8EE8?t=1928) Adam’s firmware horror story flashbacks <ul>
<li><a href="https://en.wikipedia.org/wiki/Host_adapter">HBA</a></li>
<li>When turning it off and on again isn’t enough: unplug and replug</li>
<li>Sun’s <a href="https://churchill.ddns.me.uk/post/fixing-ilom-command-errors/">ILOM bug</a>
</li>
<li>Sun’s embarrassing <a href="https://www.eweek.com/networking/sun-microsystems-to-change-ticker-symbol-to-java/">ticker symbol change</a>
</li>
</ul>
</li>
<li>[@38:10](https://youtu.be/qisoAIx8EE8?t=2290) After Sun &gt; Stay the hell away from hardware</li>
<li>[@39:55](https://youtu.be/qisoAIx8EE8?t=2395) Hard drive API wish list? <ul>
<li>Adam’s <a href="http://dtrace.org/blogs/ahl/2016/06/19/apfs-part1/">series on APFS</a> &gt; There is no bit rot here..</li>
<li>Networking vs Storage. Intermittent, transient failure</li>
</ul>
</li>
<li>[@44:40](https://youtu.be/qisoAIx8EE8?t=2680) Firmware as differentiator <ul>
<li>Heat-assisted magnetic recording (<a href="https://en.wikipedia.org/wiki/Heat-assisted_magnetic_recording">HAMR</a>)</li>
<li>Microwave-assisted magentic recording (<a href="https://iopscience.iop.org/article/10.1088/0022-3727/48/35/353001">MAMR</a>)</li>
<li>see also: Jessie’s <a href="https://queue.acm.org/detail.cfm?id=3419941">Life of a Data Byte</a> surveys storage media tech through history</li>
<li>Amazing physics, mediocre firmware. Firmware <em>is</em> software</li>
</ul>
</li>
<li>[@48:23](https://youtu.be/qisoAIx8EE8?t=2903) The only firmware that didn’t give us problems.. <ul>
<li>Adam on flash: <a href="https://queue.acm.org/detail.cfm?id=2463636">A File System All Its Own</a>, <a href="https://queue.acm.org/detail.cfm?id=1413262">Flash Storage Today</a>, <a href="http://dtrace.org/blogs/ahl/2010/08/17/fishworks_ssds/">History of SSDs</a> blog entry mentioning sTec and Gnutek</li>
<li>sTec <a href="https://www.globenewswire.com/en/news-release/2006/10/16/349552/3590/en/SimpleTech-Acquires-Gnutek-Ltd-a-Technology-Innovator-in-Solid-State-Flash-Drives.html">aquires Gnutek Ltd</a>
</li>
<li>The SEC’s <a href="https://www.sec.gov/litigation/complaints/2012/comp22419.pdf">complaint</a> against Manouchehr Moshayedi of <a href="https://en.wikipedia.org/wiki/STec,_Inc.">sTec</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Channel_stuffing">Channel stuffing</a></li>
<li>See also: Bryan mentions sTec misconduct on the <a href="https://soundcloud.com/user-760920229/why-your-servers-suck-and-how-oxide-computer-plans-to-make-this-better#t=29:03">Data Center Podcast</a>
</li>
</ul>
</li>
<li>[@54:04](https://youtu.be/qisoAIx8EE8?t=3244) Sans firmware? <ul><li>FPGA to ASIC transition <a href="https://www.computerworld.com/article/2507761/stec-readies-longer-lasting-ssds.html">article</a> 2011. (aside: treat yourself to this amazing <a href="http://www.storagesearch.com/news2011-may2.html">vintage mouse-themed site</a> announcing the same) &gt; It’s when microprocessors show up that all the trouble starts.</li></ul>
</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on Monday at 5p Pacific Time. Join us; we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: June 7, 2021</b></p><p>Barracuda 7200.11: broken firmware is broken software!</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p (PT) for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/billblum">Bill Blum</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, and others. <a href="https://youtu.be/qisoAIx8EE8">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>The <a href="https://en.wikipedia.org/wiki/ST3000DM001">Seagate ST3000DM001</a><ul><li><a href="https://en.wikipedia.org/wiki/ST3000DM001#Class_action">class action</a></li></ul>
</li>
<li>[@2:01](https://youtu.be/qisoAIx8EE8?t=121) Bryan and Adam’s experience <ul>
<li><a href="http://dtrace.org/blogs/bmc/2008/11/10/fishworks-now-it-can-be-told/">Fishworks</a></li>
<li><a href="https://en.wikipedia.org/wiki/HGST">HGST</a></li>
<li>Bryan is <a href="https://twitter.com/bcantrill/status/1242136263563472896">unable to forget SU0D</a> &gt; This thing damn near ruined our lives</li>
<li><a href="https://en.wikipedia.org/wiki/Broad_Institute">Broad Institute</a></li>
<li>The Seagate <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda">Barracuda product line</a>. <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda#Barracuda_7200.10_(2006)">7200.10</a>, <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda#Barracuda_7200.11_(2007)">7200.11</a>
</li>
</ul>
</li>
<li>[@8:10](https://youtu.be/qisoAIx8EE8?t=490) Tough customers</li>
<li>[@10:17](https://youtu.be/qisoAIx8EE8?t=617) Cargo cultism and bad interview questions <ul><li>What is a Good New Englander? We’re not a hugging people.</li></ul>
</li>
<li>[@12:35](https://youtu.be/qisoAIx8EE8?t=755) <a href="https://twitter.com/bcantrill/status/987947359794446337">Adam and Bryan</a> after Sean Manaea’s 2018 no-no</li>
<li>The <a href="https://en.wikipedia.org/wiki/The_Gift_of_the_Magi">Gift of the Magi</a>, <a href="https://en.wikipedia.org/wiki/Logical_block_addressing">LBA</a>
</li>
<li>[@15:11](https://youtu.be/qisoAIx8EE8?t=911) Adam torments the interns</li>
<li>[@16:41](https://youtu.be/qisoAIx8EE8?t=1001) Bill and the <a href="https://www.hp.com/ca-en/campaigns/workstations/z620.html">HP Z620s</a><ul><li><a href="https://mickens.seas.harvard.edu/wisdom-james-mickens">The Wisdom of James Mickens</a></li></ul>
</li>
<li>[@19:21](https://youtu.be/qisoAIx8EE8?t=1161) Rick’s story <ul>
<li>Fast and loose firmware source control</li>
<li>
<a href="https://www.datacent.com/datarecovery/hdd/western_digital/WDC+ROM+MODEL-SPARTA----">Western Digital’s Sparta drive</a>, flying too low</li>
</ul>
</li>
<li>[@25:34](https://youtu.be/qisoAIx8EE8?t=1534) Need for open source firmware (see also: Bryan explains why <a href="https://soundcloud.com/user-760920229/why-your-servers-suck-and-how-oxide-computer-plans-to-make-this-better#t=26:54">proprietary firmware is a problem</a> ~3mins) <ul><li>Vendor gaslighting</li></ul>
</li>
<li>[@27:48](https://youtu.be/qisoAIx8EE8?t=1668) Tom on custom firmware <ul>
<li>Rent seeking</li>
<li><a href="https://en.wikipedia.org/wiki/S.M.A.R.T.">S.M.A.R.T.</a></li>
<li><a href="https://en.wikipedia.org/wiki/ADM-3A">ADM-3A “dumb terminal”</a></li>
</ul>
</li>
<li>[@32:08](https://youtu.be/qisoAIx8EE8?t=1928) Adam’s firmware horror story flashbacks <ul>
<li><a href="https://en.wikipedia.org/wiki/Host_adapter">HBA</a></li>
<li>When turning it off and on again isn’t enough: unplug and replug</li>
<li>Sun’s <a href="https://churchill.ddns.me.uk/post/fixing-ilom-command-errors/">ILOM bug</a>
</li>
<li>Sun’s embarrassing <a href="https://www.eweek.com/networking/sun-microsystems-to-change-ticker-symbol-to-java/">ticker symbol change</a>
</li>
</ul>
</li>
<li>[@38:10](https://youtu.be/qisoAIx8EE8?t=2290) After Sun &gt; Stay the hell away from hardware</li>
<li>[@39:55](https://youtu.be/qisoAIx8EE8?t=2395) Hard drive API wish list? <ul>
<li>Adam’s <a href="http://dtrace.org/blogs/ahl/2016/06/19/apfs-part1/">series on APFS</a> &gt; There is no bit rot here..</li>
<li>Networking vs Storage. Intermittent, transient failure</li>
</ul>
</li>
<li>[@44:40](https://youtu.be/qisoAIx8EE8?t=2680) Firmware as differentiator <ul>
<li>Heat-assisted magnetic recording (<a href="https://en.wikipedia.org/wiki/Heat-assisted_magnetic_recording">HAMR</a>)</li>
<li>Microwave-assisted magentic recording (<a href="https://iopscience.iop.org/article/10.1088/0022-3727/48/35/353001">MAMR</a>)</li>
<li>see also: Jessie’s <a href="https://queue.acm.org/detail.cfm?id=3419941">Life of a Data Byte</a> surveys storage media tech through history</li>
<li>Amazing physics, mediocre firmware. Firmware <em>is</em> software</li>
</ul>
</li>
<li>[@48:23](https://youtu.be/qisoAIx8EE8?t=2903) The only firmware that didn’t give us problems.. <ul>
<li>Adam on flash: <a href="https://queue.acm.org/detail.cfm?id=2463636">A File System All Its Own</a>, <a href="https://queue.acm.org/detail.cfm?id=1413262">Flash Storage Today</a>, <a href="http://dtrace.org/blogs/ahl/2010/08/17/fishworks_ssds/">History of SSDs</a> blog entry mentioning sTec and Gnutek</li>
<li>sTec <a href="https://www.globenewswire.com/en/news-release/2006/10/16/349552/3590/en/SimpleTech-Acquires-Gnutek-Ltd-a-Technology-Innovator-in-Solid-State-Flash-Drives.html">aquires Gnutek Ltd</a>
</li>
<li>The SEC’s <a href="https://www.sec.gov/litigation/complaints/2012/comp22419.pdf">complaint</a> against Manouchehr Moshayedi of <a href="https://en.wikipedia.org/wiki/STec,_Inc.">sTec</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Channel_stuffing">Channel stuffing</a></li>
<li>See also: Bryan mentions sTec misconduct on the <a href="https://soundcloud.com/user-760920229/why-your-servers-suck-and-how-oxide-computer-plans-to-make-this-better#t=29:03">Data Center Podcast</a>
</li>
</ul>
</li>
<li>[@54:04](https://youtu.be/qisoAIx8EE8?t=3244) Sans firmware? <ul><li>FPGA to ASIC transition <a href="https://www.computerworld.com/article/2507761/stec-readies-longer-lasting-ssds.html">article</a> 2011. (aside: treat yourself to this amazing <a href="http://www.storagesearch.com/news2011-may2.html">vintage mouse-themed site</a> announcing the same) &gt; It’s when microprocessors show up that all the trouble starts.</li></ul>
</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on Monday at 5p Pacific Time. Join us; we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 07 Jun 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/57a93d18/c43ba8d6.mp3" length="54778312" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3423</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: June 7, 2021</b></p><p>Barracuda 7200.11: broken firmware is broken software!</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p (PT) for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, <a href="https://twitter.com/billblum">Bill Blum</a>, <a href="https://twitter.com/kc8apf">Rick Altherr</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, and others. <a href="https://youtu.be/qisoAIx8EE8">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>The <a href="https://en.wikipedia.org/wiki/ST3000DM001">Seagate ST3000DM001</a><ul><li><a href="https://en.wikipedia.org/wiki/ST3000DM001#Class_action">class action</a></li></ul>
</li>
<li>[@2:01](https://youtu.be/qisoAIx8EE8?t=121) Bryan and Adam’s experience <ul>
<li><a href="http://dtrace.org/blogs/bmc/2008/11/10/fishworks-now-it-can-be-told/">Fishworks</a></li>
<li><a href="https://en.wikipedia.org/wiki/HGST">HGST</a></li>
<li>Bryan is <a href="https://twitter.com/bcantrill/status/1242136263563472896">unable to forget SU0D</a> &gt; This thing damn near ruined our lives</li>
<li><a href="https://en.wikipedia.org/wiki/Broad_Institute">Broad Institute</a></li>
<li>The Seagate <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda">Barracuda product line</a>. <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda#Barracuda_7200.10_(2006)">7200.10</a>, <a href="https://en.wikipedia.org/wiki/Seagate_Barracuda#Barracuda_7200.11_(2007)">7200.11</a>
</li>
</ul>
</li>
<li>[@8:10](https://youtu.be/qisoAIx8EE8?t=490) Tough customers</li>
<li>[@10:17](https://youtu.be/qisoAIx8EE8?t=617) Cargo cultism and bad interview questions <ul><li>What is a Good New Englander? We’re not a hugging people.</li></ul>
</li>
<li>[@12:35](https://youtu.be/qisoAIx8EE8?t=755) <a href="https://twitter.com/bcantrill/status/987947359794446337">Adam and Bryan</a> after Sean Manaea’s 2018 no-no</li>
<li>The <a href="https://en.wikipedia.org/wiki/The_Gift_of_the_Magi">Gift of the Magi</a>, <a href="https://en.wikipedia.org/wiki/Logical_block_addressing">LBA</a>
</li>
<li>[@15:11](https://youtu.be/qisoAIx8EE8?t=911) Adam torments the interns</li>
<li>[@16:41](https://youtu.be/qisoAIx8EE8?t=1001) Bill and the <a href="https://www.hp.com/ca-en/campaigns/workstations/z620.html">HP Z620s</a><ul><li><a href="https://mickens.seas.harvard.edu/wisdom-james-mickens">The Wisdom of James Mickens</a></li></ul>
</li>
<li>[@19:21](https://youtu.be/qisoAIx8EE8?t=1161) Rick’s story <ul>
<li>Fast and loose firmware source control</li>
<li>
<a href="https://www.datacent.com/datarecovery/hdd/western_digital/WDC+ROM+MODEL-SPARTA----">Western Digital’s Sparta drive</a>, flying too low</li>
</ul>
</li>
<li>[@25:34](https://youtu.be/qisoAIx8EE8?t=1534) Need for open source firmware (see also: Bryan explains why <a href="https://soundcloud.com/user-760920229/why-your-servers-suck-and-how-oxide-computer-plans-to-make-this-better#t=26:54">proprietary firmware is a problem</a> ~3mins) <ul><li>Vendor gaslighting</li></ul>
</li>
<li>[@27:48](https://youtu.be/qisoAIx8EE8?t=1668) Tom on custom firmware <ul>
<li>Rent seeking</li>
<li><a href="https://en.wikipedia.org/wiki/S.M.A.R.T.">S.M.A.R.T.</a></li>
<li><a href="https://en.wikipedia.org/wiki/ADM-3A">ADM-3A “dumb terminal”</a></li>
</ul>
</li>
<li>[@32:08](https://youtu.be/qisoAIx8EE8?t=1928) Adam’s firmware horror story flashbacks <ul>
<li><a href="https://en.wikipedia.org/wiki/Host_adapter">HBA</a></li>
<li>When turning it off and on again isn’t enough: unplug and replug</li>
<li>Sun’s <a href="https://churchill.ddns.me.uk/post/fixing-ilom-command-errors/">ILOM bug</a>
</li>
<li>Sun’s embarrassing <a href="https://www.eweek.com/networking/sun-microsystems-to-change-ticker-symbol-to-java/">ticker symbol change</a>
</li>
</ul>
</li>
<li>[@38:10](https://youtu.be/qisoAIx8EE8?t=2290) After Sun &gt; Stay the hell away from hardware</li>
<li>[@39:55](https://youtu.be/qisoAIx8EE8?t=2395) Hard drive API wish list? <ul>
<li>Adam’s <a href="http://dtrace.org/blogs/ahl/2016/06/19/apfs-part1/">series on APFS</a> &gt; There is no bit rot here..</li>
<li>Networking vs Storage. Intermittent, transient failure</li>
</ul>
</li>
<li>[@44:40](https://youtu.be/qisoAIx8EE8?t=2680) Firmware as differentiator <ul>
<li>Heat-assisted magnetic recording (<a href="https://en.wikipedia.org/wiki/Heat-assisted_magnetic_recording">HAMR</a>)</li>
<li>Microwave-assisted magentic recording (<a href="https://iopscience.iop.org/article/10.1088/0022-3727/48/35/353001">MAMR</a>)</li>
<li>see also: Jessie’s <a href="https://queue.acm.org/detail.cfm?id=3419941">Life of a Data Byte</a> surveys storage media tech through history</li>
<li>Amazing physics, mediocre firmware. Firmware <em>is</em> software</li>
</ul>
</li>
<li>[@48:23](https://youtu.be/qisoAIx8EE8?t=2903) The only firmware that didn’t give us problems.. <ul>
<li>Adam on flash: <a href="https://queue.acm.org/detail.cfm?id=2463636">A File System All Its Own</a>, <a href="https://queue.acm.org/detail.cfm?id=1413262">Flash Storage Today</a>, <a href="http://dtrace.org/blogs/ahl/2010/08/17/fishworks_ssds/">History of SSDs</a> blog entry mentioning sTec and Gnutek</li>
<li>sTec <a href="https://www.globenewswire.com/en/news-release/2006/10/16/349552/3590/en/SimpleTech-Acquires-Gnutek-Ltd-a-Technology-Innovator-in-Solid-State-Flash-Drives.html">aquires Gnutek Ltd</a>
</li>
<li>The SEC’s <a href="https://www.sec.gov/litigation/complaints/2012/comp22419.pdf">complaint</a> against Manouchehr Moshayedi of <a href="https://en.wikipedia.org/wiki/STec,_Inc.">sTec</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Channel_stuffing">Channel stuffing</a></li>
<li>See also: Bryan mentions sTec misconduct on the <a href="https://soundcloud.com/user-760920229/why-your-servers-suck-and-how-oxide-computer-plans-to-make-this-better#t=29:03">Data Center Podcast</a>
</li>
</ul>
</li>
<li>[@54:04](https://youtu.be/qisoAIx8EE8?t=3244) Sans firmware? <ul><li>FPGA to ASIC transition <a href="https://www.computerworld.com/article/2507761/stec-readies-longer-lasting-ssds.html">article</a> 2011. (aside: treat yourself to this amazing <a href="http://www.storagesearch.com/news2011-may2.html">vintage mouse-themed site</a> announcing the same) &gt; It’s when microprocessors show up that all the trouble starts.</li></ul>
</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on Monday at 5p Pacific Time. Join us; we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Silicon Cowboys</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>5</itunes:episode>
      <podcast:episode>5</podcast:episode>
      <itunes:title>Silicon Cowboys</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">ce1c4e2d-0531-4bef-8db8-416b04d99d28</guid>
      <link>https://share.transistor.fm/s/7332307d</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 31, 2021</b></p><p>Silicon Cowboys</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, and others. <a href="https://www.youtube.com/watch?v=faY7kWHQuNE">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="#silicon-cowboys">Silicon Cowboys documentary</a></li>
<li><a href="#open-by-canion">Open by Rod Canion</a></li>
<li><a href="#portable-before-compaq">Portable before Compaq, Silent 700</a></li>
<li><a href="#osborne-effect">Osborne Effect</a></li>
<li><a href="#pbs-silicon-valley">PBS Silicon Valley documentary</a></li>
<li><a href="#ibms-role">IBM’s role in Compaq history</a></li>
<li><a href="#80s-ads">80’s Ads: John Cleese, Charlie Chaplin</a></li>
<li><a href="#compaq-and-iphone">Compaq and iPhone?</a></li>
<li><a href="#decline-and-acquisition">Decline and Acquisition</a></li>
<li><a href="#something-ventured">Something Ventured documentary</a></li>
<li>PRs welcome!</li>
</ul><p>[@1:25](https://youtu.be/faY7kWHQuNE?t=85) Bryan: Have you listened to the <a href="https://gimletmedia.com/shows/reply-all/z3hlwr">Reply All episode</a> “Is the Facebook Microphone On?”</p>The truth is actually scarier, Facebook doesn’t <em>need</em> the mic to be on … to read your mind.<p>Silicon Cowboys</p><p>[@2:46](https://youtu.be/faY7kWHQuNE?t=166) The 2016 documentary “Silicon Cowboys” follows the rise of the Compaq computer company. (<a href="https://www.imdb.com/title/tt4938484/">IMDb</a>) (<a href="https://youtu.be/wjE6X0HZClc">Watch the trailer</a> ~3mins)</p>I was trying to watch “Halt and Catch Fire” with my kid … and there’s a lot of spontaneous sex breaking out…Fastest to one billion in revenue… fastest to Fortune 500… a meteoric rise<p>Open by Canion</p><p>[@7:05](https://youtu.be/faY7kWHQuNE?t=425) The 2013 book <a href="https://www.google.com/books/edition/Open/CfStAAAAQBAJ">“Open”</a> by Rod Canion (cofounder and CEO of Compaq): “How Compaq Ended IBM’s PC Domination and Helped Invent Modern Computing.”</p><p>[@10:02](https://youtu.be/faY7kWHQuNE?t=602) Steve: Ben Rosen was the venture capitalist who wrote the first check to Compaq, really got them off the ground. On the board for 20 years.</p>Their timing was right. The way they did the company was right. And they executed really really well.To go from zero to 50 thousand units, of almost anything, in the time span they did, is incredible.<p>[@14:40](https://youtu.be/faY7kWHQuNE?t=880) Tom: The thing that really put them on the map was having the portable when nobody else did. And being 100% compatible.</p>Those portables were barely luggable, they were huge!Back in a time when there was no network. Being able to pick up your computer and take it to a place, <em>was</em> your network.<p>[@16:47](https://youtu.be/faY7kWHQuNE?t=1007) Steve: A big catalyst for their success was <em>the channel</em>. People were able to pick it up and go, they didn’t need special training.</p><p>[@19:25](https://youtu.be/faY7kWHQuNE?t=1165) Dad used to bring home the luggable so I could play Space Invaders, and he would work on spreadsheets.</p><p>Portable before Compaq</p><p>[@20:49](https://youtu.be/faY7kWHQuNE?t=1249) There were portable solutions before Compaq, but for timesharing.</p>You had the <a href="https://en.wikipedia.org/wiki/Silent_700">T.I. Silent 700</a>, in the 70’s, you could tote that home and plug it into the modem.<p>Osborne Effect</p><p>[@22:41](https://youtu.be/faY7kWHQuNE?t=1361) Tom: They killed their company with the famous <a href="https://en.wikipedia.org/wiki/Osborne_effect">Osborne Effect</a></p>Bryan and Steve (clearly excited): What was the Osborne Effect!?<br> Tom: Pre-announcing the next machine.Telling customers: man, if you love the Osborne 1, just wait till the Osborne 2… So they did!<p>[@24:40](https://youtu.be/faY7kWHQuNE?t=1480) Bryan: Something I found surprising about the history of Compaq was the different organizational approach that they had.</p>Early on, before even thinking about what to go do, they were talking about the kind of company they wanted to build.<p>PBS Silicon Valley</p><p>[@26:14](https://youtu.be/faY7kWHQuNE?t=1574) The 2013 PBS documentary “Silicon Valley” tells the story of Fairchild Semiconductor. (<a href="https://www.pbs.org/wgbh/americanexperience/features/silicon-chapter-one/">Watch chapter one</a> ~17mins)</p><p>[@28:14](https://youtu.be/faY7kWHQuNE?t=1694) We ask people, when they apply to Oxide, when they’ve been most unhappy in their careers. And it all boils down to people not feeling listened to, not having agency.</p><p>IBM’s role</p><p>[@29:41](https://youtu.be/faY7kWHQuNE?t=1781) How much of Compaq’s success is just pure mis-execution from IBM? IBM inadvertently creates this pseudo open architecture, and makes exactly the wrong move in trying to <a href="https://youtu.be/Zpnncakrelk?t=1041">reproprietarize</a> it with the <a href="https://en.wikipedia.org/wiki/IBM_PS/2">PS/2</a> and <a href="https://en.wikipedia.org/wiki/Micro_Channel_architecture">Micro Channel architecture</a>; which is an absolute disaster.</p>In many ways the story of Compaq is as much the story of the failed PS/2.It was such a mis-execution to do this analysis on the market and say: we need to grab our existing customers and lock them in, before they slip through our fingers, and in doing so, just hasten their departure.<br> And Compaq was in the right spot to pick up the pieces.<p><a href="https://en.wikipedia.org/wiki/Micro_Channel_architecture">MCA</a> (Micro Channel architecture), <a href="https://en.wikipedia.org/wiki/Industry_Standard_Architecture">ISA</a>, <a href="https://en.wikipedia.org/wiki/Extended_Industry_Standard_Architecture">EISA</a></p><p>[@33:22](https://youtu.be/faY7kWHQuNE?t=2002) We were ripping out a bunch of ISA and EISA drivers..</p><em>I</em> am a sacrificial sheep, I can’t possibly go. <em>You</em> are a sacrificial lamb.The machines themselves are anemic, if you want any functionality you go to a third party..<br> There were magazines filled with advice on which sound-generating card you should buy.<p><a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer_XT">IBM PC XT</a> – <a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">Hercules graphics card</a></p><p>[@37:00](https://youtu.be/faY7kWHQuNE?t=2220) Driver for <a href="https://en.wikipedia.org/wiki/Token_Ring">Token Ring</a>.</p><p><a href="https://en.wikipedia.org/wiki/Peripheral_Component_Interconnect">PCI</a> – <a href="https://en.wikipedia.org/wiki/SBus">SBus</a> – <a href="https://en.wikipedia.org/wiki/VMEbus">VME</a> – <a href="https://en.wikipedia.org/wiki/VESA_Local_Bus">VLB</a> – <a href="https://en.wikipedia.org/wiki/Accelerated_Graphics_Port">AGP</a></p><p>[@40:20](https://youtu.be/faY7kWHQuNE?t=2420) Speaking of Intel, a big part of the Compaq story is what happens with the <a href="https://en.wikipedia.org/wiki/I386">386</a>.</p>IBM clearly thought Intel would never give some clone manufacturer the first rights to the 386.They went from fast follower to innovator.<p><a href="https://en.wikipedia.org/wiki/OS/2">OS/2</a> supported both 16 bit (for the <a href="https://en.wikipedia.org/wiki/Intel_80286">286</a>) and 32 bit.</p><p>[@42:07](https://youtu.be/faY7kWHQuNE?t=2527) One of the headwinds working against IBM was that all the software companies wanted to see more competition in hardware vendors; they wanted to see the clones become real companies.</p>Certainly Microsoft aided the rise of Compaq, no question. Compaq turned Microsoft into a real believer.<p>80’s Ads</p><p>[@43:11](https://youtu.be/faY7kWHQuNE?t=2591) I loved the 80’s ads.</p><p>John Cleese: <a href="https://youtu.be/RlmzwZXa-Ww">Compaq Portable vs a Fish</a> ~2mins</p>Cleese: I suppose the fish could <em>give</em> you a mega-bite! (laughs hysterically)Cleese: The Compaq Portable 2 however can run all IBM’s most popular software, 30% faster than IBM can!<br> (dryly) HA HA HA<p>Bryan: Absolutely no joke, I knew Charlie Chaplin <em>first</em> through the IBM PC ads. I didn’t even know they were making a reference!</p><p>IBM Charlie Chaplin <a href="https://youtu.be/kQT_YCBb9ao">ads compilation</a> ~9mins. (Aside: these are new to me. For me it painted the computers as accessible/approachable, something anyone could do; even a clumsy Mr. Bean character)</p>You guys need to stop mocking the Chaplin ads. They were marketing gold and as a 5 year old watching bunny rabbit ear TV seeing those ads in the middle of Scooby Doo, I was begging my parents for an IBM PC!<p>[@47:10](https://youtu.be/faY7kWHQuNE?t=2830) Adam: My parents got a free <a href="https://en.wikipedia.org/wiki/Macintosh_Plus">Mac Plus</a> when they opened a bank account! I know it’s crazy anachronistic.</p>Adam: In ’86 we had a <a href="https://en.wikipedia.org/wiki/Commodore_64">Commodore 64</a> and then upgraded to a Mac Plus.<br> Bryan: That’s a big upgrade! Adam: It was incredible.<p><a href="https://en.wikipedia.org/wiki/MacPaint">MacPaint</a> – <a href="https://en.wikipedia.org/wiki/ImageWriter#ImageWriter_II">ImageWriter II</a> – <a href="https://en.wikipedia.org/wiki/Dot_matrix_printing">Dot matrix printing</a> – <a href="https://en.wikipedia.org/wiki/The_Print_Shop">The Print Shop</a></p>With the banner program, you could print “Happy Birthday”, and probably other messages, but it never came up..<p>Compaq and iPhone?</p><p>[@50:59](https://youtu.be/faY7kWHQuNE?t=3059) Book and documentary ask: What if Compaq had made the iPhone?</p>I think it cheapens the whole thing. No one should feel an obligation to claim their role in history by connecting themselves to the iPhone. The iPhone is not the pinnacle of human history.Just take your wins, and there are many of them. But, the time that they were dominant, <em>that’s</em> the story.<p>Decline and Acquisition</p><p>[@53:24](https://youtu.be/faY7kWHQuNE?t=3204) The movie ends when Canion is fired, by Rosen, which is pretty amazing.</p>To be fair, <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation">DEC</a> killed DEC.<p><a href="https://en.wikipedia.org/wiki/Tandem_Computers">Tandem Computers</a></p>I feel like the later history of Compaq is this sugar high of sales continuing to spike, but then ultimately it’s the ruin of the company. The company ceased to be an innovator.<p><a href="https://en.wikipedia.org/wiki/Compaq#Acquisition_by_Hewlett-Packard">Compaq is acquired by Hewlett-Packard</a></p>Compaq systems, at this point, were very expensive. And this was part of the controversy of Rod getting run out, was not wanting to go down market.<p>[@59:51](https://youtu.be/faY7kWHQuNE?t=3591) Speaking of HPE (Hewlett Packard Enterprise) and Compaq, they just relocated their headquarters to Huston.</p>I feel like HP hasn’t been a Silicon Valley company in a long long time.This was like the animals walking upright, where Compaq became a lot like IBM in a lot of their sales tactics.<p>Something Ventured</p><p>[@1:02:41](https://youtu.be/faY7kWHQuNE?t=3761) The 2011 documentary “Something Ventured” investigates the emergence of American venture capitalism. (<a href="https://youtu.be/ssR0sdKqNs4">Watch the trailer</a> ~2mins) (<a href="https://vimeo.com/105745528">Watch the documentary</a> ~85mins)</p><p><a href="https://en.wikipedia.org/wiki/Tandem_Computers">Tandem Computers</a></p>A 7 million dollar iceberg sitting in the datacenter, this Tandem. They were so reliant on it, they had another shrink wrapped just sitting on the datacenter floor, in the event that the first one ever went out.<a href="https://en.wikipedia.org/wiki/Jimmy_Treybig">Jimmy Treybig</a> is a super interesting character. Very iconoclastic engineer.I didn’t realize that Tandem <em>made</em> KP. If it weren’t for Tandem, <a href="https://en.wikipedia.org/wiki/Kleiner_Perkins">Kleiner Perkins</a> wouldn’t have risen as a VC firm. They went all-in on Tandem, and Tandem had an outsized result.<p>Our next Twitter space will be on Monday at 5p Pacific Time. Join us; we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 31, 2021</b></p><p>Silicon Cowboys</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, and others. <a href="https://www.youtube.com/watch?v=faY7kWHQuNE">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="#silicon-cowboys">Silicon Cowboys documentary</a></li>
<li><a href="#open-by-canion">Open by Rod Canion</a></li>
<li><a href="#portable-before-compaq">Portable before Compaq, Silent 700</a></li>
<li><a href="#osborne-effect">Osborne Effect</a></li>
<li><a href="#pbs-silicon-valley">PBS Silicon Valley documentary</a></li>
<li><a href="#ibms-role">IBM’s role in Compaq history</a></li>
<li><a href="#80s-ads">80’s Ads: John Cleese, Charlie Chaplin</a></li>
<li><a href="#compaq-and-iphone">Compaq and iPhone?</a></li>
<li><a href="#decline-and-acquisition">Decline and Acquisition</a></li>
<li><a href="#something-ventured">Something Ventured documentary</a></li>
<li>PRs welcome!</li>
</ul><p>[@1:25](https://youtu.be/faY7kWHQuNE?t=85) Bryan: Have you listened to the <a href="https://gimletmedia.com/shows/reply-all/z3hlwr">Reply All episode</a> “Is the Facebook Microphone On?”</p>The truth is actually scarier, Facebook doesn’t <em>need</em> the mic to be on … to read your mind.<p>Silicon Cowboys</p><p>[@2:46](https://youtu.be/faY7kWHQuNE?t=166) The 2016 documentary “Silicon Cowboys” follows the rise of the Compaq computer company. (<a href="https://www.imdb.com/title/tt4938484/">IMDb</a>) (<a href="https://youtu.be/wjE6X0HZClc">Watch the trailer</a> ~3mins)</p>I was trying to watch “Halt and Catch Fire” with my kid … and there’s a lot of spontaneous sex breaking out…Fastest to one billion in revenue… fastest to Fortune 500… a meteoric rise<p>Open by Canion</p><p>[@7:05](https://youtu.be/faY7kWHQuNE?t=425) The 2013 book <a href="https://www.google.com/books/edition/Open/CfStAAAAQBAJ">“Open”</a> by Rod Canion (cofounder and CEO of Compaq): “How Compaq Ended IBM’s PC Domination and Helped Invent Modern Computing.”</p><p>[@10:02](https://youtu.be/faY7kWHQuNE?t=602) Steve: Ben Rosen was the venture capitalist who wrote the first check to Compaq, really got them off the ground. On the board for 20 years.</p>Their timing was right. The way they did the company was right. And they executed really really well.To go from zero to 50 thousand units, of almost anything, in the time span they did, is incredible.<p>[@14:40](https://youtu.be/faY7kWHQuNE?t=880) Tom: The thing that really put them on the map was having the portable when nobody else did. And being 100% compatible.</p>Those portables were barely luggable, they were huge!Back in a time when there was no network. Being able to pick up your computer and take it to a place, <em>was</em> your network.<p>[@16:47](https://youtu.be/faY7kWHQuNE?t=1007) Steve: A big catalyst for their success was <em>the channel</em>. People were able to pick it up and go, they didn’t need special training.</p><p>[@19:25](https://youtu.be/faY7kWHQuNE?t=1165) Dad used to bring home the luggable so I could play Space Invaders, and he would work on spreadsheets.</p><p>Portable before Compaq</p><p>[@20:49](https://youtu.be/faY7kWHQuNE?t=1249) There were portable solutions before Compaq, but for timesharing.</p>You had the <a href="https://en.wikipedia.org/wiki/Silent_700">T.I. Silent 700</a>, in the 70’s, you could tote that home and plug it into the modem.<p>Osborne Effect</p><p>[@22:41](https://youtu.be/faY7kWHQuNE?t=1361) Tom: They killed their company with the famous <a href="https://en.wikipedia.org/wiki/Osborne_effect">Osborne Effect</a></p>Bryan and Steve (clearly excited): What was the Osborne Effect!?<br> Tom: Pre-announcing the next machine.Telling customers: man, if you love the Osborne 1, just wait till the Osborne 2… So they did!<p>[@24:40](https://youtu.be/faY7kWHQuNE?t=1480) Bryan: Something I found surprising about the history of Compaq was the different organizational approach that they had.</p>Early on, before even thinking about what to go do, they were talking about the kind of company they wanted to build.<p>PBS Silicon Valley</p><p>[@26:14](https://youtu.be/faY7kWHQuNE?t=1574) The 2013 PBS documentary “Silicon Valley” tells the story of Fairchild Semiconductor. (<a href="https://www.pbs.org/wgbh/americanexperience/features/silicon-chapter-one/">Watch chapter one</a> ~17mins)</p><p>[@28:14](https://youtu.be/faY7kWHQuNE?t=1694) We ask people, when they apply to Oxide, when they’ve been most unhappy in their careers. And it all boils down to people not feeling listened to, not having agency.</p><p>IBM’s role</p><p>[@29:41](https://youtu.be/faY7kWHQuNE?t=1781) How much of Compaq’s success is just pure mis-execution from IBM? IBM inadvertently creates this pseudo open architecture, and makes exactly the wrong move in trying to <a href="https://youtu.be/Zpnncakrelk?t=1041">reproprietarize</a> it with the <a href="https://en.wikipedia.org/wiki/IBM_PS/2">PS/2</a> and <a href="https://en.wikipedia.org/wiki/Micro_Channel_architecture">Micro Channel architecture</a>; which is an absolute disaster.</p>In many ways the story of Compaq is as much the story of the failed PS/2.It was such a mis-execution to do this analysis on the market and say: we need to grab our existing customers and lock them in, before they slip through our fingers, and in doing so, just hasten their departure.<br> And Compaq was in the right spot to pick up the pieces.<p><a href="https://en.wikipedia.org/wiki/Micro_Channel_architecture">MCA</a> (Micro Channel architecture), <a href="https://en.wikipedia.org/wiki/Industry_Standard_Architecture">ISA</a>, <a href="https://en.wikipedia.org/wiki/Extended_Industry_Standard_Architecture">EISA</a></p><p>[@33:22](https://youtu.be/faY7kWHQuNE?t=2002) We were ripping out a bunch of ISA and EISA drivers..</p><em>I</em> am a sacrificial sheep, I can’t possibly go. <em>You</em> are a sacrificial lamb.The machines themselves are anemic, if you want any functionality you go to a third party..<br> There were magazines filled with advice on which sound-generating card you should buy.<p><a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer_XT">IBM PC XT</a> – <a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">Hercules graphics card</a></p><p>[@37:00](https://youtu.be/faY7kWHQuNE?t=2220) Driver for <a href="https://en.wikipedia.org/wiki/Token_Ring">Token Ring</a>.</p><p><a href="https://en.wikipedia.org/wiki/Peripheral_Component_Interconnect">PCI</a> – <a href="https://en.wikipedia.org/wiki/SBus">SBus</a> – <a href="https://en.wikipedia.org/wiki/VMEbus">VME</a> – <a href="https://en.wikipedia.org/wiki/VESA_Local_Bus">VLB</a> – <a href="https://en.wikipedia.org/wiki/Accelerated_Graphics_Port">AGP</a></p><p>[@40:20](https://youtu.be/faY7kWHQuNE?t=2420) Speaking of Intel, a big part of the Compaq story is what happens with the <a href="https://en.wikipedia.org/wiki/I386">386</a>.</p>IBM clearly thought Intel would never give some clone manufacturer the first rights to the 386.They went from fast follower to innovator.<p><a href="https://en.wikipedia.org/wiki/OS/2">OS/2</a> supported both 16 bit (for the <a href="https://en.wikipedia.org/wiki/Intel_80286">286</a>) and 32 bit.</p><p>[@42:07](https://youtu.be/faY7kWHQuNE?t=2527) One of the headwinds working against IBM was that all the software companies wanted to see more competition in hardware vendors; they wanted to see the clones become real companies.</p>Certainly Microsoft aided the rise of Compaq, no question. Compaq turned Microsoft into a real believer.<p>80’s Ads</p><p>[@43:11](https://youtu.be/faY7kWHQuNE?t=2591) I loved the 80’s ads.</p><p>John Cleese: <a href="https://youtu.be/RlmzwZXa-Ww">Compaq Portable vs a Fish</a> ~2mins</p>Cleese: I suppose the fish could <em>give</em> you a mega-bite! (laughs hysterically)Cleese: The Compaq Portable 2 however can run all IBM’s most popular software, 30% faster than IBM can!<br> (dryly) HA HA HA<p>Bryan: Absolutely no joke, I knew Charlie Chaplin <em>first</em> through the IBM PC ads. I didn’t even know they were making a reference!</p><p>IBM Charlie Chaplin <a href="https://youtu.be/kQT_YCBb9ao">ads compilation</a> ~9mins. (Aside: these are new to me. For me it painted the computers as accessible/approachable, something anyone could do; even a clumsy Mr. Bean character)</p>You guys need to stop mocking the Chaplin ads. They were marketing gold and as a 5 year old watching bunny rabbit ear TV seeing those ads in the middle of Scooby Doo, I was begging my parents for an IBM PC!<p>[@47:10](https://youtu.be/faY7kWHQuNE?t=2830) Adam: My parents got a free <a href="https://en.wikipedia.org/wiki/Macintosh_Plus">Mac Plus</a> when they opened a bank account! I know it’s crazy anachronistic.</p>Adam: In ’86 we had a <a href="https://en.wikipedia.org/wiki/Commodore_64">Commodore 64</a> and then upgraded to a Mac Plus.<br> Bryan: That’s a big upgrade! Adam: It was incredible.<p><a href="https://en.wikipedia.org/wiki/MacPaint">MacPaint</a> – <a href="https://en.wikipedia.org/wiki/ImageWriter#ImageWriter_II">ImageWriter II</a> – <a href="https://en.wikipedia.org/wiki/Dot_matrix_printing">Dot matrix printing</a> – <a href="https://en.wikipedia.org/wiki/The_Print_Shop">The Print Shop</a></p>With the banner program, you could print “Happy Birthday”, and probably other messages, but it never came up..<p>Compaq and iPhone?</p><p>[@50:59](https://youtu.be/faY7kWHQuNE?t=3059) Book and documentary ask: What if Compaq had made the iPhone?</p>I think it cheapens the whole thing. No one should feel an obligation to claim their role in history by connecting themselves to the iPhone. The iPhone is not the pinnacle of human history.Just take your wins, and there are many of them. But, the time that they were dominant, <em>that’s</em> the story.<p>Decline and Acquisition</p><p>[@53:24](https://youtu.be/faY7kWHQuNE?t=3204) The movie ends when Canion is fired, by Rosen, which is pretty amazing.</p>To be fair, <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation">DEC</a> killed DEC.<p><a href="https://en.wikipedia.org/wiki/Tandem_Computers">Tandem Computers</a></p>I feel like the later history of Compaq is this sugar high of sales continuing to spike, but then ultimately it’s the ruin of the company. The company ceased to be an innovator.<p><a href="https://en.wikipedia.org/wiki/Compaq#Acquisition_by_Hewlett-Packard">Compaq is acquired by Hewlett-Packard</a></p>Compaq systems, at this point, were very expensive. And this was part of the controversy of Rod getting run out, was not wanting to go down market.<p>[@59:51](https://youtu.be/faY7kWHQuNE?t=3591) Speaking of HPE (Hewlett Packard Enterprise) and Compaq, they just relocated their headquarters to Huston.</p>I feel like HP hasn’t been a Silicon Valley company in a long long time.This was like the animals walking upright, where Compaq became a lot like IBM in a lot of their sales tactics.<p>Something Ventured</p><p>[@1:02:41](https://youtu.be/faY7kWHQuNE?t=3761) The 2011 documentary “Something Ventured” investigates the emergence of American venture capitalism. (<a href="https://youtu.be/ssR0sdKqNs4">Watch the trailer</a> ~2mins) (<a href="https://vimeo.com/105745528">Watch the documentary</a> ~85mins)</p><p><a href="https://en.wikipedia.org/wiki/Tandem_Computers">Tandem Computers</a></p>A 7 million dollar iceberg sitting in the datacenter, this Tandem. They were so reliant on it, they had another shrink wrapped just sitting on the datacenter floor, in the event that the first one ever went out.<a href="https://en.wikipedia.org/wiki/Jimmy_Treybig">Jimmy Treybig</a> is a super interesting character. Very iconoclastic engineer.I didn’t realize that Tandem <em>made</em> KP. If it weren’t for Tandem, <a href="https://en.wikipedia.org/wiki/Kleiner_Perkins">Kleiner Perkins</a> wouldn’t have risen as a VC firm. They went all-in on Tandem, and Tandem had an outsized result.<p>Our next Twitter space will be on Monday at 5p Pacific Time. Join us; we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 31 May 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/7332307d/ac91775f.mp3" length="63380670" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3961</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 31, 2021</b></p><p>Silicon Cowboys</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/sdtuck">Steve Tuck</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, <a href="https://twitter.com/DanCrossNYC">Dan Cross</a>, and others. <a href="https://www.youtube.com/watch?v=faY7kWHQuNE">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li><a href="#silicon-cowboys">Silicon Cowboys documentary</a></li>
<li><a href="#open-by-canion">Open by Rod Canion</a></li>
<li><a href="#portable-before-compaq">Portable before Compaq, Silent 700</a></li>
<li><a href="#osborne-effect">Osborne Effect</a></li>
<li><a href="#pbs-silicon-valley">PBS Silicon Valley documentary</a></li>
<li><a href="#ibms-role">IBM’s role in Compaq history</a></li>
<li><a href="#80s-ads">80’s Ads: John Cleese, Charlie Chaplin</a></li>
<li><a href="#compaq-and-iphone">Compaq and iPhone?</a></li>
<li><a href="#decline-and-acquisition">Decline and Acquisition</a></li>
<li><a href="#something-ventured">Something Ventured documentary</a></li>
<li>PRs welcome!</li>
</ul><p>[@1:25](https://youtu.be/faY7kWHQuNE?t=85) Bryan: Have you listened to the <a href="https://gimletmedia.com/shows/reply-all/z3hlwr">Reply All episode</a> “Is the Facebook Microphone On?”</p>The truth is actually scarier, Facebook doesn’t <em>need</em> the mic to be on … to read your mind.<p>Silicon Cowboys</p><p>[@2:46](https://youtu.be/faY7kWHQuNE?t=166) The 2016 documentary “Silicon Cowboys” follows the rise of the Compaq computer company. (<a href="https://www.imdb.com/title/tt4938484/">IMDb</a>) (<a href="https://youtu.be/wjE6X0HZClc">Watch the trailer</a> ~3mins)</p>I was trying to watch “Halt and Catch Fire” with my kid … and there’s a lot of spontaneous sex breaking out…Fastest to one billion in revenue… fastest to Fortune 500… a meteoric rise<p>Open by Canion</p><p>[@7:05](https://youtu.be/faY7kWHQuNE?t=425) The 2013 book <a href="https://www.google.com/books/edition/Open/CfStAAAAQBAJ">“Open”</a> by Rod Canion (cofounder and CEO of Compaq): “How Compaq Ended IBM’s PC Domination and Helped Invent Modern Computing.”</p><p>[@10:02](https://youtu.be/faY7kWHQuNE?t=602) Steve: Ben Rosen was the venture capitalist who wrote the first check to Compaq, really got them off the ground. On the board for 20 years.</p>Their timing was right. The way they did the company was right. And they executed really really well.To go from zero to 50 thousand units, of almost anything, in the time span they did, is incredible.<p>[@14:40](https://youtu.be/faY7kWHQuNE?t=880) Tom: The thing that really put them on the map was having the portable when nobody else did. And being 100% compatible.</p>Those portables were barely luggable, they were huge!Back in a time when there was no network. Being able to pick up your computer and take it to a place, <em>was</em> your network.<p>[@16:47](https://youtu.be/faY7kWHQuNE?t=1007) Steve: A big catalyst for their success was <em>the channel</em>. People were able to pick it up and go, they didn’t need special training.</p><p>[@19:25](https://youtu.be/faY7kWHQuNE?t=1165) Dad used to bring home the luggable so I could play Space Invaders, and he would work on spreadsheets.</p><p>Portable before Compaq</p><p>[@20:49](https://youtu.be/faY7kWHQuNE?t=1249) There were portable solutions before Compaq, but for timesharing.</p>You had the <a href="https://en.wikipedia.org/wiki/Silent_700">T.I. Silent 700</a>, in the 70’s, you could tote that home and plug it into the modem.<p>Osborne Effect</p><p>[@22:41](https://youtu.be/faY7kWHQuNE?t=1361) Tom: They killed their company with the famous <a href="https://en.wikipedia.org/wiki/Osborne_effect">Osborne Effect</a></p>Bryan and Steve (clearly excited): What was the Osborne Effect!?<br> Tom: Pre-announcing the next machine.Telling customers: man, if you love the Osborne 1, just wait till the Osborne 2… So they did!<p>[@24:40](https://youtu.be/faY7kWHQuNE?t=1480) Bryan: Something I found surprising about the history of Compaq was the different organizational approach that they had.</p>Early on, before even thinking about what to go do, they were talking about the kind of company they wanted to build.<p>PBS Silicon Valley</p><p>[@26:14](https://youtu.be/faY7kWHQuNE?t=1574) The 2013 PBS documentary “Silicon Valley” tells the story of Fairchild Semiconductor. (<a href="https://www.pbs.org/wgbh/americanexperience/features/silicon-chapter-one/">Watch chapter one</a> ~17mins)</p><p>[@28:14](https://youtu.be/faY7kWHQuNE?t=1694) We ask people, when they apply to Oxide, when they’ve been most unhappy in their careers. And it all boils down to people not feeling listened to, not having agency.</p><p>IBM’s role</p><p>[@29:41](https://youtu.be/faY7kWHQuNE?t=1781) How much of Compaq’s success is just pure mis-execution from IBM? IBM inadvertently creates this pseudo open architecture, and makes exactly the wrong move in trying to <a href="https://youtu.be/Zpnncakrelk?t=1041">reproprietarize</a> it with the <a href="https://en.wikipedia.org/wiki/IBM_PS/2">PS/2</a> and <a href="https://en.wikipedia.org/wiki/Micro_Channel_architecture">Micro Channel architecture</a>; which is an absolute disaster.</p>In many ways the story of Compaq is as much the story of the failed PS/2.It was such a mis-execution to do this analysis on the market and say: we need to grab our existing customers and lock them in, before they slip through our fingers, and in doing so, just hasten their departure.<br> And Compaq was in the right spot to pick up the pieces.<p><a href="https://en.wikipedia.org/wiki/Micro_Channel_architecture">MCA</a> (Micro Channel architecture), <a href="https://en.wikipedia.org/wiki/Industry_Standard_Architecture">ISA</a>, <a href="https://en.wikipedia.org/wiki/Extended_Industry_Standard_Architecture">EISA</a></p><p>[@33:22](https://youtu.be/faY7kWHQuNE?t=2002) We were ripping out a bunch of ISA and EISA drivers..</p><em>I</em> am a sacrificial sheep, I can’t possibly go. <em>You</em> are a sacrificial lamb.The machines themselves are anemic, if you want any functionality you go to a third party..<br> There were magazines filled with advice on which sound-generating card you should buy.<p><a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer_XT">IBM PC XT</a> – <a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">Hercules graphics card</a></p><p>[@37:00](https://youtu.be/faY7kWHQuNE?t=2220) Driver for <a href="https://en.wikipedia.org/wiki/Token_Ring">Token Ring</a>.</p><p><a href="https://en.wikipedia.org/wiki/Peripheral_Component_Interconnect">PCI</a> – <a href="https://en.wikipedia.org/wiki/SBus">SBus</a> – <a href="https://en.wikipedia.org/wiki/VMEbus">VME</a> – <a href="https://en.wikipedia.org/wiki/VESA_Local_Bus">VLB</a> – <a href="https://en.wikipedia.org/wiki/Accelerated_Graphics_Port">AGP</a></p><p>[@40:20](https://youtu.be/faY7kWHQuNE?t=2420) Speaking of Intel, a big part of the Compaq story is what happens with the <a href="https://en.wikipedia.org/wiki/I386">386</a>.</p>IBM clearly thought Intel would never give some clone manufacturer the first rights to the 386.They went from fast follower to innovator.<p><a href="https://en.wikipedia.org/wiki/OS/2">OS/2</a> supported both 16 bit (for the <a href="https://en.wikipedia.org/wiki/Intel_80286">286</a>) and 32 bit.</p><p>[@42:07](https://youtu.be/faY7kWHQuNE?t=2527) One of the headwinds working against IBM was that all the software companies wanted to see more competition in hardware vendors; they wanted to see the clones become real companies.</p>Certainly Microsoft aided the rise of Compaq, no question. Compaq turned Microsoft into a real believer.<p>80’s Ads</p><p>[@43:11](https://youtu.be/faY7kWHQuNE?t=2591) I loved the 80’s ads.</p><p>John Cleese: <a href="https://youtu.be/RlmzwZXa-Ww">Compaq Portable vs a Fish</a> ~2mins</p>Cleese: I suppose the fish could <em>give</em> you a mega-bite! (laughs hysterically)Cleese: The Compaq Portable 2 however can run all IBM’s most popular software, 30% faster than IBM can!<br> (dryly) HA HA HA<p>Bryan: Absolutely no joke, I knew Charlie Chaplin <em>first</em> through the IBM PC ads. I didn’t even know they were making a reference!</p><p>IBM Charlie Chaplin <a href="https://youtu.be/kQT_YCBb9ao">ads compilation</a> ~9mins. (Aside: these are new to me. For me it painted the computers as accessible/approachable, something anyone could do; even a clumsy Mr. Bean character)</p>You guys need to stop mocking the Chaplin ads. They were marketing gold and as a 5 year old watching bunny rabbit ear TV seeing those ads in the middle of Scooby Doo, I was begging my parents for an IBM PC!<p>[@47:10](https://youtu.be/faY7kWHQuNE?t=2830) Adam: My parents got a free <a href="https://en.wikipedia.org/wiki/Macintosh_Plus">Mac Plus</a> when they opened a bank account! I know it’s crazy anachronistic.</p>Adam: In ’86 we had a <a href="https://en.wikipedia.org/wiki/Commodore_64">Commodore 64</a> and then upgraded to a Mac Plus.<br> Bryan: That’s a big upgrade! Adam: It was incredible.<p><a href="https://en.wikipedia.org/wiki/MacPaint">MacPaint</a> – <a href="https://en.wikipedia.org/wiki/ImageWriter#ImageWriter_II">ImageWriter II</a> – <a href="https://en.wikipedia.org/wiki/Dot_matrix_printing">Dot matrix printing</a> – <a href="https://en.wikipedia.org/wiki/The_Print_Shop">The Print Shop</a></p>With the banner program, you could print “Happy Birthday”, and probably other messages, but it never came up..<p>Compaq and iPhone?</p><p>[@50:59](https://youtu.be/faY7kWHQuNE?t=3059) Book and documentary ask: What if Compaq had made the iPhone?</p>I think it cheapens the whole thing. No one should feel an obligation to claim their role in history by connecting themselves to the iPhone. The iPhone is not the pinnacle of human history.Just take your wins, and there are many of them. But, the time that they were dominant, <em>that’s</em> the story.<p>Decline and Acquisition</p><p>[@53:24](https://youtu.be/faY7kWHQuNE?t=3204) The movie ends when Canion is fired, by Rosen, which is pretty amazing.</p>To be fair, <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation">DEC</a> killed DEC.<p><a href="https://en.wikipedia.org/wiki/Tandem_Computers">Tandem Computers</a></p>I feel like the later history of Compaq is this sugar high of sales continuing to spike, but then ultimately it’s the ruin of the company. The company ceased to be an innovator.<p><a href="https://en.wikipedia.org/wiki/Compaq#Acquisition_by_Hewlett-Packard">Compaq is acquired by Hewlett-Packard</a></p>Compaq systems, at this point, were very expensive. And this was part of the controversy of Rod getting run out, was not wanting to go down market.<p>[@59:51](https://youtu.be/faY7kWHQuNE?t=3591) Speaking of HPE (Hewlett Packard Enterprise) and Compaq, they just relocated their headquarters to Huston.</p>I feel like HP hasn’t been a Silicon Valley company in a long long time.This was like the animals walking upright, where Compaq became a lot like IBM in a lot of their sales tactics.<p>Something Ventured</p><p>[@1:02:41](https://youtu.be/faY7kWHQuNE?t=3761) The 2011 documentary “Something Ventured” investigates the emergence of American venture capitalism. (<a href="https://youtu.be/ssR0sdKqNs4">Watch the trailer</a> ~2mins) (<a href="https://vimeo.com/105745528">Watch the documentary</a> ~85mins)</p><p><a href="https://en.wikipedia.org/wiki/Tandem_Computers">Tandem Computers</a></p>A 7 million dollar iceberg sitting in the datacenter, this Tandem. They were so reliant on it, they had another shrink wrapped just sitting on the datacenter floor, in the event that the first one ever went out.<a href="https://en.wikipedia.org/wiki/Jimmy_Treybig">Jimmy Treybig</a> is a super interesting character. Very iconoclastic engineer.I didn’t realize that Tandem <em>made</em> KP. If it weren’t for Tandem, <a href="https://en.wikipedia.org/wiki/Kleiner_Perkins">Kleiner Perkins</a> wouldn’t have risen as a VC firm. They went all-in on Tandem, and Tandem had an outsized result.<p>Our next Twitter space will be on Monday at 5p Pacific Time. Join us; we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>from /proc to proc_macro</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>4</itunes:episode>
      <podcast:episode>4</podcast:episode>
      <itunes:title>from /proc to proc_macro</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">12e2fb29-3299-454c-a081-036ac5e9c9b9</guid>
      <link>https://share.transistor.fm/s/16ca2dd5</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 24, 2021</b></p><p>from /proc to proc_macro</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/briancantrell">Brian Cantrell</a> (not making that one up!), <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/openlabbott">Laura Abbott</a>, and <a href="https://twitter.com/aka_pugs">Tom Lyon</a>. <a href="https://youtu.be/85eApYSj3ic">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>The <a href="https://twitter.com/adamleventhal">other Adam Leventhal</a> <a href="https://twitter.com/AdamLeventhal/status/392036112623206400">[1]</a> and the <a href="https://twitter.com/theahl">other AHL</a> <a href="https://twitter.com/TheAHL/status/504697752438456320">[2]</a>
</li>
<li>[@3:16](https://youtu.be/85eApYSj3ic?t=196) Hockey <ul>
<li><a href="https://en.wikipedia.org/wiki/Calder_Cup">Calder Cup</a></li>
<li><a href="https://en.wikipedia.org/wiki/Charlotte_Checkers">Charlotte Checkers</a></li>
<li><a href="https://en.wikipedia.org/wiki/Grand_Rapids_Griffins">Grand Rapids Griffins</a></li>
</ul>
</li>
<li>[@4:02](https://youtu.be/85eApYSj3ic?t=242) <a href="https://www.usenix.org/memoriam-roger-faulkner">Roger Faulkner</a> invented the /proc filesystem</li>
<li>Gerald Ford <a href="https://www.fordlibrarymuseum.gov/">Presidential Library and Museum</a><ul><li>Gerald Ford <a href="https://en.wikipedia.org/wiki/Inauguration_of_Gerald_Ford#Remarks_upon_swearing-in">inaugural address</a> (including its most famous line, “our long national nightmare is over”) &gt; I went in a Gerald Ford cynic, and came out a Gerald Ford super-fan</li></ul>
</li>
<li>Roger’s “The Process File System and Process Model in UNIX System V” <a href="https://www.usenix.org/sites/default/files/usenix_winter91_faulkner.pdf">paper</a>
</li>
<li>[@7:43](https://youtu.be/85eApYSj3ic?t=463) “I am on a mission from God to make programs debuggable” <ul>
<li>AVL trees and linked lists &gt; Performance is the root of all evil.</li>
<li><a href="https://docs.oracle.com/cd/E19504-01/802-5880/6i9k05dga/index.html">Trace Normal Form</a></li>
<li>
<a href="http://dtrace.org/blogs/eschrock/2004/07/17/watchpoints-features-in-solaris-10/">Watchpoints</a>, <a href="https://github.com/illumos/illumos-gate/tree/master/usr/src/lib/watchmalloc">libwatchmalloc</a> &gt; Watchpoints are magical, when they work. It feels like a superpower.</li>
</ul>
</li>
<li>[@11:37](https://youtu.be/85eApYSj3ic?t=697) &gt; Roger made this incredible contribution about debugging infrastructure &gt; being an attribute of a production system. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Strace">strace</a>, <a href="https://illumos.org/man/truss">truss</a>
</li>
<li>BONUS: 1986 USENIX: <a href="https://drive.google.com/file/d/1-w5GH2Vr0VtRd-4DS0082H2YTby4M9vL/view?usp=sharing">A System Call Tracer in UNIX</a>
</li>
<li>The ptrace(2) <a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">system call</a>
</li>
<li>ptrace’s overloading of the wait(2) <a href="https://man7.org/linux/man-pages/man2/waitpid.2.html">system call</a>
</li>
<li>The German word that we’re seeking: Misappropriation-of-mechanism-in-a-seemingly-clever way-but-is-ultimately-a-disaster &gt; ptrace is the x86 of system calls</li>
</ul>
</li>
<li>[@16:45](https://youtu.be/85eApYSj3ic?t=1005) A long-coming apology.. <ul>
<li>Linux branded zones (<a href="https://illumos.org/docs/about/features/#lx-linux-emulation">LX</a>)</li>
<li>“Method and system for child-parent mechanism emulation via a general interface” <a href="https://patents.google.com/patent/US20080133214">patent</a> &gt; You have to be bug-for-bug compatible.</li>
<li>LX vfork/signal <a href="https://smartos.org/bugview/OS-7121">bug that broke golang</a> &gt; vfork: unsafe at any speed, toxic in any quantity</li>
</ul>
</li>
<li>[@20:16](https://youtu.be/85eApYSj3ic?t=1216) Upstart’s <a href="https://blueprints.launchpad.net/ubuntu/+spec/foundations-q-upstart-overcome-ptrace-limitations">problematic use of ptrace(2)</a><ul>
<li>
<a href="https://twitter.com/bcantrill/status/566053940194594816">Celebrating</a> Joshua getting ptrace correct for LX branded zones</li>
<li><a href="https://smartos.org/bugview/OS-4215">Stack shenanigans breaking LX</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Red_zone_(computing)">Red zone</a>, segmented stacks</li>
</ul>
</li>
<li>[@24:39](https://youtu.be/85eApYSj3ic?t=1479) The application was fishing in its own stack.. <ul><li>
<a href="https://en.wikipedia.org/wiki/Clozure_CL">Clozure Common Lisp</a>, <a href="https://man7.org/linux/man-pages/man2/getcontext.2.html">mcontext</a> &gt; These kinds of lies just don’t nest. Magic does not layer well.</li></ul>
</li>
<li>[@28:56](https://youtu.be/85eApYSj3ic?t=1736) Windows Subsystem for Linux <a href="https://docs.microsoft.com/en-us/windows/wsl/about">WSL</a>
</li>
<li>illumos on an <a href="https://en.wikipedia.org/wiki/Apple_M1">M1</a>? <ul>
<li>
<a href="https://en.wikipedia.org/wiki/QEMU">QEMU</a>, <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M">ARM Cortex-M</a> &gt; It’s hard to get the machine really properly emulated</li>
<li>AWS <a href="https://techcrunch.com/2020/11/30/aws-brings-the-mac-mini-to-its-cloud/">Mac minis</a>
</li>
</ul>
</li>
<li>[@33:55](https://youtu.be/85eApYSj3ic?t=2035) It’s kind of amazing that Apple has never had much interest in the server space. <ul>
<li><a href="https://en.wikipedia.org/wiki/Xserve">Apple Xserve</a></li>
<li><a href="https://en.wikipedia.org/wiki/Common_Hardware_Reference_Platform">CHRP</a></li>
</ul>
</li>
<li>The story of the stolen laptop. Little endian PowerPC <ul><li><a href="https://en.wikipedia.org/wiki/OpenPOWER_Foundation">OpenPOWER</a></li></ul>
</li>
<li>[@37:35](https://youtu.be/85eApYSj3ic?t=2255) <a href="https://en.wikipedia.org/wiki/Language_H">Language H</a>! <ul>
<li><a href="https://en.wikipedia.org/wiki/NCR_Corporation">NCR</a></li>
<li>Language H: An informal overview ( <a href="https://www.computerconservationsociety.org/resurrection/res81.htm#d">part 1</a>, <a href="https://www.computerconservationsociety.org/resurrection/res82.htm#d">part 2</a>)</li>
</ul>
</li>
<li>The (other) <a href="https://dlang.org/">D language</a>
</li>
<li>[@39:12](https://youtu.be/85eApYSj3ic?t=2352) <ul>
<li><a href="https://arxiv.org/html/cs/0309027">AADEBUG’03</a></li>
<li><a href="https://arxiv.org/abs/cs/0309037">Postmortem Object Type Identification</a></li>
</ul>
</li>
<li>[@41:31](https://youtu.be/85eApYSj3ic?t=2491) It all comes back to <a href="https://en.wikipedia.org/wiki/AWK#History">awk</a><ul>
<li>Bourne shell <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh/main.c">source code</a> / <a href="https://en.wikipedia.org/wiki/ALGOL_68">Algol68</a> #defines</li>
<li><a href="https://en.wikipedia.org/wiki/Thompson_shell">Thompson shell</a></li>
</ul>
</li>
<li>Bryan’s 2007 Dtrace review, Google <a href="https://youtu.be/6chLw2aodYQ">TechTalk</a> ~80mins</li>
<li>[@48:07](https://youtu.be/85eApYSj3ic?t=2887) Dtrace language inspiration <ul>
<li>Dtrace <a href="http://dtrace.org/blogs/ahl/2007/08/02/dtrace-knockoffs/">clones</a> &gt; It was all based on us exploring some phenomenon, &gt; something being kind of a pain in the ass or impossible, &gt; and inventing something that was easy to use.</li>
<li>Architectural review board: “This reminds us a lot of awk..” &gt; What’s the most powerful one-liner you can crank out with awk?</li>
<li>
<a href="https://en.wikipedia.org/wiki/CUDA">CUDA</a>, <a href="https://en.wikipedia.org/wiki/Bluespec">Bluespec</a>
</li>
</ul>
</li>
<li>[@52:35](https://youtu.be/85eApYSj3ic?t=3155) Rust <a href="https://doc.rust-lang.org/book/ch19-06-macros.html#attribute-like-macros">proc_macros</a><ul>
<li>C <a href="https://en.wikipedia.org/wiki/C_preprocessor">preprocessor</a>
</li>
<li>Rust <a href="https://doc.rust-lang.org/beta/rust-by-example/macros.html">macro_rules!</a> &gt; Reading about it for the first time, it felt like the forbidden fruit</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Tcl">Tcl</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/INTERCAL">INTERCAL</a> which might have been co-invented by Tom’s brother?!</li>
<li><a href="https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs">Plan 9</a></li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 31st, 2021 at 5p Pacific. This time for real: we’ll be kicking off the discussion with <a href="https://www.imdb.com/title/tt4938484/">Silicon Cowboys</a> (the real-life <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a>) on the rise of Compaq – and their <a href="https://twitter.com/sdtuck/status/1393453302675771392">aspiration to be a different kind of company</a>. Join us; we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 24, 2021</b></p><p>from /proc to proc_macro</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/briancantrell">Brian Cantrell</a> (not making that one up!), <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/openlabbott">Laura Abbott</a>, and <a href="https://twitter.com/aka_pugs">Tom Lyon</a>. <a href="https://youtu.be/85eApYSj3ic">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>The <a href="https://twitter.com/adamleventhal">other Adam Leventhal</a> <a href="https://twitter.com/AdamLeventhal/status/392036112623206400">[1]</a> and the <a href="https://twitter.com/theahl">other AHL</a> <a href="https://twitter.com/TheAHL/status/504697752438456320">[2]</a>
</li>
<li>[@3:16](https://youtu.be/85eApYSj3ic?t=196) Hockey <ul>
<li><a href="https://en.wikipedia.org/wiki/Calder_Cup">Calder Cup</a></li>
<li><a href="https://en.wikipedia.org/wiki/Charlotte_Checkers">Charlotte Checkers</a></li>
<li><a href="https://en.wikipedia.org/wiki/Grand_Rapids_Griffins">Grand Rapids Griffins</a></li>
</ul>
</li>
<li>[@4:02](https://youtu.be/85eApYSj3ic?t=242) <a href="https://www.usenix.org/memoriam-roger-faulkner">Roger Faulkner</a> invented the /proc filesystem</li>
<li>Gerald Ford <a href="https://www.fordlibrarymuseum.gov/">Presidential Library and Museum</a><ul><li>Gerald Ford <a href="https://en.wikipedia.org/wiki/Inauguration_of_Gerald_Ford#Remarks_upon_swearing-in">inaugural address</a> (including its most famous line, “our long national nightmare is over”) &gt; I went in a Gerald Ford cynic, and came out a Gerald Ford super-fan</li></ul>
</li>
<li>Roger’s “The Process File System and Process Model in UNIX System V” <a href="https://www.usenix.org/sites/default/files/usenix_winter91_faulkner.pdf">paper</a>
</li>
<li>[@7:43](https://youtu.be/85eApYSj3ic?t=463) “I am on a mission from God to make programs debuggable” <ul>
<li>AVL trees and linked lists &gt; Performance is the root of all evil.</li>
<li><a href="https://docs.oracle.com/cd/E19504-01/802-5880/6i9k05dga/index.html">Trace Normal Form</a></li>
<li>
<a href="http://dtrace.org/blogs/eschrock/2004/07/17/watchpoints-features-in-solaris-10/">Watchpoints</a>, <a href="https://github.com/illumos/illumos-gate/tree/master/usr/src/lib/watchmalloc">libwatchmalloc</a> &gt; Watchpoints are magical, when they work. It feels like a superpower.</li>
</ul>
</li>
<li>[@11:37](https://youtu.be/85eApYSj3ic?t=697) &gt; Roger made this incredible contribution about debugging infrastructure &gt; being an attribute of a production system. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Strace">strace</a>, <a href="https://illumos.org/man/truss">truss</a>
</li>
<li>BONUS: 1986 USENIX: <a href="https://drive.google.com/file/d/1-w5GH2Vr0VtRd-4DS0082H2YTby4M9vL/view?usp=sharing">A System Call Tracer in UNIX</a>
</li>
<li>The ptrace(2) <a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">system call</a>
</li>
<li>ptrace’s overloading of the wait(2) <a href="https://man7.org/linux/man-pages/man2/waitpid.2.html">system call</a>
</li>
<li>The German word that we’re seeking: Misappropriation-of-mechanism-in-a-seemingly-clever way-but-is-ultimately-a-disaster &gt; ptrace is the x86 of system calls</li>
</ul>
</li>
<li>[@16:45](https://youtu.be/85eApYSj3ic?t=1005) A long-coming apology.. <ul>
<li>Linux branded zones (<a href="https://illumos.org/docs/about/features/#lx-linux-emulation">LX</a>)</li>
<li>“Method and system for child-parent mechanism emulation via a general interface” <a href="https://patents.google.com/patent/US20080133214">patent</a> &gt; You have to be bug-for-bug compatible.</li>
<li>LX vfork/signal <a href="https://smartos.org/bugview/OS-7121">bug that broke golang</a> &gt; vfork: unsafe at any speed, toxic in any quantity</li>
</ul>
</li>
<li>[@20:16](https://youtu.be/85eApYSj3ic?t=1216) Upstart’s <a href="https://blueprints.launchpad.net/ubuntu/+spec/foundations-q-upstart-overcome-ptrace-limitations">problematic use of ptrace(2)</a><ul>
<li>
<a href="https://twitter.com/bcantrill/status/566053940194594816">Celebrating</a> Joshua getting ptrace correct for LX branded zones</li>
<li><a href="https://smartos.org/bugview/OS-4215">Stack shenanigans breaking LX</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Red_zone_(computing)">Red zone</a>, segmented stacks</li>
</ul>
</li>
<li>[@24:39](https://youtu.be/85eApYSj3ic?t=1479) The application was fishing in its own stack.. <ul><li>
<a href="https://en.wikipedia.org/wiki/Clozure_CL">Clozure Common Lisp</a>, <a href="https://man7.org/linux/man-pages/man2/getcontext.2.html">mcontext</a> &gt; These kinds of lies just don’t nest. Magic does not layer well.</li></ul>
</li>
<li>[@28:56](https://youtu.be/85eApYSj3ic?t=1736) Windows Subsystem for Linux <a href="https://docs.microsoft.com/en-us/windows/wsl/about">WSL</a>
</li>
<li>illumos on an <a href="https://en.wikipedia.org/wiki/Apple_M1">M1</a>? <ul>
<li>
<a href="https://en.wikipedia.org/wiki/QEMU">QEMU</a>, <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M">ARM Cortex-M</a> &gt; It’s hard to get the machine really properly emulated</li>
<li>AWS <a href="https://techcrunch.com/2020/11/30/aws-brings-the-mac-mini-to-its-cloud/">Mac minis</a>
</li>
</ul>
</li>
<li>[@33:55](https://youtu.be/85eApYSj3ic?t=2035) It’s kind of amazing that Apple has never had much interest in the server space. <ul>
<li><a href="https://en.wikipedia.org/wiki/Xserve">Apple Xserve</a></li>
<li><a href="https://en.wikipedia.org/wiki/Common_Hardware_Reference_Platform">CHRP</a></li>
</ul>
</li>
<li>The story of the stolen laptop. Little endian PowerPC <ul><li><a href="https://en.wikipedia.org/wiki/OpenPOWER_Foundation">OpenPOWER</a></li></ul>
</li>
<li>[@37:35](https://youtu.be/85eApYSj3ic?t=2255) <a href="https://en.wikipedia.org/wiki/Language_H">Language H</a>! <ul>
<li><a href="https://en.wikipedia.org/wiki/NCR_Corporation">NCR</a></li>
<li>Language H: An informal overview ( <a href="https://www.computerconservationsociety.org/resurrection/res81.htm#d">part 1</a>, <a href="https://www.computerconservationsociety.org/resurrection/res82.htm#d">part 2</a>)</li>
</ul>
</li>
<li>The (other) <a href="https://dlang.org/">D language</a>
</li>
<li>[@39:12](https://youtu.be/85eApYSj3ic?t=2352) <ul>
<li><a href="https://arxiv.org/html/cs/0309027">AADEBUG’03</a></li>
<li><a href="https://arxiv.org/abs/cs/0309037">Postmortem Object Type Identification</a></li>
</ul>
</li>
<li>[@41:31](https://youtu.be/85eApYSj3ic?t=2491) It all comes back to <a href="https://en.wikipedia.org/wiki/AWK#History">awk</a><ul>
<li>Bourne shell <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh/main.c">source code</a> / <a href="https://en.wikipedia.org/wiki/ALGOL_68">Algol68</a> #defines</li>
<li><a href="https://en.wikipedia.org/wiki/Thompson_shell">Thompson shell</a></li>
</ul>
</li>
<li>Bryan’s 2007 Dtrace review, Google <a href="https://youtu.be/6chLw2aodYQ">TechTalk</a> ~80mins</li>
<li>[@48:07](https://youtu.be/85eApYSj3ic?t=2887) Dtrace language inspiration <ul>
<li>Dtrace <a href="http://dtrace.org/blogs/ahl/2007/08/02/dtrace-knockoffs/">clones</a> &gt; It was all based on us exploring some phenomenon, &gt; something being kind of a pain in the ass or impossible, &gt; and inventing something that was easy to use.</li>
<li>Architectural review board: “This reminds us a lot of awk..” &gt; What’s the most powerful one-liner you can crank out with awk?</li>
<li>
<a href="https://en.wikipedia.org/wiki/CUDA">CUDA</a>, <a href="https://en.wikipedia.org/wiki/Bluespec">Bluespec</a>
</li>
</ul>
</li>
<li>[@52:35](https://youtu.be/85eApYSj3ic?t=3155) Rust <a href="https://doc.rust-lang.org/book/ch19-06-macros.html#attribute-like-macros">proc_macros</a><ul>
<li>C <a href="https://en.wikipedia.org/wiki/C_preprocessor">preprocessor</a>
</li>
<li>Rust <a href="https://doc.rust-lang.org/beta/rust-by-example/macros.html">macro_rules!</a> &gt; Reading about it for the first time, it felt like the forbidden fruit</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Tcl">Tcl</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/INTERCAL">INTERCAL</a> which might have been co-invented by Tom’s brother?!</li>
<li><a href="https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs">Plan 9</a></li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 31st, 2021 at 5p Pacific. This time for real: we’ll be kicking off the discussion with <a href="https://www.imdb.com/title/tt4938484/">Silicon Cowboys</a> (the real-life <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a>) on the rise of Compaq – and their <a href="https://twitter.com/sdtuck/status/1393453302675771392">aspiration to be a different kind of company</a>. Join us; we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 24 May 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/16ca2dd5/746d1889.mp3" length="63213852" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>3950</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 24, 2021</b></p><p>from /proc to proc_macro</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/briancantrell">Brian Cantrell</a> (not making that one up!), <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/openlabbott">Laura Abbott</a>, and <a href="https://twitter.com/aka_pugs">Tom Lyon</a>. <a href="https://youtu.be/85eApYSj3ic">The recording is here.</a></p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>The <a href="https://twitter.com/adamleventhal">other Adam Leventhal</a> <a href="https://twitter.com/AdamLeventhal/status/392036112623206400">[1]</a> and the <a href="https://twitter.com/theahl">other AHL</a> <a href="https://twitter.com/TheAHL/status/504697752438456320">[2]</a>
</li>
<li>[@3:16](https://youtu.be/85eApYSj3ic?t=196) Hockey <ul>
<li><a href="https://en.wikipedia.org/wiki/Calder_Cup">Calder Cup</a></li>
<li><a href="https://en.wikipedia.org/wiki/Charlotte_Checkers">Charlotte Checkers</a></li>
<li><a href="https://en.wikipedia.org/wiki/Grand_Rapids_Griffins">Grand Rapids Griffins</a></li>
</ul>
</li>
<li>[@4:02](https://youtu.be/85eApYSj3ic?t=242) <a href="https://www.usenix.org/memoriam-roger-faulkner">Roger Faulkner</a> invented the /proc filesystem</li>
<li>Gerald Ford <a href="https://www.fordlibrarymuseum.gov/">Presidential Library and Museum</a><ul><li>Gerald Ford <a href="https://en.wikipedia.org/wiki/Inauguration_of_Gerald_Ford#Remarks_upon_swearing-in">inaugural address</a> (including its most famous line, “our long national nightmare is over”) &gt; I went in a Gerald Ford cynic, and came out a Gerald Ford super-fan</li></ul>
</li>
<li>Roger’s “The Process File System and Process Model in UNIX System V” <a href="https://www.usenix.org/sites/default/files/usenix_winter91_faulkner.pdf">paper</a>
</li>
<li>[@7:43](https://youtu.be/85eApYSj3ic?t=463) “I am on a mission from God to make programs debuggable” <ul>
<li>AVL trees and linked lists &gt; Performance is the root of all evil.</li>
<li><a href="https://docs.oracle.com/cd/E19504-01/802-5880/6i9k05dga/index.html">Trace Normal Form</a></li>
<li>
<a href="http://dtrace.org/blogs/eschrock/2004/07/17/watchpoints-features-in-solaris-10/">Watchpoints</a>, <a href="https://github.com/illumos/illumos-gate/tree/master/usr/src/lib/watchmalloc">libwatchmalloc</a> &gt; Watchpoints are magical, when they work. It feels like a superpower.</li>
</ul>
</li>
<li>[@11:37](https://youtu.be/85eApYSj3ic?t=697) &gt; Roger made this incredible contribution about debugging infrastructure &gt; being an attribute of a production system. <ul>
<li>
<a href="https://en.wikipedia.org/wiki/Strace">strace</a>, <a href="https://illumos.org/man/truss">truss</a>
</li>
<li>BONUS: 1986 USENIX: <a href="https://drive.google.com/file/d/1-w5GH2Vr0VtRd-4DS0082H2YTby4M9vL/view?usp=sharing">A System Call Tracer in UNIX</a>
</li>
<li>The ptrace(2) <a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">system call</a>
</li>
<li>ptrace’s overloading of the wait(2) <a href="https://man7.org/linux/man-pages/man2/waitpid.2.html">system call</a>
</li>
<li>The German word that we’re seeking: Misappropriation-of-mechanism-in-a-seemingly-clever way-but-is-ultimately-a-disaster &gt; ptrace is the x86 of system calls</li>
</ul>
</li>
<li>[@16:45](https://youtu.be/85eApYSj3ic?t=1005) A long-coming apology.. <ul>
<li>Linux branded zones (<a href="https://illumos.org/docs/about/features/#lx-linux-emulation">LX</a>)</li>
<li>“Method and system for child-parent mechanism emulation via a general interface” <a href="https://patents.google.com/patent/US20080133214">patent</a> &gt; You have to be bug-for-bug compatible.</li>
<li>LX vfork/signal <a href="https://smartos.org/bugview/OS-7121">bug that broke golang</a> &gt; vfork: unsafe at any speed, toxic in any quantity</li>
</ul>
</li>
<li>[@20:16](https://youtu.be/85eApYSj3ic?t=1216) Upstart’s <a href="https://blueprints.launchpad.net/ubuntu/+spec/foundations-q-upstart-overcome-ptrace-limitations">problematic use of ptrace(2)</a><ul>
<li>
<a href="https://twitter.com/bcantrill/status/566053940194594816">Celebrating</a> Joshua getting ptrace correct for LX branded zones</li>
<li><a href="https://smartos.org/bugview/OS-4215">Stack shenanigans breaking LX</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Red_zone_(computing)">Red zone</a>, segmented stacks</li>
</ul>
</li>
<li>[@24:39](https://youtu.be/85eApYSj3ic?t=1479) The application was fishing in its own stack.. <ul><li>
<a href="https://en.wikipedia.org/wiki/Clozure_CL">Clozure Common Lisp</a>, <a href="https://man7.org/linux/man-pages/man2/getcontext.2.html">mcontext</a> &gt; These kinds of lies just don’t nest. Magic does not layer well.</li></ul>
</li>
<li>[@28:56](https://youtu.be/85eApYSj3ic?t=1736) Windows Subsystem for Linux <a href="https://docs.microsoft.com/en-us/windows/wsl/about">WSL</a>
</li>
<li>illumos on an <a href="https://en.wikipedia.org/wiki/Apple_M1">M1</a>? <ul>
<li>
<a href="https://en.wikipedia.org/wiki/QEMU">QEMU</a>, <a href="https://en.wikipedia.org/wiki/ARM_Cortex-M">ARM Cortex-M</a> &gt; It’s hard to get the machine really properly emulated</li>
<li>AWS <a href="https://techcrunch.com/2020/11/30/aws-brings-the-mac-mini-to-its-cloud/">Mac minis</a>
</li>
</ul>
</li>
<li>[@33:55](https://youtu.be/85eApYSj3ic?t=2035) It’s kind of amazing that Apple has never had much interest in the server space. <ul>
<li><a href="https://en.wikipedia.org/wiki/Xserve">Apple Xserve</a></li>
<li><a href="https://en.wikipedia.org/wiki/Common_Hardware_Reference_Platform">CHRP</a></li>
</ul>
</li>
<li>The story of the stolen laptop. Little endian PowerPC <ul><li><a href="https://en.wikipedia.org/wiki/OpenPOWER_Foundation">OpenPOWER</a></li></ul>
</li>
<li>[@37:35](https://youtu.be/85eApYSj3ic?t=2255) <a href="https://en.wikipedia.org/wiki/Language_H">Language H</a>! <ul>
<li><a href="https://en.wikipedia.org/wiki/NCR_Corporation">NCR</a></li>
<li>Language H: An informal overview ( <a href="https://www.computerconservationsociety.org/resurrection/res81.htm#d">part 1</a>, <a href="https://www.computerconservationsociety.org/resurrection/res82.htm#d">part 2</a>)</li>
</ul>
</li>
<li>The (other) <a href="https://dlang.org/">D language</a>
</li>
<li>[@39:12](https://youtu.be/85eApYSj3ic?t=2352) <ul>
<li><a href="https://arxiv.org/html/cs/0309027">AADEBUG’03</a></li>
<li><a href="https://arxiv.org/abs/cs/0309037">Postmortem Object Type Identification</a></li>
</ul>
</li>
<li>[@41:31](https://youtu.be/85eApYSj3ic?t=2491) It all comes back to <a href="https://en.wikipedia.org/wiki/AWK#History">awk</a><ul>
<li>Bourne shell <a href="https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh/main.c">source code</a> / <a href="https://en.wikipedia.org/wiki/ALGOL_68">Algol68</a> #defines</li>
<li><a href="https://en.wikipedia.org/wiki/Thompson_shell">Thompson shell</a></li>
</ul>
</li>
<li>Bryan’s 2007 Dtrace review, Google <a href="https://youtu.be/6chLw2aodYQ">TechTalk</a> ~80mins</li>
<li>[@48:07](https://youtu.be/85eApYSj3ic?t=2887) Dtrace language inspiration <ul>
<li>Dtrace <a href="http://dtrace.org/blogs/ahl/2007/08/02/dtrace-knockoffs/">clones</a> &gt; It was all based on us exploring some phenomenon, &gt; something being kind of a pain in the ass or impossible, &gt; and inventing something that was easy to use.</li>
<li>Architectural review board: “This reminds us a lot of awk..” &gt; What’s the most powerful one-liner you can crank out with awk?</li>
<li>
<a href="https://en.wikipedia.org/wiki/CUDA">CUDA</a>, <a href="https://en.wikipedia.org/wiki/Bluespec">Bluespec</a>
</li>
</ul>
</li>
<li>[@52:35](https://youtu.be/85eApYSj3ic?t=3155) Rust <a href="https://doc.rust-lang.org/book/ch19-06-macros.html#attribute-like-macros">proc_macros</a><ul>
<li>C <a href="https://en.wikipedia.org/wiki/C_preprocessor">preprocessor</a>
</li>
<li>Rust <a href="https://doc.rust-lang.org/beta/rust-by-example/macros.html">macro_rules!</a> &gt; Reading about it for the first time, it felt like the forbidden fruit</li>
</ul>
</li>
<li><a href="https://en.wikipedia.org/wiki/Tcl">Tcl</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/INTERCAL">INTERCAL</a> which might have been co-invented by Tom’s brother?!</li>
<li><a href="https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs">Plan 9</a></li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 31st, 2021 at 5p Pacific. This time for real: we’ll be kicking off the discussion with <a href="https://www.imdb.com/title/tt4938484/">Silicon Cowboys</a> (the real-life <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a>) on the rise of Compaq – and their <a href="https://twitter.com/sdtuck/status/1393453302675771392">aspiration to be a different kind of company</a>. Join us; we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>golang asserts and the PLATO terminal</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>3</itunes:episode>
      <podcast:episode>3</podcast:episode>
      <itunes:title>golang asserts and the PLATO terminal</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">48df9bb8-457a-4b90-8e31-c58da9966c9b</guid>
      <link>https://share.transistor.fm/s/cfd2df25</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 17, 2021</b></p><p>golang asserts and the PLATO terminal</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/adamhjk/">Adam Jacob</a>, <a href="https://twitter.com/mranney">Matt Ranney</a>, <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, and <a href="https://twitter.com/c50bae86ae1b461">Bob Mader</a> (and thanks to <a href="https://twitter.com/morrislaw93?lang=en">Jeremy Morris</a> for <a href="https://twitter.com/MorrisLaw93/status/1394497085592981510">catching Bob’s profile!</a>).</p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>We recorded the space, but we had some challenges, and we lost the recording when the first Twitter Space died at around 5:30p. We recorded the second half though; <a href="https://youtu.be/8tJEwCvZWsg">the recording is here</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Khan Academy <a href="https://blog.khanacademy.org/half-a-million-lines-of-go/">blog entry</a> on Go</li>
<li>Adam’s blog entry, <a href="http://dtrace.org/blogs/ahl/2016/08/02/i-love-go-i-hate-go/">I Love Go, I Hate Go</a> &gt; I found novelty in the strictures, but objected to some of the specifics</li>
<li>[@2:40](https://youtu.be/8tJEwCvZWsg?t=160) Go’s assertion <a href="https://golang.org/doc/faq#assertions">assertion</a>
</li>
<li><a href="https://elm-lang.org/">The Elm Language</a></li>
<li>[@4:40](https://youtu.be/8tJEwCvZWsg?t=280) Lionizing Unix &gt; 7th edition is amazing, incredible, a break through.. &gt; and it’s also kind of a shitty engineering artifact that needed a lot of work.</li>
<li>[@6:32](https://youtu.be/8tJEwCvZWsg?t=392) <a href="https://en.wikipedia.org/wiki/Core_dump">Core dumps</a>
</li>
<li>[@7:03](https://youtu.be/8tJEwCvZWsg?t=423) Impromptu PSA: <ul>
<li>Happy 81st Birthday <a href="https://en.wikipedia.org/wiki/Alan_Kay">Alan Kay</a>!</li>
<li>Alan Kay tribute <a href="https://www.youtube.com/watch?v=AnrlSqtpOkw">video to Ted Nelson</a>, including the story of how Alan Kay and his wife – <a href="https://en.wikipedia.org/wiki/Bonnie_MacBird">Bonnie MacBird</a> – were brought together by <a href="https://en.wikipedia.org/wiki/Ted_Nelson">Ted Nelson</a>, and how PARC inspired her to write <a href="https://en.wikipedia.org/wiki/Tron">TRON</a> (!)</li>
<li>
<a href="https://en.wikipedia.org/wiki/Bedknobs_and_Broomsticks">Bedknobs and Broomsticks</a> (WAT)</li>
</ul>
</li>
<li>[@13:18](https://youtu.be/8tJEwCvZWsg?t=798) Brian Dear’s <a href="https://www.amazon.com/Friendly-Orange-Glow-Untold-Cyberculture/dp/1101871555">The Friendly Orange Glow</a><ul>
<li>The <a href="https://en.wikipedia.org/wiki/PLATO_(computer_system)">PLATO Terminal</a>
</li>
<li>Control Data Corp (<a href="https://en.wikipedia.org/wiki/Control_Data_Corporation">CDC</a>)</li>
<li>Dr. David Gräper’s <a href="http://www.grapenotes.com">Grapenotes</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Empire_(PLATO_video_game)">Empire game</a></li>
</ul>
</li>
<li>[@20:05](https://youtu.be/8tJEwCvZWsg?t=1205) Write your own lessons in <a href="https://en.wikipedia.org/wiki/TUTOR">TUTOR</a><ul>
<li><a href="https://en.wikipedia.org/wiki/Dartmouth_BASIC">Dartmouth BASIC</a></li>
<li><a href="https://en.wikipedia.org/wiki/SNOBOL">SNOBOL</a></li>
</ul>
</li>
<li>[@23:12](https://youtu.be/8tJEwCvZWsg?t=1392) Dr. David Gräper’s <a href="http://www.grapenotes.com">Grapenotes</a> started in 1977</li>
<li>Xerox <a href="https://en.wikipedia.org/wiki/Xerox_Alto">Alto</a> computer</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 24th, 2021 at 5p Pacific! We’ll be kicking off the discussion with <a href="https://www.imdb.com/title/tt4938484/">Silicon Cowboys</a> (aka the real and sexless <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a>) on the rise of Compaq – and their <a href="https://twitter.com/sdtuck/status/1393453302675771392">aspiration to be a different kind of company</a>. Join us; we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 17, 2021</b></p><p>golang asserts and the PLATO terminal</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/adamhjk/">Adam Jacob</a>, <a href="https://twitter.com/mranney">Matt Ranney</a>, <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, and <a href="https://twitter.com/c50bae86ae1b461">Bob Mader</a> (and thanks to <a href="https://twitter.com/morrislaw93?lang=en">Jeremy Morris</a> for <a href="https://twitter.com/MorrisLaw93/status/1394497085592981510">catching Bob’s profile!</a>).</p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>We recorded the space, but we had some challenges, and we lost the recording when the first Twitter Space died at around 5:30p. We recorded the second half though; <a href="https://youtu.be/8tJEwCvZWsg">the recording is here</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Khan Academy <a href="https://blog.khanacademy.org/half-a-million-lines-of-go/">blog entry</a> on Go</li>
<li>Adam’s blog entry, <a href="http://dtrace.org/blogs/ahl/2016/08/02/i-love-go-i-hate-go/">I Love Go, I Hate Go</a> &gt; I found novelty in the strictures, but objected to some of the specifics</li>
<li>[@2:40](https://youtu.be/8tJEwCvZWsg?t=160) Go’s assertion <a href="https://golang.org/doc/faq#assertions">assertion</a>
</li>
<li><a href="https://elm-lang.org/">The Elm Language</a></li>
<li>[@4:40](https://youtu.be/8tJEwCvZWsg?t=280) Lionizing Unix &gt; 7th edition is amazing, incredible, a break through.. &gt; and it’s also kind of a shitty engineering artifact that needed a lot of work.</li>
<li>[@6:32](https://youtu.be/8tJEwCvZWsg?t=392) <a href="https://en.wikipedia.org/wiki/Core_dump">Core dumps</a>
</li>
<li>[@7:03](https://youtu.be/8tJEwCvZWsg?t=423) Impromptu PSA: <ul>
<li>Happy 81st Birthday <a href="https://en.wikipedia.org/wiki/Alan_Kay">Alan Kay</a>!</li>
<li>Alan Kay tribute <a href="https://www.youtube.com/watch?v=AnrlSqtpOkw">video to Ted Nelson</a>, including the story of how Alan Kay and his wife – <a href="https://en.wikipedia.org/wiki/Bonnie_MacBird">Bonnie MacBird</a> – were brought together by <a href="https://en.wikipedia.org/wiki/Ted_Nelson">Ted Nelson</a>, and how PARC inspired her to write <a href="https://en.wikipedia.org/wiki/Tron">TRON</a> (!)</li>
<li>
<a href="https://en.wikipedia.org/wiki/Bedknobs_and_Broomsticks">Bedknobs and Broomsticks</a> (WAT)</li>
</ul>
</li>
<li>[@13:18](https://youtu.be/8tJEwCvZWsg?t=798) Brian Dear’s <a href="https://www.amazon.com/Friendly-Orange-Glow-Untold-Cyberculture/dp/1101871555">The Friendly Orange Glow</a><ul>
<li>The <a href="https://en.wikipedia.org/wiki/PLATO_(computer_system)">PLATO Terminal</a>
</li>
<li>Control Data Corp (<a href="https://en.wikipedia.org/wiki/Control_Data_Corporation">CDC</a>)</li>
<li>Dr. David Gräper’s <a href="http://www.grapenotes.com">Grapenotes</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Empire_(PLATO_video_game)">Empire game</a></li>
</ul>
</li>
<li>[@20:05](https://youtu.be/8tJEwCvZWsg?t=1205) Write your own lessons in <a href="https://en.wikipedia.org/wiki/TUTOR">TUTOR</a><ul>
<li><a href="https://en.wikipedia.org/wiki/Dartmouth_BASIC">Dartmouth BASIC</a></li>
<li><a href="https://en.wikipedia.org/wiki/SNOBOL">SNOBOL</a></li>
</ul>
</li>
<li>[@23:12](https://youtu.be/8tJEwCvZWsg?t=1392) Dr. David Gräper’s <a href="http://www.grapenotes.com">Grapenotes</a> started in 1977</li>
<li>Xerox <a href="https://en.wikipedia.org/wiki/Xerox_Alto">Alto</a> computer</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 24th, 2021 at 5p Pacific! We’ll be kicking off the discussion with <a href="https://www.imdb.com/title/tt4938484/">Silicon Cowboys</a> (aka the real and sexless <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a>) on the rise of Compaq – and their <a href="https://twitter.com/sdtuck/status/1393453302675771392">aspiration to be a different kind of company</a>. Join us; we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 17 May 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/cfd2df25/91b5a68a.mp3" length="28305206" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>1769</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 17, 2021</b></p><p>golang asserts and the PLATO terminal</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers included <a href="https://twitter.com/adamhjk/">Adam Jacob</a>, <a href="https://twitter.com/mranney">Matt Ranney</a>, <a href="https://twitter.com/NimaJohari">Nima Johari</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/aka_pugs">Tom Lyon</a>, and <a href="https://twitter.com/c50bae86ae1b461">Bob Mader</a> (and thanks to <a href="https://twitter.com/morrislaw93?lang=en">Jeremy Morris</a> for <a href="https://twitter.com/MorrisLaw93/status/1394497085592981510">catching Bob’s profile!</a>).</p><p>(Did we miss your name and/or get it wrong? Drop a PR!)</p><p>We recorded the space, but we had some challenges, and we lost the recording when the first Twitter Space died at around 5:30p. We recorded the second half though; <a href="https://youtu.be/8tJEwCvZWsg">the recording is here</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>Khan Academy <a href="https://blog.khanacademy.org/half-a-million-lines-of-go/">blog entry</a> on Go</li>
<li>Adam’s blog entry, <a href="http://dtrace.org/blogs/ahl/2016/08/02/i-love-go-i-hate-go/">I Love Go, I Hate Go</a> &gt; I found novelty in the strictures, but objected to some of the specifics</li>
<li>[@2:40](https://youtu.be/8tJEwCvZWsg?t=160) Go’s assertion <a href="https://golang.org/doc/faq#assertions">assertion</a>
</li>
<li><a href="https://elm-lang.org/">The Elm Language</a></li>
<li>[@4:40](https://youtu.be/8tJEwCvZWsg?t=280) Lionizing Unix &gt; 7th edition is amazing, incredible, a break through.. &gt; and it’s also kind of a shitty engineering artifact that needed a lot of work.</li>
<li>[@6:32](https://youtu.be/8tJEwCvZWsg?t=392) <a href="https://en.wikipedia.org/wiki/Core_dump">Core dumps</a>
</li>
<li>[@7:03](https://youtu.be/8tJEwCvZWsg?t=423) Impromptu PSA: <ul>
<li>Happy 81st Birthday <a href="https://en.wikipedia.org/wiki/Alan_Kay">Alan Kay</a>!</li>
<li>Alan Kay tribute <a href="https://www.youtube.com/watch?v=AnrlSqtpOkw">video to Ted Nelson</a>, including the story of how Alan Kay and his wife – <a href="https://en.wikipedia.org/wiki/Bonnie_MacBird">Bonnie MacBird</a> – were brought together by <a href="https://en.wikipedia.org/wiki/Ted_Nelson">Ted Nelson</a>, and how PARC inspired her to write <a href="https://en.wikipedia.org/wiki/Tron">TRON</a> (!)</li>
<li>
<a href="https://en.wikipedia.org/wiki/Bedknobs_and_Broomsticks">Bedknobs and Broomsticks</a> (WAT)</li>
</ul>
</li>
<li>[@13:18](https://youtu.be/8tJEwCvZWsg?t=798) Brian Dear’s <a href="https://www.amazon.com/Friendly-Orange-Glow-Untold-Cyberculture/dp/1101871555">The Friendly Orange Glow</a><ul>
<li>The <a href="https://en.wikipedia.org/wiki/PLATO_(computer_system)">PLATO Terminal</a>
</li>
<li>Control Data Corp (<a href="https://en.wikipedia.org/wiki/Control_Data_Corporation">CDC</a>)</li>
<li>Dr. David Gräper’s <a href="http://www.grapenotes.com">Grapenotes</a>
</li>
<li><a href="https://en.wikipedia.org/wiki/Empire_(PLATO_video_game)">Empire game</a></li>
</ul>
</li>
<li>[@20:05](https://youtu.be/8tJEwCvZWsg?t=1205) Write your own lessons in <a href="https://en.wikipedia.org/wiki/TUTOR">TUTOR</a><ul>
<li><a href="https://en.wikipedia.org/wiki/Dartmouth_BASIC">Dartmouth BASIC</a></li>
<li><a href="https://en.wikipedia.org/wiki/SNOBOL">SNOBOL</a></li>
</ul>
</li>
<li>[@23:12](https://youtu.be/8tJEwCvZWsg?t=1392) Dr. David Gräper’s <a href="http://www.grapenotes.com">Grapenotes</a> started in 1977</li>
<li>Xerox <a href="https://en.wikipedia.org/wiki/Xerox_Alto">Alto</a> computer</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 24th, 2021 at 5p Pacific! We’ll be kicking off the discussion with <a href="https://www.imdb.com/title/tt4938484/">Silicon Cowboys</a> (aka the real and sexless <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a>) on the rise of Compaq – and their <a href="https://twitter.com/sdtuck/status/1393453302675771392">aspiration to be a different kind of company</a>. Join us; we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>A Requiem for SPARC with Tom Lyon</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>2</itunes:episode>
      <podcast:episode>2</podcast:episode>
      <itunes:title>A Requiem for SPARC with Tom Lyon</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">b5fe1a6a-0e29-432e-86dd-850cd6d7d6d0</guid>
      <link>https://share.transistor.fm/s/b8d12de1</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 10, 2021</b></p><p>A Requiem for SPARC with Tom Lyon</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to [@bcantrill](https://twitter.com/bcantrill) and [@ahl](https://twitter.com/ahl), speakers included special guest <a href="https://twitter.com/aka_pugs">Tom Lyon</a> plus <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/kebesays">Dan McDonald</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/postwait">Theo Schlossnagle</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, and [@perlhack](https://twitter.com/perlhack).</p><p>We recorded the space; <a href="https://youtu.be/79NNXn5Kr90">the recording is here</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@2:06](https://youtu.be/79NNXn5Kr90?t=126) SPARC <a href="https://twitter.com/aka_pugs/status/1391238774978347010">30th anniversary dinner</a> &gt; SPARC was an amazing achievement for its time, &gt; but there were some nasty trade-offs made.</li>
<li>[@2:56](https://youtu.be/79NNXn5Kr90?t=176) illumos <a href="https://github.com/illumos/ipd/blob/master/ipd/0019/README.md">announcement</a> on the end of <a href="https://en.wikipedia.org/wiki/SPARC">SPARC</a> support<ul><li><a href="https://en.wikipedia.org/wiki/SPARCstation_2">SPARCstation 2</a></li></ul>
</li>
<li>[@4:37](https://youtu.be/79NNXn5Kr90?t=277) “There is no photography allowed in the bring-up lab” story<ul><li>
<a href="https://en.wikipedia.org/wiki/SPARCstation">SPARCstation 1</a> (code-named Campus) &gt; They bricked their first CPU..</li></ul>
</li>
<li>[@6:23](https://youtu.be/79NNXn5Kr90?t=383) <a href="https://en.wikipedia.org/wiki/UltraSPARC_II">UltraSPARC-II</a> E-cache <a href="https://www.theregister.com/2001/03/07/sun_suffers_ultrasparc_ii_cache/">parity error</a>
</li>
<li>[@8:51](https://youtu.be/79NNXn5Kr90?t=531) <a href="https://en.wikipedia.org/wiki/Register_window">Register windows</a> &gt; Most people don’t know, about that first SPARC, &gt; there was no integer multiply or divide..<br> &gt; It would trap on the instructions.</li>
<li>I feel so decadent, I’ve just been sprinkling multiplications around my code for years.</li>
<li>[@9:55](https://youtu.be/79NNXn5Kr90?t=595) popc instruction (also called <a href="https://en.wikipedia.org/wiki/Hamming_weight">Hamming Weight</a>)<ul>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_7030_Stretch">IBM Stretch</a> 1961, and the one-of-a-kind <a href="https://en.wikipedia.org/wiki/IBM_7950_Harvest">IBM Harvest</a> made for the NSA</li>
<li>Henry Warren’s 2002 <a href="https://www.google.com/books/edition/Hacker_s_Delight/VicPJYM0I5QC">Hacker’s Delight</a> Ch. 5 shows a ~20 instruction algorithm (no branches, only adds/shifts/masks by constants) &gt; Warren: According to computer folklore, the population count function is important to the &gt; National Security Agency. No one (outside of NSA) seems to know just what they use it for, &gt; but it may be in cryptography work or in searching huge amounts of material.</li>
<li>According to <a href="https://www.agner.org/optimize/">Agner Fog</a>, <a href="https://en.wikipedia.org/wiki/Ice_Lake_(microprocessor)">Ice Lake</a> performs popcnt with a 3 cycle latency, and <a href="https://en.wikipedia.org/wiki/Zen_3">Zen 3</a> with just 1 cycle latency.</li>
<li>Phil Bagwell’s 2001 <a href="https://scholar.google.com/scholar_lookup?author=bagwell&amp;title=ideal+hash+trees">Ideal Hash Trees</a> depend on pop count &gt; Bagwell: Note that the performance of the algorithm is seriously impacted &gt; by the poor execution speed of the POPCT emulation in Java, a problem &gt; the Java designers may wish to address. <ul><li>Persistent versions of Bagwell’s trees are used for the built-in hash maps of Clojure, and in libraries for Scala etc.</li></ul>
</li>
</ul>
</li>
<li>[@11:39](https://youtu.be/79NNXn5Kr90?t=699) This was the debate between Roger Faulkner and Jeff Bonwick: register windows<ul><li>
<a href="https://thenewstack.io/remembering-roger-faulkner/">Roger Faulkner</a> (RIP) thought they were horrific</li></ul>
</li>
<li>[@12:35](https://youtu.be/79NNXn5Kr90?t=755) Register fishing: <a href="http://dtrace.org/blogs/bmc/2005/01/25/solaris-10-revealed/">Bryan’s version</a> and <a href="https://github.com/illumos/illumos-gate/blob/eee96f107560ac00d5cc32e4aa8a02376aaf19d4/usr/src/uts/sparc/dtrace/dtrace_asm.s#L430">Adam’s version</a> &gt; When you want to know the state of some other process, you have to flush &gt; those register windows to memory to be able to recover the stack trace.<ul>
<li>[@14:30](https://youtu.be/79NNXn5Kr90?t=870) <a href="https://en.wikipedia.org/wiki/Delay_slot">Delay slot</a> &gt; We sat around the lunch table talking about how crazy it would &gt; be to have a branch that executed right after a branch.</li>
<li>DCTI couple (delayed control transfer instruction)</li>
<li>[@15:31](https://youtu.be/79NNXn5Kr90?t=931) “Well, the instruction set doesn’t allow that..” story &gt; Bedlam. As far as Solaris kernel discussions go, bedlam.</li>
<li><a href="https://en.wikipedia.org/wiki/Leibniz%E2%80%93Newton_calculus_controversy">Leibniz vs. Newton</a></li>
</ul>
</li>
<li>[@20:14](https://youtu.be/79NNXn5Kr90?t=1214) <a href="https://stackoverflow.com/questions/604119/how-is-an-annulled-branch-different-from-a-regular-branch">Annulled branches</a>
</li>
<li>[@22:17](https://youtu.be/79NNXn5Kr90?t=1337) Praise for SPARC<ul><li>SPARC <a href="https://stackoverflow.com/questions/11743464/what-is-the-corresponding-register-in-sparc-architecture-for-x86-cr3">address space identifiers</a> &gt; When we were porting Solaris to x86, and deciding what fraction of the &gt; address space would belong to the kernel vs the user, it felt disgusting to me.</li></ul>
</li>
<li>[@25:26](https://youtu.be/79NNXn5Kr90?t=1526) Software-filled <a href="https://en.wikipedia.org/wiki/Translation_lookaside_buffer">TLB</a> &gt; They just didn’t have the room to cram a hardware page table walk into the chip.<ul><li>
<a href="https://en.wikipedia.org/wiki/MIPS_architecture">MIPS</a> would give you a trap on a VAC conflict (virtual address cache)</li></ul>
</li>
<li>[@27:34](https://youtu.be/79NNXn5Kr90?t=1654) It was slow, it was late, and it had a lot of problems, it was wrong.<ul>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_III">UltraSPARC-III</a>, code-named “Cheetah” &gt; It’s weird, I compile this thing over and over, and every 80th time when &gt; I compile and run it, it’s 40x slower..</li>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_IV">UltraSPARC-IV+</a>, code-named “Panther”</li>
</ul>
</li>
<li>[@32:17](https://youtu.be/79NNXn5Kr90?t=1937) Does the Viking I-cache bug ring a bell?<ul>
<li>
<a href="https://en.wikipedia.org/wiki/SuperSPARC">SuperSPARC</a>, code-named “Viking” &gt; You’d have to DC balance the I-cache. If you had too many zeros, &gt; they’d start flipping to ones.</li>
<li>E-cache <a href="https://www.theregister.com/2001/03/07/sun_suffers_ultrasparc_ii_cache/">parity error</a> &gt; It was due to everything <em>but</em> high energy particle strikes.</li>
<li>Radioactive boron in our SRAM manufacturing process</li>
</ul>
</li>
<li>[@38:52](https://youtu.be/79NNXn5Kr90?t=2332) “Move it further from the tube” story &gt; When you’re going to have a customer do something, you have to remember there’s &gt; a human being on the other end of that. You cannot have them chasing your theories. &gt; You need to be transparent and honest with them.</li>
<li>[@42:25](https://youtu.be/79NNXn5Kr90?t=2545) <a href="https://en.wikipedia.org/wiki/Micron_Technology">Micron</a> DRAM story</li>
<li>[@44:38](https://youtu.be/79NNXn5Kr90?t=2678) High priced consultants and cosmic rays &gt; They literally lined the roof with lead.. and it didn’t change the error rate at all!</li>
<li>[@46:47](https://youtu.be/79NNXn5Kr90?t=2807) And the SRAM manufacturer was..<ul><li>We’re competing with HP <a href="https://en.wikipedia.org/wiki/HP_Superdome">Superdome</a> and..</li></ul>
</li>
<li>[@48:11](https://youtu.be/79NNXn5Kr90?t=2891) Aftermarket<ul>
<li><a href="https://en.wikipedia.org/wiki/TurboSPARC">TurboSPARC</a></li>
<li><a href="https://en.wikipedia.org/wiki/Ross_Technology">Ross Technology</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Ultra_1">Ultra 1</a>, code-named “Electron”</li>
</ul>
</li>
<li>[@51:34](https://youtu.be/79NNXn5Kr90?t=3094) What’s that tapping sound? &gt; Seeing how that particular sausage was made, very very slowly, was discouraging.<ul>
<li>
<a href="https://www.computerworld.com/article/2584199/ibm-set-to-sail-regatta.html">Regatta</a> On a Chip</li>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_T1">UltraSPARC-T1</a>, code-named “Niagara” <ul><li>[@57:15](https://youtu.be/79NNXn5Kr90?t=3435) The only thing we could get to run fast was benchmarks..</li></ul>
</li>
<li>“Balanced” computing</li>
</ul>
</li>
<li>[@59:18](https://youtu.be/79NNXn5Kr90?t=3558) <a href="https://en.wikipedia.org/wiki/Sun_Fire">Sun Fire V880</a>, code-named “Daktari”</li>
<li>[@1:04:14](https://youtu.be/79NNXn5Kr90?t=3854) RISC<ul>
<li>Stanford <a href="https://en.wikipedia.org/wiki/MIPS_architecture">MIPS</a>, <a href="https://en.wikipedia.org/wiki/Berkeley_RISC">Berkeley RISC</a>, <a href="https://en.wikipedia.org/wiki/IBM_801">IBM 801</a>, <a href="https://en.wikipedia.org/wiki/IBM_POWER_instruction_set_architecture">IBM POWER</a>
</li>
<li>
<a href="http://archive.computerhistory.org/resources/access/text/2012/04/102658154-05-01-acc.pdf">Oral History of David Patterson</a> &gt; A bunch of grad students at Stanford and Berkeley were able to make a CPU &gt; that was faster than the industry. RISC was a very big deal when it happened.</li>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_ROMP">IBM ROMP</a> microprocessor <ul><li>Academic Operating System <a href="https://en.wikipedia.org/wiki/IBM_RT_PC">AOS</a>
</li></ul>
</li>
</ul>
</li>
<li>[@1:06:04](https://youtu.be/79NNXn5Kr90?t=3964) <a href="https://en.wikipedia.org/wiki/Intel_iAPX_432">Intel 432</a> “The only constants you need are 0 and 1”<ul>
<li><a href="http://dtrace.org/blogs/bmc/2008/07/18/revisiting-the-intel-432/">Revisiting the Intel 432</a></li>
<li>Robert Colwell’s “Performance Effects of Architectural Complexity in the Intel 432” <a href="https://scholar.google.com/scholar_lookup?author=colwell&amp;title=performance+effects+of+architectural+complexity+in+the+intel+432">paper</a>
</li>
</ul>
</li>
<li>[@1:09:12](https://youtu.be/79NNXn5Kr90?t=4152) Machine learning in the 80s?<ul>
<li>Bill Joy: Open Systems Imperative <a href="https://twitter.com/antranigv/status/1391923857750122496">video</a> ~53mins</li>
<li>Bill Joy: <a href="https://www.wired.com/2000/04/joy-2/">The Future Doesn’t Need Us</a>, ca. 2000</li>
</ul>
</li>
<li>[@1:11:37](https://youtu.be/79NNXn5Kr90?t=4297) The best historical analog for Oxide? &gt; I loved that it was deliberate hardware-software co-design.<ul>
<li>IBM <a href="https://en.wikipedia.org/wiki/IBM_System_i">AS/400</a> &gt; Bill is amazing. He’s clearly the smartest person I’ve ever known. &gt; But you never know what time scale he’s operating in, whether he’s telling you &gt; to do something for tomorrow or for the next century.</li>
<li><a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a></li>
</ul>
</li>
<li>[@1:14:42](https://youtu.be/79NNXn5Kr90?t=4482) How early in Sun’s history were people talking about doing their own CPU?<ul>
<li>Laura’s <a href="https://oxide.computer/blog/lpc55">blog entry</a> on the LPC55 vulnerability</li>
<li><a href="https://en.wikipedia.org/wiki/Hardware_scout">Scout threads</a></li>
</ul>
</li>
<li>[@1:17:11](https://youtu.be/79NNXn5Kr90?t=4631) Finding SPARC bugs &gt; I had a little Sun 4c that I had cranked up to 26k hertz, &gt; and at 26k hertz it stopped at the banner message. &gt; And I came in the next morning <em>and it was at the login prompt!</em> &gt; This little poor machine had managed to boot! &gt; I hit enter and it immediately panicked.<ul><li>Processor state register (PSR), processor interrupt level (PIL)</li></ul>
</li>
<li>[@1:20:35](https://youtu.be/79NNXn5Kr90?t=4835) <a href="https://en.wikipedia.org/wiki/Open_Firmware">OpenBoot</a>, Forth</li>
<li>[@1:21:54](https://youtu.be/79NNXn5Kr90?t=4914) Long lived <a href="https://en.wikipedia.org/wiki/Sun_Enterprise#Enterprise_10000">E10K</a>, code-named “Starfire”</li>
<li>[@1:24:01](https://youtu.be/79NNXn5Kr90?t=5041) Invasive physical attacks</li>
<li>Tom Lyon and Joseph Skudlarek’s USENIX 1985 paper: <a href="https://drive.google.com/file/d/1jVG5YXw_1JNlDwpbLi58dW1dbEQLON3M/view">All The Chips That Fit</a><ul><li><a href="http://www.ozguru.mu.nu/archives/2005/01/happy_meal_ethe.html">Happy Meal Ethernet</a></li></ul>
</li>
<li>Sun keyboard <a href="https://deskthority.net/wiki/File:Sun_Type_5_UK.jpg">photo</a>
</li>
<li>[@1:29:56](https://youtu.be/79NNXn5Kr90?t=5396) The real secret of Sun’s success is that we built them to make ourselves happy. &gt; Open source software in general, you develop it for yourself. &gt; That way there’s at least one person who likes it.</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 17th, 2021 at 5p Pacific! Join us; we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 10, 2021</b></p><p>A Requiem for SPARC with Tom Lyon</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to [@bcantrill](https://twitter.com/bcantrill) and [@ahl](https://twitter.com/ahl), speakers included special guest <a href="https://twitter.com/aka_pugs">Tom Lyon</a> plus <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/kebesays">Dan McDonald</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/postwait">Theo Schlossnagle</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, and [@perlhack](https://twitter.com/perlhack).</p><p>We recorded the space; <a href="https://youtu.be/79NNXn5Kr90">the recording is here</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@2:06](https://youtu.be/79NNXn5Kr90?t=126) SPARC <a href="https://twitter.com/aka_pugs/status/1391238774978347010">30th anniversary dinner</a> &gt; SPARC was an amazing achievement for its time, &gt; but there were some nasty trade-offs made.</li>
<li>[@2:56](https://youtu.be/79NNXn5Kr90?t=176) illumos <a href="https://github.com/illumos/ipd/blob/master/ipd/0019/README.md">announcement</a> on the end of <a href="https://en.wikipedia.org/wiki/SPARC">SPARC</a> support<ul><li><a href="https://en.wikipedia.org/wiki/SPARCstation_2">SPARCstation 2</a></li></ul>
</li>
<li>[@4:37](https://youtu.be/79NNXn5Kr90?t=277) “There is no photography allowed in the bring-up lab” story<ul><li>
<a href="https://en.wikipedia.org/wiki/SPARCstation">SPARCstation 1</a> (code-named Campus) &gt; They bricked their first CPU..</li></ul>
</li>
<li>[@6:23](https://youtu.be/79NNXn5Kr90?t=383) <a href="https://en.wikipedia.org/wiki/UltraSPARC_II">UltraSPARC-II</a> E-cache <a href="https://www.theregister.com/2001/03/07/sun_suffers_ultrasparc_ii_cache/">parity error</a>
</li>
<li>[@8:51](https://youtu.be/79NNXn5Kr90?t=531) <a href="https://en.wikipedia.org/wiki/Register_window">Register windows</a> &gt; Most people don’t know, about that first SPARC, &gt; there was no integer multiply or divide..<br> &gt; It would trap on the instructions.</li>
<li>I feel so decadent, I’ve just been sprinkling multiplications around my code for years.</li>
<li>[@9:55](https://youtu.be/79NNXn5Kr90?t=595) popc instruction (also called <a href="https://en.wikipedia.org/wiki/Hamming_weight">Hamming Weight</a>)<ul>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_7030_Stretch">IBM Stretch</a> 1961, and the one-of-a-kind <a href="https://en.wikipedia.org/wiki/IBM_7950_Harvest">IBM Harvest</a> made for the NSA</li>
<li>Henry Warren’s 2002 <a href="https://www.google.com/books/edition/Hacker_s_Delight/VicPJYM0I5QC">Hacker’s Delight</a> Ch. 5 shows a ~20 instruction algorithm (no branches, only adds/shifts/masks by constants) &gt; Warren: According to computer folklore, the population count function is important to the &gt; National Security Agency. No one (outside of NSA) seems to know just what they use it for, &gt; but it may be in cryptography work or in searching huge amounts of material.</li>
<li>According to <a href="https://www.agner.org/optimize/">Agner Fog</a>, <a href="https://en.wikipedia.org/wiki/Ice_Lake_(microprocessor)">Ice Lake</a> performs popcnt with a 3 cycle latency, and <a href="https://en.wikipedia.org/wiki/Zen_3">Zen 3</a> with just 1 cycle latency.</li>
<li>Phil Bagwell’s 2001 <a href="https://scholar.google.com/scholar_lookup?author=bagwell&amp;title=ideal+hash+trees">Ideal Hash Trees</a> depend on pop count &gt; Bagwell: Note that the performance of the algorithm is seriously impacted &gt; by the poor execution speed of the POPCT emulation in Java, a problem &gt; the Java designers may wish to address. <ul><li>Persistent versions of Bagwell’s trees are used for the built-in hash maps of Clojure, and in libraries for Scala etc.</li></ul>
</li>
</ul>
</li>
<li>[@11:39](https://youtu.be/79NNXn5Kr90?t=699) This was the debate between Roger Faulkner and Jeff Bonwick: register windows<ul><li>
<a href="https://thenewstack.io/remembering-roger-faulkner/">Roger Faulkner</a> (RIP) thought they were horrific</li></ul>
</li>
<li>[@12:35](https://youtu.be/79NNXn5Kr90?t=755) Register fishing: <a href="http://dtrace.org/blogs/bmc/2005/01/25/solaris-10-revealed/">Bryan’s version</a> and <a href="https://github.com/illumos/illumos-gate/blob/eee96f107560ac00d5cc32e4aa8a02376aaf19d4/usr/src/uts/sparc/dtrace/dtrace_asm.s#L430">Adam’s version</a> &gt; When you want to know the state of some other process, you have to flush &gt; those register windows to memory to be able to recover the stack trace.<ul>
<li>[@14:30](https://youtu.be/79NNXn5Kr90?t=870) <a href="https://en.wikipedia.org/wiki/Delay_slot">Delay slot</a> &gt; We sat around the lunch table talking about how crazy it would &gt; be to have a branch that executed right after a branch.</li>
<li>DCTI couple (delayed control transfer instruction)</li>
<li>[@15:31](https://youtu.be/79NNXn5Kr90?t=931) “Well, the instruction set doesn’t allow that..” story &gt; Bedlam. As far as Solaris kernel discussions go, bedlam.</li>
<li><a href="https://en.wikipedia.org/wiki/Leibniz%E2%80%93Newton_calculus_controversy">Leibniz vs. Newton</a></li>
</ul>
</li>
<li>[@20:14](https://youtu.be/79NNXn5Kr90?t=1214) <a href="https://stackoverflow.com/questions/604119/how-is-an-annulled-branch-different-from-a-regular-branch">Annulled branches</a>
</li>
<li>[@22:17](https://youtu.be/79NNXn5Kr90?t=1337) Praise for SPARC<ul><li>SPARC <a href="https://stackoverflow.com/questions/11743464/what-is-the-corresponding-register-in-sparc-architecture-for-x86-cr3">address space identifiers</a> &gt; When we were porting Solaris to x86, and deciding what fraction of the &gt; address space would belong to the kernel vs the user, it felt disgusting to me.</li></ul>
</li>
<li>[@25:26](https://youtu.be/79NNXn5Kr90?t=1526) Software-filled <a href="https://en.wikipedia.org/wiki/Translation_lookaside_buffer">TLB</a> &gt; They just didn’t have the room to cram a hardware page table walk into the chip.<ul><li>
<a href="https://en.wikipedia.org/wiki/MIPS_architecture">MIPS</a> would give you a trap on a VAC conflict (virtual address cache)</li></ul>
</li>
<li>[@27:34](https://youtu.be/79NNXn5Kr90?t=1654) It was slow, it was late, and it had a lot of problems, it was wrong.<ul>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_III">UltraSPARC-III</a>, code-named “Cheetah” &gt; It’s weird, I compile this thing over and over, and every 80th time when &gt; I compile and run it, it’s 40x slower..</li>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_IV">UltraSPARC-IV+</a>, code-named “Panther”</li>
</ul>
</li>
<li>[@32:17](https://youtu.be/79NNXn5Kr90?t=1937) Does the Viking I-cache bug ring a bell?<ul>
<li>
<a href="https://en.wikipedia.org/wiki/SuperSPARC">SuperSPARC</a>, code-named “Viking” &gt; You’d have to DC balance the I-cache. If you had too many zeros, &gt; they’d start flipping to ones.</li>
<li>E-cache <a href="https://www.theregister.com/2001/03/07/sun_suffers_ultrasparc_ii_cache/">parity error</a> &gt; It was due to everything <em>but</em> high energy particle strikes.</li>
<li>Radioactive boron in our SRAM manufacturing process</li>
</ul>
</li>
<li>[@38:52](https://youtu.be/79NNXn5Kr90?t=2332) “Move it further from the tube” story &gt; When you’re going to have a customer do something, you have to remember there’s &gt; a human being on the other end of that. You cannot have them chasing your theories. &gt; You need to be transparent and honest with them.</li>
<li>[@42:25](https://youtu.be/79NNXn5Kr90?t=2545) <a href="https://en.wikipedia.org/wiki/Micron_Technology">Micron</a> DRAM story</li>
<li>[@44:38](https://youtu.be/79NNXn5Kr90?t=2678) High priced consultants and cosmic rays &gt; They literally lined the roof with lead.. and it didn’t change the error rate at all!</li>
<li>[@46:47](https://youtu.be/79NNXn5Kr90?t=2807) And the SRAM manufacturer was..<ul><li>We’re competing with HP <a href="https://en.wikipedia.org/wiki/HP_Superdome">Superdome</a> and..</li></ul>
</li>
<li>[@48:11](https://youtu.be/79NNXn5Kr90?t=2891) Aftermarket<ul>
<li><a href="https://en.wikipedia.org/wiki/TurboSPARC">TurboSPARC</a></li>
<li><a href="https://en.wikipedia.org/wiki/Ross_Technology">Ross Technology</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Ultra_1">Ultra 1</a>, code-named “Electron”</li>
</ul>
</li>
<li>[@51:34](https://youtu.be/79NNXn5Kr90?t=3094) What’s that tapping sound? &gt; Seeing how that particular sausage was made, very very slowly, was discouraging.<ul>
<li>
<a href="https://www.computerworld.com/article/2584199/ibm-set-to-sail-regatta.html">Regatta</a> On a Chip</li>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_T1">UltraSPARC-T1</a>, code-named “Niagara” <ul><li>[@57:15](https://youtu.be/79NNXn5Kr90?t=3435) The only thing we could get to run fast was benchmarks..</li></ul>
</li>
<li>“Balanced” computing</li>
</ul>
</li>
<li>[@59:18](https://youtu.be/79NNXn5Kr90?t=3558) <a href="https://en.wikipedia.org/wiki/Sun_Fire">Sun Fire V880</a>, code-named “Daktari”</li>
<li>[@1:04:14](https://youtu.be/79NNXn5Kr90?t=3854) RISC<ul>
<li>Stanford <a href="https://en.wikipedia.org/wiki/MIPS_architecture">MIPS</a>, <a href="https://en.wikipedia.org/wiki/Berkeley_RISC">Berkeley RISC</a>, <a href="https://en.wikipedia.org/wiki/IBM_801">IBM 801</a>, <a href="https://en.wikipedia.org/wiki/IBM_POWER_instruction_set_architecture">IBM POWER</a>
</li>
<li>
<a href="http://archive.computerhistory.org/resources/access/text/2012/04/102658154-05-01-acc.pdf">Oral History of David Patterson</a> &gt; A bunch of grad students at Stanford and Berkeley were able to make a CPU &gt; that was faster than the industry. RISC was a very big deal when it happened.</li>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_ROMP">IBM ROMP</a> microprocessor <ul><li>Academic Operating System <a href="https://en.wikipedia.org/wiki/IBM_RT_PC">AOS</a>
</li></ul>
</li>
</ul>
</li>
<li>[@1:06:04](https://youtu.be/79NNXn5Kr90?t=3964) <a href="https://en.wikipedia.org/wiki/Intel_iAPX_432">Intel 432</a> “The only constants you need are 0 and 1”<ul>
<li><a href="http://dtrace.org/blogs/bmc/2008/07/18/revisiting-the-intel-432/">Revisiting the Intel 432</a></li>
<li>Robert Colwell’s “Performance Effects of Architectural Complexity in the Intel 432” <a href="https://scholar.google.com/scholar_lookup?author=colwell&amp;title=performance+effects+of+architectural+complexity+in+the+intel+432">paper</a>
</li>
</ul>
</li>
<li>[@1:09:12](https://youtu.be/79NNXn5Kr90?t=4152) Machine learning in the 80s?<ul>
<li>Bill Joy: Open Systems Imperative <a href="https://twitter.com/antranigv/status/1391923857750122496">video</a> ~53mins</li>
<li>Bill Joy: <a href="https://www.wired.com/2000/04/joy-2/">The Future Doesn’t Need Us</a>, ca. 2000</li>
</ul>
</li>
<li>[@1:11:37](https://youtu.be/79NNXn5Kr90?t=4297) The best historical analog for Oxide? &gt; I loved that it was deliberate hardware-software co-design.<ul>
<li>IBM <a href="https://en.wikipedia.org/wiki/IBM_System_i">AS/400</a> &gt; Bill is amazing. He’s clearly the smartest person I’ve ever known. &gt; But you never know what time scale he’s operating in, whether he’s telling you &gt; to do something for tomorrow or for the next century.</li>
<li><a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a></li>
</ul>
</li>
<li>[@1:14:42](https://youtu.be/79NNXn5Kr90?t=4482) How early in Sun’s history were people talking about doing their own CPU?<ul>
<li>Laura’s <a href="https://oxide.computer/blog/lpc55">blog entry</a> on the LPC55 vulnerability</li>
<li><a href="https://en.wikipedia.org/wiki/Hardware_scout">Scout threads</a></li>
</ul>
</li>
<li>[@1:17:11](https://youtu.be/79NNXn5Kr90?t=4631) Finding SPARC bugs &gt; I had a little Sun 4c that I had cranked up to 26k hertz, &gt; and at 26k hertz it stopped at the banner message. &gt; And I came in the next morning <em>and it was at the login prompt!</em> &gt; This little poor machine had managed to boot! &gt; I hit enter and it immediately panicked.<ul><li>Processor state register (PSR), processor interrupt level (PIL)</li></ul>
</li>
<li>[@1:20:35](https://youtu.be/79NNXn5Kr90?t=4835) <a href="https://en.wikipedia.org/wiki/Open_Firmware">OpenBoot</a>, Forth</li>
<li>[@1:21:54](https://youtu.be/79NNXn5Kr90?t=4914) Long lived <a href="https://en.wikipedia.org/wiki/Sun_Enterprise#Enterprise_10000">E10K</a>, code-named “Starfire”</li>
<li>[@1:24:01](https://youtu.be/79NNXn5Kr90?t=5041) Invasive physical attacks</li>
<li>Tom Lyon and Joseph Skudlarek’s USENIX 1985 paper: <a href="https://drive.google.com/file/d/1jVG5YXw_1JNlDwpbLi58dW1dbEQLON3M/view">All The Chips That Fit</a><ul><li><a href="http://www.ozguru.mu.nu/archives/2005/01/happy_meal_ethe.html">Happy Meal Ethernet</a></li></ul>
</li>
<li>Sun keyboard <a href="https://deskthority.net/wiki/File:Sun_Type_5_UK.jpg">photo</a>
</li>
<li>[@1:29:56](https://youtu.be/79NNXn5Kr90?t=5396) The real secret of Sun’s success is that we built them to make ourselves happy. &gt; Open source software in general, you develop it for yourself. &gt; That way there’s at least one person who likes it.</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 17th, 2021 at 5p Pacific! Join us; we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 10 May 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/b8d12de1/283a5a27.mp3" length="89223122" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>5576</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 10, 2021</b></p><p>A Requiem for SPARC with Tom Lyon</p><p>We’ve been holding a Twitter Space weekly on Mondays at 5p for about an hour. In addition to [@bcantrill](https://twitter.com/bcantrill) and [@ahl](https://twitter.com/ahl), speakers included special guest <a href="https://twitter.com/aka_pugs">Tom Lyon</a> plus <a href="https://twitter.com/jmclulow">Joshua Clulow</a>, <a href="https://twitter.com/kebesays">Dan McDonald</a>, <a href="https://twitter.com/dancrossnyc">Dan Cross</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/postwait">Theo Schlossnagle</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, and [@perlhack](https://twitter.com/perlhack).</p><p>We recorded the space; <a href="https://youtu.be/79NNXn5Kr90">the recording is here</a>.</p><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>[@2:06](https://youtu.be/79NNXn5Kr90?t=126) SPARC <a href="https://twitter.com/aka_pugs/status/1391238774978347010">30th anniversary dinner</a> &gt; SPARC was an amazing achievement for its time, &gt; but there were some nasty trade-offs made.</li>
<li>[@2:56](https://youtu.be/79NNXn5Kr90?t=176) illumos <a href="https://github.com/illumos/ipd/blob/master/ipd/0019/README.md">announcement</a> on the end of <a href="https://en.wikipedia.org/wiki/SPARC">SPARC</a> support<ul><li><a href="https://en.wikipedia.org/wiki/SPARCstation_2">SPARCstation 2</a></li></ul>
</li>
<li>[@4:37](https://youtu.be/79NNXn5Kr90?t=277) “There is no photography allowed in the bring-up lab” story<ul><li>
<a href="https://en.wikipedia.org/wiki/SPARCstation">SPARCstation 1</a> (code-named Campus) &gt; They bricked their first CPU..</li></ul>
</li>
<li>[@6:23](https://youtu.be/79NNXn5Kr90?t=383) <a href="https://en.wikipedia.org/wiki/UltraSPARC_II">UltraSPARC-II</a> E-cache <a href="https://www.theregister.com/2001/03/07/sun_suffers_ultrasparc_ii_cache/">parity error</a>
</li>
<li>[@8:51](https://youtu.be/79NNXn5Kr90?t=531) <a href="https://en.wikipedia.org/wiki/Register_window">Register windows</a> &gt; Most people don’t know, about that first SPARC, &gt; there was no integer multiply or divide..<br> &gt; It would trap on the instructions.</li>
<li>I feel so decadent, I’ve just been sprinkling multiplications around my code for years.</li>
<li>[@9:55](https://youtu.be/79NNXn5Kr90?t=595) popc instruction (also called <a href="https://en.wikipedia.org/wiki/Hamming_weight">Hamming Weight</a>)<ul>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_7030_Stretch">IBM Stretch</a> 1961, and the one-of-a-kind <a href="https://en.wikipedia.org/wiki/IBM_7950_Harvest">IBM Harvest</a> made for the NSA</li>
<li>Henry Warren’s 2002 <a href="https://www.google.com/books/edition/Hacker_s_Delight/VicPJYM0I5QC">Hacker’s Delight</a> Ch. 5 shows a ~20 instruction algorithm (no branches, only adds/shifts/masks by constants) &gt; Warren: According to computer folklore, the population count function is important to the &gt; National Security Agency. No one (outside of NSA) seems to know just what they use it for, &gt; but it may be in cryptography work or in searching huge amounts of material.</li>
<li>According to <a href="https://www.agner.org/optimize/">Agner Fog</a>, <a href="https://en.wikipedia.org/wiki/Ice_Lake_(microprocessor)">Ice Lake</a> performs popcnt with a 3 cycle latency, and <a href="https://en.wikipedia.org/wiki/Zen_3">Zen 3</a> with just 1 cycle latency.</li>
<li>Phil Bagwell’s 2001 <a href="https://scholar.google.com/scholar_lookup?author=bagwell&amp;title=ideal+hash+trees">Ideal Hash Trees</a> depend on pop count &gt; Bagwell: Note that the performance of the algorithm is seriously impacted &gt; by the poor execution speed of the POPCT emulation in Java, a problem &gt; the Java designers may wish to address. <ul><li>Persistent versions of Bagwell’s trees are used for the built-in hash maps of Clojure, and in libraries for Scala etc.</li></ul>
</li>
</ul>
</li>
<li>[@11:39](https://youtu.be/79NNXn5Kr90?t=699) This was the debate between Roger Faulkner and Jeff Bonwick: register windows<ul><li>
<a href="https://thenewstack.io/remembering-roger-faulkner/">Roger Faulkner</a> (RIP) thought they were horrific</li></ul>
</li>
<li>[@12:35](https://youtu.be/79NNXn5Kr90?t=755) Register fishing: <a href="http://dtrace.org/blogs/bmc/2005/01/25/solaris-10-revealed/">Bryan’s version</a> and <a href="https://github.com/illumos/illumos-gate/blob/eee96f107560ac00d5cc32e4aa8a02376aaf19d4/usr/src/uts/sparc/dtrace/dtrace_asm.s#L430">Adam’s version</a> &gt; When you want to know the state of some other process, you have to flush &gt; those register windows to memory to be able to recover the stack trace.<ul>
<li>[@14:30](https://youtu.be/79NNXn5Kr90?t=870) <a href="https://en.wikipedia.org/wiki/Delay_slot">Delay slot</a> &gt; We sat around the lunch table talking about how crazy it would &gt; be to have a branch that executed right after a branch.</li>
<li>DCTI couple (delayed control transfer instruction)</li>
<li>[@15:31](https://youtu.be/79NNXn5Kr90?t=931) “Well, the instruction set doesn’t allow that..” story &gt; Bedlam. As far as Solaris kernel discussions go, bedlam.</li>
<li><a href="https://en.wikipedia.org/wiki/Leibniz%E2%80%93Newton_calculus_controversy">Leibniz vs. Newton</a></li>
</ul>
</li>
<li>[@20:14](https://youtu.be/79NNXn5Kr90?t=1214) <a href="https://stackoverflow.com/questions/604119/how-is-an-annulled-branch-different-from-a-regular-branch">Annulled branches</a>
</li>
<li>[@22:17](https://youtu.be/79NNXn5Kr90?t=1337) Praise for SPARC<ul><li>SPARC <a href="https://stackoverflow.com/questions/11743464/what-is-the-corresponding-register-in-sparc-architecture-for-x86-cr3">address space identifiers</a> &gt; When we were porting Solaris to x86, and deciding what fraction of the &gt; address space would belong to the kernel vs the user, it felt disgusting to me.</li></ul>
</li>
<li>[@25:26](https://youtu.be/79NNXn5Kr90?t=1526) Software-filled <a href="https://en.wikipedia.org/wiki/Translation_lookaside_buffer">TLB</a> &gt; They just didn’t have the room to cram a hardware page table walk into the chip.<ul><li>
<a href="https://en.wikipedia.org/wiki/MIPS_architecture">MIPS</a> would give you a trap on a VAC conflict (virtual address cache)</li></ul>
</li>
<li>[@27:34](https://youtu.be/79NNXn5Kr90?t=1654) It was slow, it was late, and it had a lot of problems, it was wrong.<ul>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_III">UltraSPARC-III</a>, code-named “Cheetah” &gt; It’s weird, I compile this thing over and over, and every 80th time when &gt; I compile and run it, it’s 40x slower..</li>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_IV">UltraSPARC-IV+</a>, code-named “Panther”</li>
</ul>
</li>
<li>[@32:17](https://youtu.be/79NNXn5Kr90?t=1937) Does the Viking I-cache bug ring a bell?<ul>
<li>
<a href="https://en.wikipedia.org/wiki/SuperSPARC">SuperSPARC</a>, code-named “Viking” &gt; You’d have to DC balance the I-cache. If you had too many zeros, &gt; they’d start flipping to ones.</li>
<li>E-cache <a href="https://www.theregister.com/2001/03/07/sun_suffers_ultrasparc_ii_cache/">parity error</a> &gt; It was due to everything <em>but</em> high energy particle strikes.</li>
<li>Radioactive boron in our SRAM manufacturing process</li>
</ul>
</li>
<li>[@38:52](https://youtu.be/79NNXn5Kr90?t=2332) “Move it further from the tube” story &gt; When you’re going to have a customer do something, you have to remember there’s &gt; a human being on the other end of that. You cannot have them chasing your theories. &gt; You need to be transparent and honest with them.</li>
<li>[@42:25](https://youtu.be/79NNXn5Kr90?t=2545) <a href="https://en.wikipedia.org/wiki/Micron_Technology">Micron</a> DRAM story</li>
<li>[@44:38](https://youtu.be/79NNXn5Kr90?t=2678) High priced consultants and cosmic rays &gt; They literally lined the roof with lead.. and it didn’t change the error rate at all!</li>
<li>[@46:47](https://youtu.be/79NNXn5Kr90?t=2807) And the SRAM manufacturer was..<ul><li>We’re competing with HP <a href="https://en.wikipedia.org/wiki/HP_Superdome">Superdome</a> and..</li></ul>
</li>
<li>[@48:11](https://youtu.be/79NNXn5Kr90?t=2891) Aftermarket<ul>
<li><a href="https://en.wikipedia.org/wiki/TurboSPARC">TurboSPARC</a></li>
<li><a href="https://en.wikipedia.org/wiki/Ross_Technology">Ross Technology</a></li>
<li>
<a href="https://en.wikipedia.org/wiki/Ultra_1">Ultra 1</a>, code-named “Electron”</li>
</ul>
</li>
<li>[@51:34](https://youtu.be/79NNXn5Kr90?t=3094) What’s that tapping sound? &gt; Seeing how that particular sausage was made, very very slowly, was discouraging.<ul>
<li>
<a href="https://www.computerworld.com/article/2584199/ibm-set-to-sail-regatta.html">Regatta</a> On a Chip</li>
<li>
<a href="https://en.wikipedia.org/wiki/UltraSPARC_T1">UltraSPARC-T1</a>, code-named “Niagara” <ul><li>[@57:15](https://youtu.be/79NNXn5Kr90?t=3435) The only thing we could get to run fast was benchmarks..</li></ul>
</li>
<li>“Balanced” computing</li>
</ul>
</li>
<li>[@59:18](https://youtu.be/79NNXn5Kr90?t=3558) <a href="https://en.wikipedia.org/wiki/Sun_Fire">Sun Fire V880</a>, code-named “Daktari”</li>
<li>[@1:04:14](https://youtu.be/79NNXn5Kr90?t=3854) RISC<ul>
<li>Stanford <a href="https://en.wikipedia.org/wiki/MIPS_architecture">MIPS</a>, <a href="https://en.wikipedia.org/wiki/Berkeley_RISC">Berkeley RISC</a>, <a href="https://en.wikipedia.org/wiki/IBM_801">IBM 801</a>, <a href="https://en.wikipedia.org/wiki/IBM_POWER_instruction_set_architecture">IBM POWER</a>
</li>
<li>
<a href="http://archive.computerhistory.org/resources/access/text/2012/04/102658154-05-01-acc.pdf">Oral History of David Patterson</a> &gt; A bunch of grad students at Stanford and Berkeley were able to make a CPU &gt; that was faster than the industry. RISC was a very big deal when it happened.</li>
<li>
<a href="https://en.wikipedia.org/wiki/IBM_ROMP">IBM ROMP</a> microprocessor <ul><li>Academic Operating System <a href="https://en.wikipedia.org/wiki/IBM_RT_PC">AOS</a>
</li></ul>
</li>
</ul>
</li>
<li>[@1:06:04](https://youtu.be/79NNXn5Kr90?t=3964) <a href="https://en.wikipedia.org/wiki/Intel_iAPX_432">Intel 432</a> “The only constants you need are 0 and 1”<ul>
<li><a href="http://dtrace.org/blogs/bmc/2008/07/18/revisiting-the-intel-432/">Revisiting the Intel 432</a></li>
<li>Robert Colwell’s “Performance Effects of Architectural Complexity in the Intel 432” <a href="https://scholar.google.com/scholar_lookup?author=colwell&amp;title=performance+effects+of+architectural+complexity+in+the+intel+432">paper</a>
</li>
</ul>
</li>
<li>[@1:09:12](https://youtu.be/79NNXn5Kr90?t=4152) Machine learning in the 80s?<ul>
<li>Bill Joy: Open Systems Imperative <a href="https://twitter.com/antranigv/status/1391923857750122496">video</a> ~53mins</li>
<li>Bill Joy: <a href="https://www.wired.com/2000/04/joy-2/">The Future Doesn’t Need Us</a>, ca. 2000</li>
</ul>
</li>
<li>[@1:11:37](https://youtu.be/79NNXn5Kr90?t=4297) The best historical analog for Oxide? &gt; I loved that it was deliberate hardware-software co-design.<ul>
<li>IBM <a href="https://en.wikipedia.org/wiki/IBM_System_i">AS/400</a> &gt; Bill is amazing. He’s clearly the smartest person I’ve ever known. &gt; But you never know what time scale he’s operating in, whether he’s telling you &gt; to do something for tomorrow or for the next century.</li>
<li><a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a></li>
</ul>
</li>
<li>[@1:14:42](https://youtu.be/79NNXn5Kr90?t=4482) How early in Sun’s history were people talking about doing their own CPU?<ul>
<li>Laura’s <a href="https://oxide.computer/blog/lpc55">blog entry</a> on the LPC55 vulnerability</li>
<li><a href="https://en.wikipedia.org/wiki/Hardware_scout">Scout threads</a></li>
</ul>
</li>
<li>[@1:17:11](https://youtu.be/79NNXn5Kr90?t=4631) Finding SPARC bugs &gt; I had a little Sun 4c that I had cranked up to 26k hertz, &gt; and at 26k hertz it stopped at the banner message. &gt; And I came in the next morning <em>and it was at the login prompt!</em> &gt; This little poor machine had managed to boot! &gt; I hit enter and it immediately panicked.<ul><li>Processor state register (PSR), processor interrupt level (PIL)</li></ul>
</li>
<li>[@1:20:35](https://youtu.be/79NNXn5Kr90?t=4835) <a href="https://en.wikipedia.org/wiki/Open_Firmware">OpenBoot</a>, Forth</li>
<li>[@1:21:54](https://youtu.be/79NNXn5Kr90?t=4914) Long lived <a href="https://en.wikipedia.org/wiki/Sun_Enterprise#Enterprise_10000">E10K</a>, code-named “Starfire”</li>
<li>[@1:24:01](https://youtu.be/79NNXn5Kr90?t=5041) Invasive physical attacks</li>
<li>Tom Lyon and Joseph Skudlarek’s USENIX 1985 paper: <a href="https://drive.google.com/file/d/1jVG5YXw_1JNlDwpbLi58dW1dbEQLON3M/view">All The Chips That Fit</a><ul><li><a href="http://www.ozguru.mu.nu/archives/2005/01/happy_meal_ethe.html">Happy Meal Ethernet</a></li></ul>
</li>
<li>Sun keyboard <a href="https://deskthority.net/wiki/File:Sun_Type_5_UK.jpg">photo</a>
</li>
<li>[@1:29:56](https://youtu.be/79NNXn5Kr90?t=5396) The real secret of Sun’s success is that we built them to make ourselves happy. &gt; Open source software in general, you develop it for yourself. &gt; That way there’s at least one person who likes it.</li>
</ul><p>(Did we miss anything? PRs always welcome!)</p><p>Our next Twitter Space will be on May 17th, 2021 at 5p Pacific! Join us; we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Mr. Leventhal, Come here I want to see you</title>
      <itunes:season>1</itunes:season>
      <podcast:season>1</podcast:season>
      <itunes:episode>1</itunes:episode>
      <podcast:episode>1</podcast:episode>
      <itunes:title>Mr. Leventhal, Come here I want to see you</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">750082ed-cb33-49df-934d-74a41e089fca</guid>
      <link>https://share.transistor.fm/s/9cba1a23</link>
      <description>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 3, 2021</b></p><p>Mr. Leventhal, Come here I want to see you</p><p>We’ve been holding a Twitter Space on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/h-WSU3kiXVg">the recording for our Twitter Space for May 3, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on May 3rd included <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/perlhack">Nate</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/baldassarifr">François Baldassari</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/LBelenky">Land Belenky</a>, and Sid?. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Before the recording started, we discussed:</p><ul>
<li>2011 Solaris Family Reunion <a href="https://www.youtube.com/watch?v=g0591H_kHwo">video</a> ~20mins</li>
<li>Katie Moussouris’s <a href="https://www.lutasecurity.com/post/new-clubhouse-security-vulnerabilities-could-happen-to-any-growing-unicorn">blog entry</a> on the Clubhouse vulnerabilities</li>
<li>Laura’s <a href="https://oxide.computer/blog/lpc55">blog entry</a> on the LPC55 vulnerability</li>
<li>Land pointing us to the Atmega 328p MCU in a BK Medical endorectal probe</li>
<li>François on the STM32F103 found in Pebble</li>
<li><a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">Intel Management Engine</a></li>
</ul><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="http://www.aspeedtech.com/server_ast1050/">ASPEED BMC</a> chip</li>
<li>[@1:24](https://youtu.be/h-WSU3kiXVg?t=84) So formal correctness is something that I think we are all very sympathetic with. &gt; It’s very laudable, it’s also very hard.<ul>
<li>From L3 to seL4 What Have We Learnt in 20 Years of L4 Microkernels? (<a href="https://dl.acm.org/doi/10.1145/2517349.2522720">paper</a>)</li>
<li>Who guards the guards? Formal validation of the Arm v8-m architecture specification (<a href="https://dl.acm.org/doi/10.1145/3133912">paper</a>) &gt; Hardware architecture is an area where formal verification is more tenable, &gt; a level you can readily reason about.</li>
</ul>
</li>
<li>Our challenge is how can we satisfy our need for formalism without getting too pedantic about it. You don’t want to lose the forest for the trees.<br> A system we never deliver doesn’t actually improve anyone’s lives, that’s the challenge.</li>
<li>[@5:20](https://youtu.be/h-WSU3kiXVg?t=320) Journal club experiences<ul><li>Bootstrapping Trust in Modern Computers (<a href="https://www.andrew.cmu.edu/user/bparno/papers/BootstrappingTrustBook.pdf">book</a>) &gt; [@9:45](https://youtu.be/h-WSU3kiXVg?t=585) &gt; We’ve tried to build a culture of looking to other work that’s been done. &gt; Not because everything’s been done before, but because you don’t want to have to &gt; relearn something that someone has already learned and talked about.<br> &gt; If you can leverage someone’s wisdom, that’s energy well spent.</li></ul>
</li>
<li>[@11:46](https://youtu.be/h-WSU3kiXVg?t=706) When systems repeat mistakes, engineers feel deprived of agency: “I suffered for nothing.” &gt; Engineering is this complicated balance between seeing the world as it could be, &gt; and accepting the world as it is. &gt; As you get older as an engineer, it’s too easy to no longer see what could be, &gt; and you get mired in the ways the world is broken. You can become pessimistic.</li>
<li>Caitie McCaffrey on Distributed Sagas: A Protocol for Coordinating Microservices (<a href="https://www.youtube.com/watch?v=0UTOLRTwOX0">video</a> ~45min)</li>
<li>[@14:17](https://youtu.be/h-WSU3kiXVg?t=857) It’s dangerous to live only in the future, detached from present reality. <a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a>
</li>
<li>[@16:45](https://youtu.be/h-WSU3kiXVg?t=1005) At Oxide, we ask applicants “when have you been happiest and why? Unhappiest?” Interesting to see that unhappy is all the same story: we were trying to do the right thing and management prevented it. &gt; When I was younger and maybe more idealistic and willing to charge at the windmills, &gt; I stayed too long with a company. &gt; All the developers that interviewed me were gone by the time I got there. &gt; I should have walked out the door, but I was too young and didn’t know better.</li>
<li>[@18:43](https://youtu.be/h-WSU3kiXVg?t=1123) “How do you and your cofounder resolve conflicts?” &gt; I don’t want to hear about how you don’t have conflicts, tell me about how you resolve them.</li>
<li>Folks aren’t able to walk away, they’ve got this commitment both to the work and to their colleagues.<br> I’ve been a dead-ender a couple of times, I’ll go down with the ship.</li>
<li>[@20:28](https://youtu.be/h-WSU3kiXVg?t=1228) In “Soul of a New Machine” (<a href="https://en.wikipedia.org/wiki/The_Soul_of_a_New_Machine">wiki</a>) Tom West says he wants to trust his engineers, but that trust is risk. &gt; I just love that line: that trust is risk. &gt; That’s part of the reason some of these companies &gt; have a hard time trusting their technologists, &gt; they just don’t want to take the risk.</li>
<li>People are so not versed in how to deal with conflict, and there’s nothing scarier than salary negotiation.</li>
<li>They need you, that’s why you’re here, you’ve made it all the way through the interview to this point, you’ve got leverage, now’s the time to use it.</li>
<li>[@23:04](https://youtu.be/h-WSU3kiXVg?t=1384) Oxide: <a href="https://oxide.computer/blog/compensation-as-a-reflection-of-values">Compensation as a Reflection of Values</a> &gt; It takes the need for negotiation out, &gt; because it replaces it with total transparency.</li>
<li>Sometimes it’s not about what you’re getting paid, it’s about what the other person is getting paid. Not wanting to get taken advantage of.</li>
<li>It’s a social experiment for sure.</li>
<li>[@28:07](https://youtu.be/h-WSU3kiXVg?t=1687) Steve Jobs famously tried this at NeXT: pay was transparent but <em>not</em> equal.<ul><li>History of compensation at NeXT (<a href="https://en.wikipedia.org/wiki/NeXT#Corporate_culture_and_community">wiki</a>) (<a href="https://www.quora.com/How-did-Steve-Jobss-experiment-of-publicizing-all-NeXT-employees-salaries-and-having-only-two-pay-grades-fare">quora post</a>) &gt; I think that’s the worst of both worlds, a recipe for disaster.</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 3, 2021</b></p><p>Mr. Leventhal, Come here I want to see you</p><p>We’ve been holding a Twitter Space on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/h-WSU3kiXVg">the recording for our Twitter Space for May 3, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on May 3rd included <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/perlhack">Nate</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/baldassarifr">François Baldassari</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/LBelenky">Land Belenky</a>, and Sid?. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Before the recording started, we discussed:</p><ul>
<li>2011 Solaris Family Reunion <a href="https://www.youtube.com/watch?v=g0591H_kHwo">video</a> ~20mins</li>
<li>Katie Moussouris’s <a href="https://www.lutasecurity.com/post/new-clubhouse-security-vulnerabilities-could-happen-to-any-growing-unicorn">blog entry</a> on the Clubhouse vulnerabilities</li>
<li>Laura’s <a href="https://oxide.computer/blog/lpc55">blog entry</a> on the LPC55 vulnerability</li>
<li>Land pointing us to the Atmega 328p MCU in a BK Medical endorectal probe</li>
<li>François on the STM32F103 found in Pebble</li>
<li><a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">Intel Management Engine</a></li>
</ul><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="http://www.aspeedtech.com/server_ast1050/">ASPEED BMC</a> chip</li>
<li>[@1:24](https://youtu.be/h-WSU3kiXVg?t=84) So formal correctness is something that I think we are all very sympathetic with. &gt; It’s very laudable, it’s also very hard.<ul>
<li>From L3 to seL4 What Have We Learnt in 20 Years of L4 Microkernels? (<a href="https://dl.acm.org/doi/10.1145/2517349.2522720">paper</a>)</li>
<li>Who guards the guards? Formal validation of the Arm v8-m architecture specification (<a href="https://dl.acm.org/doi/10.1145/3133912">paper</a>) &gt; Hardware architecture is an area where formal verification is more tenable, &gt; a level you can readily reason about.</li>
</ul>
</li>
<li>Our challenge is how can we satisfy our need for formalism without getting too pedantic about it. You don’t want to lose the forest for the trees.<br> A system we never deliver doesn’t actually improve anyone’s lives, that’s the challenge.</li>
<li>[@5:20](https://youtu.be/h-WSU3kiXVg?t=320) Journal club experiences<ul><li>Bootstrapping Trust in Modern Computers (<a href="https://www.andrew.cmu.edu/user/bparno/papers/BootstrappingTrustBook.pdf">book</a>) &gt; [@9:45](https://youtu.be/h-WSU3kiXVg?t=585) &gt; We’ve tried to build a culture of looking to other work that’s been done. &gt; Not because everything’s been done before, but because you don’t want to have to &gt; relearn something that someone has already learned and talked about.<br> &gt; If you can leverage someone’s wisdom, that’s energy well spent.</li></ul>
</li>
<li>[@11:46](https://youtu.be/h-WSU3kiXVg?t=706) When systems repeat mistakes, engineers feel deprived of agency: “I suffered for nothing.” &gt; Engineering is this complicated balance between seeing the world as it could be, &gt; and accepting the world as it is. &gt; As you get older as an engineer, it’s too easy to no longer see what could be, &gt; and you get mired in the ways the world is broken. You can become pessimistic.</li>
<li>Caitie McCaffrey on Distributed Sagas: A Protocol for Coordinating Microservices (<a href="https://www.youtube.com/watch?v=0UTOLRTwOX0">video</a> ~45min)</li>
<li>[@14:17](https://youtu.be/h-WSU3kiXVg?t=857) It’s dangerous to live only in the future, detached from present reality. <a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a>
</li>
<li>[@16:45](https://youtu.be/h-WSU3kiXVg?t=1005) At Oxide, we ask applicants “when have you been happiest and why? Unhappiest?” Interesting to see that unhappy is all the same story: we were trying to do the right thing and management prevented it. &gt; When I was younger and maybe more idealistic and willing to charge at the windmills, &gt; I stayed too long with a company. &gt; All the developers that interviewed me were gone by the time I got there. &gt; I should have walked out the door, but I was too young and didn’t know better.</li>
<li>[@18:43](https://youtu.be/h-WSU3kiXVg?t=1123) “How do you and your cofounder resolve conflicts?” &gt; I don’t want to hear about how you don’t have conflicts, tell me about how you resolve them.</li>
<li>Folks aren’t able to walk away, they’ve got this commitment both to the work and to their colleagues.<br> I’ve been a dead-ender a couple of times, I’ll go down with the ship.</li>
<li>[@20:28](https://youtu.be/h-WSU3kiXVg?t=1228) In “Soul of a New Machine” (<a href="https://en.wikipedia.org/wiki/The_Soul_of_a_New_Machine">wiki</a>) Tom West says he wants to trust his engineers, but that trust is risk. &gt; I just love that line: that trust is risk. &gt; That’s part of the reason some of these companies &gt; have a hard time trusting their technologists, &gt; they just don’t want to take the risk.</li>
<li>People are so not versed in how to deal with conflict, and there’s nothing scarier than salary negotiation.</li>
<li>They need you, that’s why you’re here, you’ve made it all the way through the interview to this point, you’ve got leverage, now’s the time to use it.</li>
<li>[@23:04](https://youtu.be/h-WSU3kiXVg?t=1384) Oxide: <a href="https://oxide.computer/blog/compensation-as-a-reflection-of-values">Compensation as a Reflection of Values</a> &gt; It takes the need for negotiation out, &gt; because it replaces it with total transparency.</li>
<li>Sometimes it’s not about what you’re getting paid, it’s about what the other person is getting paid. Not wanting to get taken advantage of.</li>
<li>It’s a social experiment for sure.</li>
<li>[@28:07](https://youtu.be/h-WSU3kiXVg?t=1687) Steve Jobs famously tried this at NeXT: pay was transparent but <em>not</em> equal.<ul><li>History of compensation at NeXT (<a href="https://en.wikipedia.org/wiki/NeXT#Corporate_culture_and_community">wiki</a>) (<a href="https://www.quora.com/How-did-Steve-Jobss-experiment-of-publicizing-all-NeXT-employees-salaries-and-having-only-two-pay-grades-fare">quora post</a>) &gt; I think that’s the worst of both worlds, a recipe for disaster.</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </content:encoded>
      <pubDate>Mon, 03 May 2021 17:00:00 -0700</pubDate>
      <author>Oxide Computer Company</author>
      <enclosure url="https://media.transistor.fm/9cba1a23/bd612468.mp3" length="29842425" type="audio/mpeg"/>
      <itunes:author>Oxide Computer Company</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/29256/full_1648490100-artwork.jpg"/>
      <itunes:duration>1865</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><b>Oxide and Friends Twitter Space: May 3, 2021</b></p><p>Mr. Leventhal, Come here I want to see you</p><p>We’ve been holding a Twitter Space on Mondays at 5p for about an hour. Even though it’s not (yet?) a feature of Twitter Spaces, we have been recording them all; here is <a href="https://youtu.be/h-WSU3kiXVg">the recording for our Twitter Space for May 3, 2021</a>.</p><p>In addition to <a href="https://twitter.com/bcantrill">Bryan Cantrill</a> and <a href="https://twitter.com/ahl">Adam Leventhal</a>, speakers on May 3rd included <a href="https://twitter.com/openlabbott">Laura Abbott</a>, <a href="https://twitter.com/perlhack">Nate</a>, <a href="https://twitter.com/antranigv">Antranig Vartanian</a>, <a href="https://twitter.com/baldassarifr">François Baldassari</a>, <a href="https://twitter.com/tomk_">Tom Killalea</a>, <a href="https://twitter.com/LBelenky">Land Belenky</a>, and Sid?. (Did we miss your name and/or get it wrong? Drop a PR!)</p><p>Before the recording started, we discussed:</p><ul>
<li>2011 Solaris Family Reunion <a href="https://www.youtube.com/watch?v=g0591H_kHwo">video</a> ~20mins</li>
<li>Katie Moussouris’s <a href="https://www.lutasecurity.com/post/new-clubhouse-security-vulnerabilities-could-happen-to-any-growing-unicorn">blog entry</a> on the Clubhouse vulnerabilities</li>
<li>Laura’s <a href="https://oxide.computer/blog/lpc55">blog entry</a> on the LPC55 vulnerability</li>
<li>Land pointing us to the Atmega 328p MCU in a BK Medical endorectal probe</li>
<li>François on the STM32F103 found in Pebble</li>
<li><a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">Intel Management Engine</a></li>
</ul><p>Some of the topics we hit on, in the order that we hit them:</p><ul>
<li>
<a href="http://www.aspeedtech.com/server_ast1050/">ASPEED BMC</a> chip</li>
<li>[@1:24](https://youtu.be/h-WSU3kiXVg?t=84) So formal correctness is something that I think we are all very sympathetic with. &gt; It’s very laudable, it’s also very hard.<ul>
<li>From L3 to seL4 What Have We Learnt in 20 Years of L4 Microkernels? (<a href="https://dl.acm.org/doi/10.1145/2517349.2522720">paper</a>)</li>
<li>Who guards the guards? Formal validation of the Arm v8-m architecture specification (<a href="https://dl.acm.org/doi/10.1145/3133912">paper</a>) &gt; Hardware architecture is an area where formal verification is more tenable, &gt; a level you can readily reason about.</li>
</ul>
</li>
<li>Our challenge is how can we satisfy our need for formalism without getting too pedantic about it. You don’t want to lose the forest for the trees.<br> A system we never deliver doesn’t actually improve anyone’s lives, that’s the challenge.</li>
<li>[@5:20](https://youtu.be/h-WSU3kiXVg?t=320) Journal club experiences<ul><li>Bootstrapping Trust in Modern Computers (<a href="https://www.andrew.cmu.edu/user/bparno/papers/BootstrappingTrustBook.pdf">book</a>) &gt; [@9:45](https://youtu.be/h-WSU3kiXVg?t=585) &gt; We’ve tried to build a culture of looking to other work that’s been done. &gt; Not because everything’s been done before, but because you don’t want to have to &gt; relearn something that someone has already learned and talked about.<br> &gt; If you can leverage someone’s wisdom, that’s energy well spent.</li></ul>
</li>
<li>[@11:46](https://youtu.be/h-WSU3kiXVg?t=706) When systems repeat mistakes, engineers feel deprived of agency: “I suffered for nothing.” &gt; Engineering is this complicated balance between seeing the world as it could be, &gt; and accepting the world as it is. &gt; As you get older as an engineer, it’s too easy to no longer see what could be, &gt; and you get mired in the ways the world is broken. You can become pessimistic.</li>
<li>Caitie McCaffrey on Distributed Sagas: A Protocol for Coordinating Microservices (<a href="https://www.youtube.com/watch?v=0UTOLRTwOX0">video</a> ~45min)</li>
<li>[@14:17](https://youtu.be/h-WSU3kiXVg?t=857) It’s dangerous to live only in the future, detached from present reality. <a href="https://en.wikipedia.org/wiki/Optative_(Ancient_Greek)">Optative voice</a>
</li>
<li>[@16:45](https://youtu.be/h-WSU3kiXVg?t=1005) At Oxide, we ask applicants “when have you been happiest and why? Unhappiest?” Interesting to see that unhappy is all the same story: we were trying to do the right thing and management prevented it. &gt; When I was younger and maybe more idealistic and willing to charge at the windmills, &gt; I stayed too long with a company. &gt; All the developers that interviewed me were gone by the time I got there. &gt; I should have walked out the door, but I was too young and didn’t know better.</li>
<li>[@18:43](https://youtu.be/h-WSU3kiXVg?t=1123) “How do you and your cofounder resolve conflicts?” &gt; I don’t want to hear about how you don’t have conflicts, tell me about how you resolve them.</li>
<li>Folks aren’t able to walk away, they’ve got this commitment both to the work and to their colleagues.<br> I’ve been a dead-ender a couple of times, I’ll go down with the ship.</li>
<li>[@20:28](https://youtu.be/h-WSU3kiXVg?t=1228) In “Soul of a New Machine” (<a href="https://en.wikipedia.org/wiki/The_Soul_of_a_New_Machine">wiki</a>) Tom West says he wants to trust his engineers, but that trust is risk. &gt; I just love that line: that trust is risk. &gt; That’s part of the reason some of these companies &gt; have a hard time trusting their technologists, &gt; they just don’t want to take the risk.</li>
<li>People are so not versed in how to deal with conflict, and there’s nothing scarier than salary negotiation.</li>
<li>They need you, that’s why you’re here, you’ve made it all the way through the interview to this point, you’ve got leverage, now’s the time to use it.</li>
<li>[@23:04](https://youtu.be/h-WSU3kiXVg?t=1384) Oxide: <a href="https://oxide.computer/blog/compensation-as-a-reflection-of-values">Compensation as a Reflection of Values</a> &gt; It takes the need for negotiation out, &gt; because it replaces it with total transparency.</li>
<li>Sometimes it’s not about what you’re getting paid, it’s about what the other person is getting paid. Not wanting to get taken advantage of.</li>
<li>It’s a social experiment for sure.</li>
<li>[@28:07](https://youtu.be/h-WSU3kiXVg?t=1687) Steve Jobs famously tried this at NeXT: pay was transparent but <em>not</em> equal.<ul><li>History of compensation at NeXT (<a href="https://en.wikipedia.org/wiki/NeXT#Corporate_culture_and_community">wiki</a>) (<a href="https://www.quora.com/How-did-Steve-Jobss-experiment-of-publicizing-all-NeXT-employees-salaries-and-having-only-two-pay-grades-fare">quora post</a>) &gt; I think that’s the worst of both worlds, a recipe for disaster.</li></ul>
</li>
</ul><p>If we got something wrong or missed something, please file a PR! Our next Twitter space will likely be on Monday at 5p Pacific Time; stay tuned to our Twitter feeds for details. We’d love to have you join us, as we always love to hear from new speakers!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
  </channel>
</rss>
